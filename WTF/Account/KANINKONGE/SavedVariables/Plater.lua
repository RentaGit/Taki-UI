
PlaterDB = {
	["captured_spells"] = {
		[79849] = {
			["isChanneled"] = false,
			["source"] = "Kirin Tor Guardian",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 104091,
		},
		[259277] = {
			["source"] = "Fox",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[261616] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Katy Stampwhistle",
			["npcID"] = 132969,
		},
		[48168] = {
			["source"] = "Matron Ossela",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 96955,
		},
		[386176] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Unknown",
			["npcID"] = 17252,
		},
		[201633] = {
			["source"] = "Earthen Wall Totem",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 100943,
		},
		[211887] = {
			["source"] = "Elisande",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 106643,
		},
		[109972] = {
			["isChanneled"] = false,
			["source"] = "Jessica Rogers",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 54485,
		},
		[86603] = {
			["source"] = "Gavin Marlsbury",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 61838,
		},
		[7870] = {
			["isChanneled"] = false,
			["source"] = "Selwena",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 1863,
		},
		[90328] = {
			["source"] = "Unknown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[198839] = {
			["isChanneled"] = false,
			["source"] = "Earthen Wall Totem",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 100943,
		},
		[422090] = {
			["isChanneled"] = false,
			["source"] = "Treant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 54983,
		},
		[91797] = {
			["source"] = "Ratgrinder",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 26125,
		},
		[260249] = {
			["source"] = "Unknown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[196816] = {
			["source"] = "Divine Image",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 198236,
		},
		[3110] = {
			["isChanneled"] = false,
			["source"] = "Tartai",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 416,
		},
		[23736] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Sayge",
			["npcID"] = 14822,
		},
		[17253] = {
			["isChanneled"] = false,
			["source"] = "Unknown",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[422094] = {
			["isChanneled"] = false,
			["source"] = "Treant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 54983,
		},
		[166302] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Blingtron 5000",
			["npcID"] = 77789,
		},
		[79962] = {
			["source"] = "Nelur Lightsown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 96954,
		},
		[109765] = {
			["source"] = "Jessica Rogers",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 54485,
		},
		[327942] = {
			["isChanneled"] = false,
			["source"] = "Windfury Totem",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6112,
		},
		[5672] = {
			["isChanneled"] = false,
			["source"] = "Healing Stream Totem",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3527,
		},
		[19483] = {
			["source"] = "Blasphemy",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 185584,
		},
		[108446] = {
			["isChanneled"] = false,
			["source"] = "Selwena",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 1863,
		},
		[2649] = {
			["isChanneled"] = false,
			["source"] = "Fox",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[465] = {
			["source"] = "Captain Garrick",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 209057,
		},
		[377589] = {
			["source"] = "Ratgrinder",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 26125,
		},
		[57984] = {
			["isChanneled"] = false,
			["source"] = "Greater Fire Elemental",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 95061,
		},
		[422382] = {
			["isChanneled"] = false,
			["source"] = "Treant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 54983,
		},
		[153310] = {
			["source"] = "Race MiniZep",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 76016,
		},
		[355586] = {
			["source"] = "Static Field Totem",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 179867,
		},
		[79892] = {
			["source"] = "Murgha the Tempered",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 96957,
		},
		[171982] = {
			["source"] = "Tartai",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 416,
		},
		[390599] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Child of Ohn'ahra",
			["npcID"] = 191869,
		},
		[355619] = {
			["isChanneled"] = false,
			["source"] = "Static Field Totem",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 179867,
		},
		[101260] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Darkmoon Faire Mystic Mage",
			["npcID"] = 54334,
		},
	},
	["profileKeys"] = {
		["Hunteraki - Frostmane"] = "Default",
		["Takilock - Kazzak"] = "Default",
		["Rintake - Ragnaros"] = "Default",
		["Huntaki - Ravencrest"] = "Default",
		["Rentaki - Kazzak"] = "TakUI",
		["Takidin - Kazzak"] = "TakUI",
		["Takikin - Kazzak"] = "Default",
		["Rentakisham - EU Mythic Dungeons"] = "Default",
		["Takibank - Argent Dawn"] = "Default",
		["Takii - Frostmane"] = "Default",
		["Arcataki - Doomhammer"] = "Default",
		["Takidemon - Kazzak"] = "TakUI",
		["Takidari - Kazzak"] = "Default",
		["Taaku - Kazzak"] = "TakUI",
		["Ivelea - Argent Dawn"] = "Default",
		["Takided - Kazzak"] = "TakUI",
		["Takeera - Kazzak"] = "Default",
		["Thaaeyn - Argent Dawn"] = "Default",
		["Takii - Argent Dawn"] = "Default",
		["Renqq√∏ - Kazzak"] = "TakUI",
		["Takiwar - Kazzak"] = "Default",
		["Felenia - Doomhammer"] = "Default",
		["Renwarri - Kazzak"] = "Default",
		["Takiscoper - Kazzak"] = "Default",
		["Rendudu - Kazzak"] = "TakUI",
		["Rentaco - Kazzak"] = "TakUI",
		["Takitest - Kazzak"] = "Default",
		["Takosa - Kazzak"] = "TakUI",
		["Takii - Doomhammer"] = "Default",
		["Takil - Kazzak"] = "Default",
	},
	["captured_casts"] = {
		[36807] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Murkblood Oracle",
			["npcID"] = 17771,
		},
		[345554] = {
			["npcID"] = 177853,
		},
		[124800] = {
			["npcID"] = 61502,
		},
		[413131] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Harlan Sweete",
			["npcID"] = 126983,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[294362] = {
			["npcID"] = 155908,
		},
		[331223] = {
			["npcID"] = 162763,
		},
		[195320] = {
			["npcID"] = 95866,
		},
		[339415] = {
			["encounterName"] = "Xav the Unfallen",
			["encounterID"] = 2366,
			["npcID"] = 162329,
		},
		[235252] = {
			["npcID"] = 115642,
		},
		[368085] = {
			["npcID"] = 183722,
		},
		[271841] = {
			["npcID"] = 157002,
		},
		[404945] = {
			["source"] = "Winglord Iyazael",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199401,
		},
		[392659] = {
			["npcID"] = 194224,
		},
		[347609] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[228086] = {
			["npcID"] = 114584,
		},
		[320989] = {
			["npcID"] = 156561,
		},
		[347610] = {
			["encounterName"] = "So'azmi",
			["encounterID"] = 2437,
			["npcID"] = 175806,
		},
		[390613] = {
			["npcID"] = 197344,
		},
		[376279] = {
			["encounterName"] = "Terros",
			["npcID"] = 190496,
			["encounterID"] = 2639,
		},
		[329181] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 167406,
			["encounterID"] = 2407,
		},
		[235254] = {
			["npcID"] = 115641,
		},
		[384471] = {
			["npcID"] = 196758,
		},
		[320991] = {
			["npcID"] = 162038,
		},
		[300514] = {
			["npcID"] = 150146,
		},
		[170751] = {
			["npcID"] = 156158,
		},
		[392665] = {
			["npcID"] = 187258,
		},
		[355806] = {
			["npcID"] = 179891,
		},
		[349663] = {
			["encounterName"] = "The Grand Menagerie",
			["encounterID"] = 2441,
			["npcID"] = 176556,
		},
		[339425] = {
			["npcID"] = 173447,
		},
		[384476] = {
			["npcID"] = 192789,
		},
		[210684] = {
			["npcID"] = 105952,
		},
		[318949] = {
			["npcID"] = 163894,
		},
		[386526] = {
			["npcID"] = 187246,
		},
		[331237] = {
			["npcID"] = 162763,
		},
		[31717] = {
			["encounterName"] = "The Black Stalker",
			["npcID"] = 17882,
			["encounterID"] = 1948,
		},
		[353763] = {
			["npcID"] = 179135,
		},
		[355811] = {
			["npcID"] = 177291,
		},
		[392671] = {
			["npcID"] = 186392,
		},
		[321000] = {
			["npcID"] = 177134,
		},
		[323048] = {
			["npcID"] = 160345,
		},
		[390624] = {
			["npcID"] = 197344,
		},
		[392672] = {
			["npcID"] = 196927,
		},
		[382434] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["npcID"] = 189492,
			["encounterID"] = 2607,
		},
		[425437] = {
			["source"] = "Surging Lasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210111,
		},
		[347623] = {
			["encounterName"] = "So'azmi",
			["encounterID"] = 2437,
			["npcID"] = 175806,
		},
		[357862] = {
			["npcID"] = 177903,
		},
		[212735] = {
			["encounterName"] = "Spellblade Aluriel",
			["npcID"] = 104881,
			["encounterID"] = 1871,
		},
		[421343] = {
			["encounterName"] = "Smolderon",
			["source"] = "Smolderon",
			["npcID"] = 200927,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2824,
		},
		[407009] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Ignara",
			["encounterID"] = 2682,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202791,
		},
		[310765] = {
			["npcID"] = 159677,
		},
		[353769] = {
			["npcID"] = 179136,
		},
		[282098] = {
			["encounterName"] = "Conclave of the Chosen",
			["source"] = "Pa'ku's Aspect",
			["encounterID"] = 2268,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 144747,
		},
		[164615] = {
			["encounterName"] = "Gug'rokk",
			["npcID"] = 81767,
			["encounterID"] = 1654,
		},
		[372201] = {
			["npcID"] = 189464,
		},
		[333294] = {
			["npcID"] = 169893,
		},
		[396775] = {
			["npcID"] = 187209,
		},
		[195332] = {
			["encounterName"] = "Ash'Golm",
			["encounterID"] = 1816,
			["npcID"] = 99233,
		},
		[321009] = {
			["encounterName"] = "Kin-Tara",
			["npcID"] = 162059,
			["encounterID"] = 2357,
		},
		[331248] = {
			["npcID"] = 171142,
		},
		[390633] = {
			["npcID"] = 189954,
		},
		[167688] = {
			["encounterName"] = "Nitrogg Thundertower",
			["encounterID"] = 1732,
			["npcID"] = 82721,
		},
		[411111] = {
			["source"] = "Calibrating Scent Matrix",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203606,
		},
		[323058] = {
			["npcID"] = 165609,
		},
		[196357] = {
			["encounterName"] = "Ivanyr",
			["npcID"] = 98203,
			["encounterID"] = 1827,
		},
		[164617] = {
			["npcID"] = 81767,
		},
		[323059] = {
			["encounterName"] = "Ingra Maloch",
			["encounterID"] = 2397,
			["npcID"] = 164804,
		},
		[366062] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 181549,
		},
		[384492] = {
			["npcID"] = 192794,
		},
		[394731] = {
			["source"] = "Unstable Earth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198709,
		},
		[396779] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["npcID"] = 190245,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[357872] = {
			["npcID"] = 177427,
		},
		[384493] = {
			["npcID"] = 184657,
		},
		[396780] = {
			["npcID"] = 195837,
		},
		[22887] = {
			["npcID"] = 17729,
		},
		[339444] = {
			["npcID"] = 173276,
		},
		[392686] = {
			["npcID"] = 191450,
		},
		[172810] = {
			["npcID"] = 81603,
		},
		[323064] = {
			["encounterName"] = "Hakkar, the Soulflayer",
			["encounterID"] = 2395,
			["npcID"] = 164558,
		},
		[188169] = {
			["encounterName"] = "Rokmora",
			["npcID"] = 91003,
			["encounterID"] = 1790,
		},
		[282110] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kaldorei Archer",
			["npcID"] = 210645,
		},
		[353782] = {
			["npcID"] = 179136,
		},
		[355830] = {
			["npcID"] = 179893,
		},
		[415215] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Alliance Archer",
			["npcID"] = 206352,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2672,
		},
		[386547] = {
			["encounterName"] = "Teera and Maruuk",
			["encounterID"] = 2581,
			["npcID"] = 186339,
		},
		[396786] = {
			["npcID"] = 191654,
		},
		[199433] = {
			["npcID"] = 187931,
		},
		[425455] = {
			["source"] = "Surging Lasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210111,
		},
		[296447] = {
			["npcID"] = 152644,
		},
		[390644] = {
			["npcID"] = 189954,
		},
		[114571] = {
			["encounterName"] = "Lorewalker Stonestep",
			["npcID"] = 59051,
			["encounterID"] = 1417,
		},
		[382454] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Azure Dragonspawn",
			["npcID"] = 188802,
		},
		[294401] = {
			["npcID"] = 151815,
		},
		[316927] = {
			["npcID"] = 160394,
		},
		[325119] = {
			["npcID"] = 157212,
		},
		[347645] = {
			["npcID"] = 164905,
		},
		[300547] = {
			["npcID"] = 150142,
		},
		[321025] = {
			["npcID"] = 160358,
		},
		[150290] = {
			["encounterName"] = "Magmolatus",
			["npcID"] = 74571,
			["encounterID"] = 1655,
		},
		[427509] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Earthshaper Telu",
			["encounterID"] = 1757,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83893,
		},
		[366077] = {
			["npcID"] = 183925,
		},
		[172816] = {
			["npcID"] = 155197,
		},
		[417272] = {
			["source"] = "The Lich King",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205305,
		},
		[209676] = {
			["encounterName"] = "Advisor Melandrus",
			["npcID"] = 104218,
			["encounterID"] = 1870,
		},
		[372222] = {
			["encounterName"] = "Azureblade",
			["npcID"] = 186739,
			["encounterID"] = 2585,
		},
		[372223] = {
			["npcID"] = 189265,
		},
		[392701] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormshroud Defender",
			["npcID"] = 192536,
		},
		[394749] = {
			["npcID"] = 198716,
		},
		[265741] = {
			["npcID"] = 135329,
		},
		[343556] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 162689,
		},
		[189200] = {
			["npcID"] = 156244,
		},
		[396798] = {
			["npcID"] = 199498,
		},
		[166675] = {
			["npcID"] = 80937,
		},
		[372226] = {
			["npcID"] = 189265,
		},
		[195344] = {
			["npcID"] = 95866,
		},
		[329224] = {
			["npcID"] = 168022,
		},
		[275983] = {
			["npcID"] = 157571,
		},
		[361989] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 181954,
		},
		[275984] = {
			["npcID"] = 166936,
		},
		[419327] = {
			["source"] = "Timeline Marauder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199748,
		},
		[396802] = {
			["npcID"] = 199498,
		},
		[331275] = {
			["npcID"] = 167533,
		},
		[269843] = {
			["encounterName"] = "Unbound Abomination",
			["npcID"] = 133007,
			["encounterID"] = 2123,
		},
		[364040] = {
			["encounterName"] = "Artificer Xy'mox",
			["encounterID"] = 2553,
			["npcID"] = 184140,
		},
		[300560] = {
			["npcID"] = 150142,
		},
		[46029] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunblade Blood Knight",
			["npcID"] = 24684,
		},
		[321038] = {
			["npcID"] = 162039,
		},
		[396805] = {
			["npcID"] = 192759,
		},
		[409093] = {
			["encounterName"] = "Magmorax",
			["source"] = "Magmorax",
			["encounterID"] = 2683,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201579,
		},
		[396807] = {
			["npcID"] = 192759,
		},
		[366091] = {
			["npcID"] = 181011,
		},
		[392712] = {
			["npcID"] = 192536,
		},
		[123791] = {
			["encounterName"] = "Imperial Vizier Zor'lok",
			["npcID"] = 62980,
			["encounterID"] = 1507,
		},
		[382474] = {
			["npcID"] = 186191,
		},
		[341520] = {
			["npcID"] = 173973,
		},
		[321043] = {
			["npcID"] = 158867,
		},
		[265754] = {
			["npcID"] = 125458,
		},
		[384524] = {
			["encounterName"] = "Watcher Irideus",
			["npcID"] = 189719,
			["encounterID"] = 2615,
		},
		[394763] = {
			["npcID"] = 193127,
		},
		[252687] = {
			["source"] = "Shadowblade Stalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122970,
		},
		[419337] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fel-Watcher Mara",
			["npcID"] = 206925,
		},
		[396812] = {
			["npcID"] = 196576,
		},
		[351762] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176533,
		},
		[394765] = {
			["npcID"] = 189244,
		},
		[260879] = {
			["encounterName"] = "Elder Leaxa",
			["npcID"] = 131318,
			["encounterID"] = 2111,
		},
		[278044] = {
			["npcID"] = 186321,
		},
		[396814] = {
			["npcID"] = 195836,
		},
		[325143] = {
			["npcID"] = 157212,
		},
		[329239] = {
			["npcID"] = 163882,
		},
		[265759] = {
			["npcID"] = 135329,
		},
		[331288] = {
			["npcID"] = 167532,
		},
		[316954] = {
			["npcID"] = 165831,
		},
		[175899] = {
			["npcID"] = 81272,
		},
		[345623] = {
			["npcID"] = 165824,
		},
		[384531] = {
			["encounterName"] = "Gutshot",
			["encounterID"] = 2567,
			["npcID"] = 194745,
		},
		[419343] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["encounterID"] = 2731,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 208445,
		},
		[366102] = {
			["npcID"] = 181011,
		},
		[370198] = {
			["npcID"] = 186386,
		},
		[396819] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fuming Ice Burrower",
			["npcID"] = 197177,
		},
		[359960] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 181398,
		},
		[372247] = {
			["npcID"] = 187941,
		},
		[325149] = {
			["npcID"] = 166544,
		},
		[345627] = {
			["npcID"] = 178462,
		},
		[46543] = {
			["source"] = "Sunblade Cabalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 25363,
		},
		[407060] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "High Seer Jhatal",
			["npcID"] = 199842,
		},
		[357915] = {
			["npcID"] = 177903,
		},
		[394775] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Eldoren the Reborn",
			["npcID"] = 193234,
		},
		[396823] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fuming Ice Burrower",
			["npcID"] = 197177,
		},
		[368155] = {
			["npcID"] = 185505,
		},
		[198428] = {
			["encounterName"] = "Ularogg Cragshaper",
			["npcID"] = 91004,
			["encounterID"] = 1791,
		},
		[390681] = {
			["npcID"] = 189954,
		},
		[319010] = {
			["npcID"] = 169114,
		},
		[347679] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[417303] = {
			["source"] = "The Lich King",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205305,
		},
		[419351] = {
			["source"] = "Infinite Saboteur",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208438,
		},
		[388635] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["npcID"] = 194999,
			["encounterID"] = 2607,
		},
		[378397] = {
			["npcID"] = 191095,
		},
		[421400] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Djaradin Spear",
			["npcID"] = 209973,
		},
		[357920] = {
			["npcID"] = 179684,
		},
		[321061] = {
			["encounterName"] = "The Manastorms",
			["encounterID"] = 2394,
			["npcID"] = 164555,
		},
		[392733] = {
			["npcID"] = 186308,
		},
		[421402] = {
			["source"] = "Primalist Pyremancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209963,
		},
		[204574] = {
			["encounterName"] = "Oakheart",
			["npcID"] = 103344,
			["encounterID"] = 1837,
		},
		[394782] = {
			["npcID"] = 191354,
		},
		[78746] = {
			["encounterName"] = "Omnotron Defense System",
			["npcID"] = 42166,
			["encounterID"] = 1027,
		},
		[407069] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["encounterID"] = 2688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201261,
		},
		[335398] = {
			["npcID"] = 161246,
		},
		[405022] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[368163] = {
			["npcID"] = 178229,
		},
		[329256] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 169271,
			["encounterID"] = 2405,
		},
		[364068] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 183666,
		},
		[267824] = {
			["npcID"] = 135240,
		},
		[417310] = {
			["source"] = "Val'kyr Shadowguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208380,
		},
		[370212] = {
			["npcID"] = 190767,
		},
		[331305] = {
			["npcID"] = 161599,
		},
		[357926] = {
			["npcID"] = 177336,
		},
		[392738] = {
			["npcID"] = 186660,
		},
		[388643] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["npcID"] = 189492,
			["encounterID"] = 2607,
		},
		[325163] = {
			["npcID"] = 171772,
		},
		[368166] = {
			["npcID"] = 183814,
		},
		[372262] = {
			["npcID"] = 189467,
		},
		[396836] = {
			["npcID"] = 194798,
		},
		[316974] = {
			["npcID"] = 161133,
		},
		[319022] = {
			["npcID"] = 158259,
		},
		[364073] = {
			["npcID"] = 184735,
		},
		[351787] = {
			["encounterName"] = "Soulrender Dormazain",
			["npcID"] = 177594,
			["encounterID"] = 2434,
		},
		[353835] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 176565,
		},
		[290355] = {
			["source"] = "Furious Merchant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 148119,
		},
		[423459] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Nymue",
			["encounterID"] = 2708,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 209800,
		},
		[359979] = {
			["encounterName"] = "Skolex, the Insatiable Ravener",
			["encounterID"] = 2542,
			["npcID"] = 181395,
		},
		[353836] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 176565,
		},
		[357932] = {
			["npcID"] = 178810,
		},
		[362028] = {
			["encounterName"] = "The Jailer",
			["npcID"] = 180990,
			["encounterID"] = 2537,
		},
		[427557] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Raszageth's Last Breath",
			["npcID"] = 209912,
		},
		[402985] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gholna",
			["npcID"] = 199853,
		},
		[355887] = {
			["npcID"] = 177573,
		},
		[325171] = {
			["npcID"] = 157212,
		},
		[378413] = {
			["npcID"] = 191111,
		},
		[355888] = {
			["npcID"] = 177807,
		},
		[260894] = {
			["encounterName"] = "Elder Leaxa",
			["source"] = "Elder Leaxa",
			["encounterID"] = 2111,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131318,
		},
		[205605] = {
			["npcID"] = 166137,
		},
		[331316] = {
			["npcID"] = 167538,
		},
		[335412] = {
			["npcID"] = 178660,
		},
		[357938] = {
			["npcID"] = 177336,
		},
		[212773] = {
			["npcID"] = 107073,
		},
		[370225] = {
			["npcID"] = 187159,
		},
		[183081] = {
			["npcID"] = 104091,
		},
		[394800] = {
			["source"] = "Council Earthcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198500,
		},
		[423469] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mosa Umbramane",
			["npcID"] = 210070,
		},
		[378420] = {
			["npcID"] = 187506,
		},
		[357943] = {
			["npcID"] = 180013,
		},
		[327227] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 167406,
			["encounterID"] = 2407,
		},
		[394803] = {
			["npcID"] = 193658,
		},
		[405042] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Thadrion",
			["encounterID"] = 2693,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200913,
		},
		[357944] = {
			["npcID"] = 179768,
		},
		[197418] = {
			["encounterName"] = "Ilysanna Ravencrest",
			["npcID"] = 98696,
			["encounterID"] = 1833,
		},
		[198442] = {
			["npcID"] = 165909,
		},
		[392757] = {
			["npcID"] = 195094,
		},
		[77216] = {
			["source"] = "Kharanos Rifleman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 41182,
		},
		[394806] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Phleep",
			["npcID"] = 193210,
		},
		[396854] = {
			["npcID"] = 184453,
		},
		[325183] = {
			["npcID"] = 164626,
		},
		[355900] = {
			["npcID"] = 177807,
		},
		[316993] = {
			["npcID"] = 167443,
		},
		[396856] = {
			["npcID"] = 191401,
		},
		[308803] = {
			["npcID"] = 158259,
		},
		[327233] = {
			["npcID"] = 168393,
		},
		[323138] = {
			["encounterName"] = "Ingra Maloch",
			["encounterID"] = 2397,
			["npcID"] = 164567,
		},
		[378428] = {
			["npcID"] = 194291,
		},
		[366142] = {
			["npcID"] = 184651,
		},
		[351808] = {
			["npcID"] = 176577,
		},
		[396859] = {
			["npcID"] = 191105,
		},
		[366143] = {
			["npcID"] = 184651,
		},
		[417337] = {
			["source"] = "Sky-Commander Gadrius Orcbane",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207593,
		},
		[197422] = {
			["encounterName"] = "Cordana Felsong",
			["encounterID"] = 1818,
			["npcID"] = 95888,
		},
		[239401] = {
			["encounterName"] = "Demonic Inquisition",
			["npcID"] = 116691,
			["encounterID"] = 2048,
		},
		[150324] = {
			["encounterName"] = "Magmolatus",
			["npcID"] = 74570,
			["encounterID"] = 1655,
		},
		[269900] = {
			["npcID"] = 171141,
		},
		[331333] = {
			["npcID"] = 168659,
		},
		[211757] = {
			["npcID"] = 105617,
		},
		[347716] = {
			["npcID"] = 176394,
		},
		[296523] = {
			["npcID"] = 152708,
		},
		[298571] = {
			["encounterName"] = "Trixie & Naeno",
			["npcID"] = 153756,
			["encounterID"] = 2312,
		},
		[327240] = {
			["npcID"] = 165911,
		},
		[394816] = {
			["source"] = "Shardwing",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201562,
		},
		[339527] = {
			["npcID"] = 173469,
		},
		[12471] = {
			["npcID"] = 17694,
		},
		[75683] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40586,
		},
		[427581] = {
			["source"] = "Stalwart Bristlebruin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210507,
		},
		[235308] = {
			["npcID"] = 116410,
		},
		[360006] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 181398,
		},
		[339529] = {
			["npcID"] = 173448,
		},
		[366150] = {
			["npcID"] = 180906,
		},
		[347721] = {
			["npcID"] = 176396,
		},
		[333387] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168112,
			["encounterID"] = 2417,
		},
		[212784] = {
			["npcID"] = 105715,
		},
		[362056] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["encounterID"] = 2529,
			["npcID"] = 181447,
		},
		[323149] = {
			["encounterName"] = "Ingra Maloch",
			["encounterID"] = 2397,
			["npcID"] = 164567,
		},
		[374343] = {
			["encounterName"] = "Echo of Doragosa",
			["npcID"] = 190609,
			["encounterID"] = 2565,
		},
		[192307] = {
			["encounterName"] = "Hyrja",
			["encounterID"] = 1806,
			["npcID"] = 95833,
		},
		[427585] = {
			["source"] = "Stalwart Bristlebruin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210507,
		},
		[323150] = {
			["encounterName"] = "Lord Chamberlain",
			["encounterID"] = 2381,
			["npcID"] = 165737,
		},
		[260907] = {
			["encounterName"] = "Heartsbane Triad",
			["npcID"] = 131824,
			["encounterID"] = 2113,
		},
		[327246] = {
			["npcID"] = 167524,
		},
		[355915] = {
			["npcID"] = 177816,
		},
		[191284] = {
			["encounterName"] = "Hymdall",
			["encounterID"] = 1805,
			["npcID"] = 94960,
		},
		[159544] = {
			["npcID"] = 82220,
		},
		[212786] = {
			["encounterName"] = "Oakheart",
			["encounterID"] = 1837,
			["npcID"] = 103344,
		},
		[321105] = {
			["npcID"] = 168591,
		},
		[347726] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[93091] = {
			["npcID"] = 951,
		},
		[162617] = {
			["encounterName"] = "Rocketspark and Borka",
			["encounterID"] = 1715,
			["npcID"] = 77816,
		},
		[357967] = {
			["npcID"] = 178897,
		},
		[394827] = {
			["npcID"] = 192045,
		},
		[325205] = {
			["npcID"] = 166936,
		},
		[376399] = {
			["npcID"] = 46914,
		},
		[394829] = {
			["source"] = "Osseous Broodmother",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203348,
		},
		[117665] = {
			["encounterName"] = "Sha of Doubt",
			["encounterID"] = 1439,
			["npcID"] = 56439,
		},
		[335445] = {
			["npcID"] = 180032,
		},
		[364114] = {
			["encounterName"] = "Rygelon",
			["encounterID"] = 2549,
			["npcID"] = 182777,
		},
		[191288] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crashin' Thrashin' Flamer",
			["npcID"] = 76640,
		},
		[302682] = {
			["encounterName"] = "Trixie & Naeno",
			["npcID"] = 150712,
			["encounterID"] = 2312,
		},
		[386640] = {
			["npcID"] = 187242,
		},
		[415309] = {
			["source"] = "Great Glorious Alliance Paladin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207579,
		},
		[370259] = {
			["npcID"] = 187322,
		},
		[294493] = {
			["npcID"] = 186464,
		},
		[394833] = {
			["npcID"] = 187937,
		},
		[388690] = {
			["source"] = "Gorjo the Crab Shackler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193226,
		},
		[407120] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Horde Axe Thrower",
			["encounterID"] = 2672,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203799,
		},
		[400977] = {
			["source"] = "Zaqali Firecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200454,
		},
		[172860] = {
			["npcID"] = 83025,
		},
		[191290] = {
			["npcID"] = 76642,
		},
		[235317] = {
			["npcID"] = 116409,
		},
		[162622] = {
			["source"] = "Jandra Thornbough",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205495,
		},
		[384597] = {
			["npcID"] = 193293,
		},
		[378454] = {
			["npcID"] = 188668,
		},
		[355929] = {
			["npcID"] = 177803,
		},
		[83367] = {
			["npcID"] = 9163,
		},
		[319070] = {
			["npcID"] = 163891,
		},
		[355930] = {
			["npcID"] = 177816,
		},
		[211769] = {
			["npcID"] = 98776,
		},
		[327262] = {
			["npcID"] = 167524,
		},
		[394838] = {
			["npcID"] = 193229,
		},
		[357979] = {
			["npcID"] = 178897,
		},
		[347741] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[366171] = {
			["npcID"] = 184990,
		},
		[409174] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Incarnation of Entropy",
			["npcID"] = 203811,
		},
		[372315] = {
			["encounterName"] = "The Primal Council",
			["npcID"] = 187771,
			["encounterID"] = 2590,
		},
		[357981] = {
			["npcID"] = 177562,
		},
		[355934] = {
			["npcID"] = 177817,
		},
		[211771] = {
			["npcID"] = 105651,
		},
		[223034] = {
			["encounterName"] = "High Botanist Tel'arn",
			["encounterID"] = 1886,
			["npcID"] = 109040,
		},
		[374365] = {
			["encounterName"] = "Magmatusk",
			["npcID"] = 181861,
			["encounterID"] = 2610,
		},
		[409177] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Entropic Hatred",
			["npcID"] = 203809,
		},
		[321124] = {
			["npcID"] = 156815,
		},
		[44504] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wretched Husk",
			["npcID"] = 24690,
		},
		[185152] = {
			["npcID"] = 157820,
		},
		[339557] = {
			["npcID"] = 173464,
		},
		[357987] = {
			["npcID"] = 178757,
		},
		[349797] = {
			["encounterName"] = "The Grand Menagerie",
			["encounterID"] = 2441,
			["npcID"] = 176556,
		},
		[362084] = {
			["npcID"] = 181324,
		},
		[386658] = {
			["npcID"] = 191450,
		},
		[388706] = {
			["npcID"] = 186917,
		},
		[211775] = {
			["npcID"] = 105651,
		},
		[327274] = {
			["npcID"] = 167524,
		},
		[329322] = {
			["npcID"] = 155830,
		},
		[366182] = {
			["npcID"] = 183498,
		},
		[386660] = {
			["encounterName"] = "Leymor",
			["npcID"] = 186644,
			["encounterID"] = 2582,
		},
		[366183] = {
			["npcID"] = 183498,
		},
		[355945] = {
			["npcID"] = 179940,
		},
		[183108] = {
			["npcID"] = 106547,
		},
		[329325] = {
			["npcID"] = 155831,
		},
		[366185] = {
			["npcID"] = 183499,
		},
		[329326] = {
			["npcID"] = 155831,
		},
		[355947] = {
			["npcID"] = 177529,
		},
		[284276] = {
			["encounterName"] = "King Rastakhan",
			["source"] = "King Rastakhan",
			["encounterID"] = 2272,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 145616,
		},
		[325232] = {
			["npcID"] = 177214,
		},
		[327280] = {
			["npcID"] = 167524,
		},
		[294517] = {
			["npcID"] = 151816,
		},
		[337520] = {
			["npcID"] = 159412,
		},
		[331377] = {
			["npcID"] = 157683,
		},
		[366189] = {
			["npcID"] = 183500,
		},
		[343664] = {
			["npcID"] = 162452,
		},
		[290423] = {
			["npcID"] = 144536,
		},
		[366190] = {
			["npcID"] = 183495,
		},
		[384620] = {
			["encounterName"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["npcID"] = 186615,
		},
		[242496] = {
			["npcID"] = 121499,
		},
		[331379] = {
			["npcID"] = 167965,
		},
		[333427] = {
			["npcID"] = 165175,
		},
		[425576] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["npcID"] = 209090,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2786,
		},
		[321141] = {
			["npcID"] = 172040,
		},
		[423529] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Anguished Dream Spirit",
			["npcID"] = 210304,
		},
		[46042] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunblade Warlock",
			["npcID"] = 24686,
		},
		[394861] = {
			["npcID"] = 193229,
		},
		[323190] = {
			["npcID"] = 163121,
		},
		[384623] = {
			["npcID"] = 189471,
		},
		[419435] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Magma Soldier",
			["npcID"] = 209191,
		},
		[339573] = {
			["encounterName"] = "Mordretha",
			["encounterID"] = 2404,
			["npcID"] = 165946,
		},
		[341621] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["npcID"] = 165521,
			["encounterID"] = 2406,
		},
		[228164] = {
			["npcID"] = 114584,
		},
		[382578] = {
			["npcID"] = 184131,
		},
		[125865] = {
			["npcID"] = 64454,
		},
		[366197] = {
			["npcID"] = 183500,
		},
		[294526] = {
			["npcID"] = 151817,
		},
		[386675] = {
			["npcID"] = 189583,
		},
		[366199] = {
			["npcID"] = 183495,
		},
		[329340] = {
			["npcID"] = 165410,
		},
		[46043] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunblade Warlock",
			["npcID"] = 24686,
		},
		[394869] = {
			["npcID"] = 188693,
		},
		[211785] = {
			["npcID"] = 105682,
		},
		[335485] = {
			["npcID"] = 177857,
		},
		[290435] = {
			["npcID"] = 144536,
		},
		[358011] = {
			["npcID"] = 178789,
		},
		[417396] = {
			["source"] = "Sky-Commander Gadrius Orcbane",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207593,
		},
		[327296] = {
			["npcID"] = 156561,
		},
		[33501] = {
			["npcID"] = 18848,
		},
		[294533] = {
			["npcID"] = 151817,
		},
		[347775] = {
			["npcID"] = 176395,
		},
		[154450] = {
			["npcID"] = 75071,
		},
		[163665] = {
			["encounterName"] = "Grimrail Enforcers",
			["npcID"] = 80805,
			["encounterID"] = 1748,
		},
		[427638] = {
			["source"] = "Nuoberon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209113,
		},
		[255814] = {
			["source"] = "Reanimated Honor Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 127757,
		},
		[360064] = {
			["npcID"] = 184216,
		},
		[197454] = {
			["encounterName"] = "Cordana Felsong",
			["npcID"] = 100351,
			["encounterID"] = 1818,
		},
		[46044] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunblade Imp",
			["npcID"] = 24815,
		},
		[209741] = {
			["encounterName"] = "Advisor Melandrus",
			["npcID"] = 105754,
			["encounterID"] = 1870,
		},
		[355970] = {
			["npcID"] = 152594,
		},
		[325254] = {
			["encounterName"] = "Grand Proctor Beryllia",
			["npcID"] = 162102,
			["encounterID"] = 2362,
		},
		[171858] = {
			["npcID"] = 177877,
		},
		[331398] = {
			["npcID"] = 170147,
		},
		[341637] = {
			["npcID"] = 174126,
		},
		[216909] = {
			["encounterName"] = "Star Augur Etraeus",
			["encounterID"] = 1863,
			["npcID"] = 109082,
		},
		[325256] = {
			["npcID"] = 160748,
		},
		[335495] = {
			["npcID"] = 180032,
		},
		[370307] = {
			["encounterName"] = "Eranog",
			["encounterID"] = 2587,
			["npcID"] = 184972,
		},
		[421501] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Pip",
			["encounterID"] = 2728,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208367,
		},
		[417406] = {
			["source"] = "Ankura Bloodhewer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207589,
		},
		[272016] = {
			["npcID"] = 154014,
		},
		[325258] = {
			["encounterName"] = "Mueh'zala",
			["encounterID"] = 2396,
			["npcID"] = 166608,
		},
		[409216] = {
			["source"] = "Sundered Manaweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198872,
		},
		[331402] = {
			["npcID"] = 180028,
		},
		[358023] = {
			["npcID"] = 180474,
		},
		[409217] = {
			["source"] = "Sundered Manaweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198872,
		},
		[300687] = {
			["npcID"] = 150168,
		},
		[6685] = {
			["source"] = "Kharanos Rifleman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 41182,
		},
		[388741] = {
			["npcID"] = 189928,
		},
		[386694] = {
			["npcID"] = 194897,
		},
		[290450] = {
			["encounterName"] = "King Rastakhan",
			["source"] = "Prelate Za'lan",
			["encounterID"] = 2272,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146320,
		},
		[398981] = {
			["npcID"] = 198263,
		},
		[163671] = {
			["npcID"] = 88782,
		},
		[388743] = {
			["npcID"] = 188510,
		},
		[360075] = {
			["npcID"] = 182210,
		},
		[360076] = {
			["npcID"] = 181839,
		},
		[388745] = {
			["npcID"] = 197862,
		},
		[392841] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Degmakh",
			["npcID"] = 194251,
		},
		[337552] = {
			["npcID"] = 162853,
		},
		[265881] = {
			["source"] = "Matron Alma",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135365,
		},
		[341648] = {
			["npcID"] = 174134,
		},
		[335505] = {
			["npcID"] = 177857,
		},
		[353935] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[339601] = {
			["npcID"] = 159503,
		},
		[256846] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dinomancer Kish'o",
			["npcID"] = 129553,
		},
		[257870] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Buccaneer",
			["npcID"] = 130011,
		},
		[386700] = {
			["npcID"] = 189228,
		},
		[317077] = {
			["npcID"] = 152571,
		},
		[331412] = {
			["npcID"] = 177130,
		},
		[46046] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Sunblade Physician",
			["npcID"] = 24687,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1895,
		},
		[337556] = {
			["npcID"] = 162853,
		},
		[339604] = {
			["npcID"] = 159503,
		},
		[319127] = {
			["npcID"] = 169123,
		},
		[372369] = {
			["npcID"] = 186517,
		},
		[394895] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Phenran",
			["npcID"] = 193688,
		},
		[298651] = {
			["encounterName"] = "Trixie & Naeno",
			["npcID"] = 153756,
			["encounterID"] = 2312,
		},
		[366227] = {
			["npcID"] = 183496,
		},
		[364180] = {
			["npcID"] = 183596,
		},
		[256849] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dinomancer Kish'o",
			["npcID"] = 129553,
		},
		[351894] = {
			["npcID"] = 178180,
		},
		[321178] = {
			["npcID"] = 162047,
		},
		[358038] = {
			["npcID"] = 179802,
		},
		[331418] = {
			["npcID"] = 170160,
		},
		[337562] = {
			["npcID"] = 162875,
		},
		[161630] = {
			["npcID"] = 80071,
		},
		[323229] = {
			["npcID"] = 172073,
		},
		[358041] = {
			["npcID"] = 180160,
		},
		[345755] = {
			["npcID"] = 165663,
		},
		[384663] = {
			["npcID"] = 194816,
		},
		[394903] = {
			["npcID"] = 193668,
		},
		[169823] = {
			["npcID"] = 84983,
		},
		[374426] = {
			["npcID"] = 190014,
		},
		[329376] = {
			["npcID"] = 164897,
		},
		[191325] = {
			["encounterName"] = "Dresaron",
			["source"] = "Dresaron",
			["encounterID"] = 1838,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 99200,
		},
		[169824] = {
			["npcID"] = 84984,
		},
		[417431] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[205660] = {
			["npcID"] = 126284,
		},
		[358047] = {
			["npcID"] = 179931,
		},
		[353952] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[169825] = {
			["npcID"] = 84990,
		},
		[374430] = {
			["encounterName"] = "Kurog Grimtotem",
			["npcID"] = 190588,
			["encounterID"] = 2605,
		},
		[327332] = {
			["npcID"] = 163459,
		},
		[427672] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["encounterID"] = 1044,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40765,
		},
		[356001] = {
			["npcID"] = 177808,
		},
		[193375] = {
			["encounterName"] = "Ularogg Cragshaper",
			["npcID"] = 91004,
			["encounterID"] = 1791,
		},
		[210781] = {
			["encounterName"] = "Il'gynoth, The Heart of Corruption",
			["encounterID"] = 1873,
			["npcID"] = 105393,
		},
		[333477] = {
			["npcID"] = 163621,
		},
		[403101] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Eternal Blaze",
			["encounterID"] = 2687,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201773,
		},
		[32369] = {
			["npcID"] = 18430,
		},
		[356004] = {
			["npcID"] = 177514,
		},
		[333479] = {
			["npcID"] = 163620,
		},
		[394912] = {
			["source"] = "Crystalus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193645,
		},
		[347814] = {
			["npcID"] = 176396,
		},
		[358053] = {
			["npcID"] = 180160,
		},
		[335528] = {
			["npcID"] = 159755,
		},
		[386722] = {
			["npcID"] = 190482,
		},
		[298669] = {
			["encounterName"] = "Trixie & Naeno",
			["npcID"] = 150712,
			["encounterID"] = 2312,
		},
		[407200] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["encounterID"] = 2688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201261,
		},
		[358055] = {
			["npcID"] = 179254,
		},
		[368294] = {
			["npcID"] = 185752,
		},
		[362151] = {
			["npcID"] = 182745,
		},
		[368295] = {
			["npcID"] = 183953,
		},
		[388773] = {
			["encounterName"] = "Umbrelskul",
			["encounterID"] = 2584,
			["npcID"] = 186738,
		},
		[394917] = {
			["encounterName"] = "Eranog",
			["source"] = "Flamescale Captain",
			["encounterID"] = 2587,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199233,
		},
		[356010] = {
			["npcID"] = 178041,
		},
		[27634] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Garaxxas",
			["npcID"] = 24555,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1895,
		},
		[362154] = {
			["npcID"] = 182879,
		},
		[339629] = {
			["npcID"] = 173145,
		},
		[407205] = {
			["source"] = "Horde Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203861,
		},
		[372394] = {
			["encounterName"] = "The Primal Council",
			["npcID"] = 187768,
			["encounterID"] = 2590,
		},
		[286389] = {
			["source"] = "Rastari Royal Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 148665,
		},
		[329392] = {
			["npcID"] = 157576,
		},
		[333488] = {
			["encounterName"] = "Amarth, The Harvester",
			["encounterID"] = 2388,
			["npcID"] = 163157,
		},
		[362157] = {
			["npcID"] = 182879,
		},
		[356014] = {
			["npcID"] = 177356,
		},
		[228193] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114329,
		},
		[163689] = {
			["encounterName"] = "Grimrail Enforcers",
			["npcID"] = 80816,
			["encounterID"] = 1748,
		},
		[372397] = {
			["npcID"] = 192352,
		},
		[329395] = {
			["npcID"] = 170044,
		},
		[353969] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[384686] = {
			["encounterName"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["npcID"] = 186615,
		},
		[407212] = {
			["source"] = "Djaradin Dragonhunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202108,
		},
		[204646] = {
			["encounterName"] = "Oakheart",
			["npcID"] = 103344,
			["encounterID"] = 1837,
		},
		[356019] = {
			["npcID"] = 177537,
		},
		[358067] = {
			["npcID"] = 178877,
		},
		[360115] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["encounterID"] = 2529,
			["npcID"] = 180906,
		},
		[32370] = {
			["npcID"] = 18430,
		},
		[396975] = {
			["npcID"] = 191401,
		},
		[165740] = {
			["npcID"] = 82010,
		},
		[256865] = {
			["npcID"] = 171303,
		},
		[329401] = {
			["npcID"] = 159151,
		},
		[17140] = {
			["npcID"] = 82009,
		},
		[390834] = {
			["npcID"] = 190161,
		},
		[417455] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[329402] = {
			["npcID"] = 161620,
		},
		[356023] = {
			["encounterName"] = "Sylvanas Windrunner",
			["npcID"] = 179963,
			["encounterID"] = 2435,
		},
		[96189] = {
			["npcID"] = 24938,
		},
		[415409] = {
			["source"] = "Rupturing Firevine",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207699,
		},
		[45027] = {
			["encounterName"] = "Kalecgos",
			["npcID"] = 24891,
			["encounterID"] = 724,
		},
		[329404] = {
			["npcID"] = 159407,
		},
		[166766] = {
			["npcID"] = 171172,
		},
		[419506] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[421554] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elisande",
			["npcID"] = 208668,
		},
		[351931] = {
			["npcID"] = 176598,
		},
		[321216] = {
			["npcID"] = 172601,
		},
		[169839] = {
			["npcID"] = 84957,
		},
		[366267] = {
			["npcID"] = 185008,
		},
		[386745] = {
			["npcID"] = 189206,
		},
		[409271] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Magma Mystic",
			["encounterID"] = 2682,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199703,
		},
		[169840] = {
			["npcID"] = 84989,
		},
		[399033] = {
			["source"] = "Weyrn Spellslinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200736,
		},
		[419511] = {
			["source"] = "Chronaxie",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206070,
		},
		[356031] = {
			["npcID"] = 177816,
		},
		[423607] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elisande",
			["npcID"] = 208668,
		},
		[135029] = {
			["npcID"] = 78116,
		},
		[169841] = {
			["npcID"] = 84990,
		},
		[366272] = {
			["npcID"] = 185032,
		},
		[315079] = {
			["npcID"] = 161388,
		},
		[349891] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["encounterID"] = 2432,
			["npcID"] = 177268,
		},
		[351939] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 177891,
		},
		[329414] = {
			["npcID"] = 161620,
		},
		[356035] = {
			["npcID"] = 178789,
		},
		[329415] = {
			["npcID"] = 161345,
		},
		[169843] = {
			["npcID"] = 84957,
		},
		[122301] = {
			["npcID"] = 62930,
		},
		[427708] = {
			["source"] = "Reefbreaker Moruud",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209898,
		},
		[388801] = {
			["npcID"] = 195855,
		},
		[358085] = {
			["npcID"] = 179859,
		},
		[411328] = {
			["source"] = "Diganthor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204434,
		},
		[366278] = {
			["npcID"] = 185032,
		},
		[388804] = {
			["encounterName"] = "Umbrelskul",
			["encounterID"] = 2584,
			["npcID"] = 186738,
		},
		[386757] = {
			["encounterName"] = "Khajin the Unyielding",
			["npcID"] = 189727,
			["encounterID"] = 2617,
		},
		[423617] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elisande",
			["npcID"] = 208668,
		},
		[257899] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Irontide Officer",
			["npcID"] = 127106,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[421570] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Aerwynn",
			["encounterID"] = 2728,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208365,
		},
		[407236] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shrinekeeper Qanosh",
			["npcID"] = 199839,
		},
		[329422] = {
			["npcID"] = 157571,
		},
		[341709] = {
			["encounterName"] = "Mistcaller",
			["encounterID"] = 2392,
			["npcID"] = 164501,
		},
		[419524] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Loose Time",
			["npcID"] = 209170,
		},
		[169847] = {
			["npcID"] = 84989,
		},
		[252781] = {
			["source"] = "Zanchuli Witch-Doctor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122969,
		},
		[337616] = {
			["npcID"] = 158989,
		},
		[256878] = {
			["npcID"] = 171303,
		},
		[413385] = {
			["source"] = "Minister of Air",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45930,
		},
		[358096] = {
			["npcID"] = 177425,
		},
		[417481] = {
			["source"] = "Timeline Marauder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199748,
		},
		[364240] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 181549,
		},
		[382670] = {
			["encounterName"] = "Teera and Maruuk",
			["encounterID"] = 2581,
			["npcID"] = 186339,
		},
		[360145] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 181399,
		},
		[364241] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 181546,
		},
		[267997] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 135816,
		},
		[407245] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shrinekeeper Qanosh",
			["npcID"] = 199839,
		},
		[257904] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ludwig Von Tortollan",
			["npcID"] = 129699,
		},
		[394959] = {
			["npcID"] = 187617,
		},
		[331479] = {
			["npcID"] = 167923,
		},
		[415437] = {
			["source"] = "Timestream Leech",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206066,
		},
		[329432] = {
			["npcID"] = 177861,
		},
		[388817] = {
			["encounterName"] = "Granyth",
			["encounterID"] = 2637,
			["npcID"] = 186616,
		},
		[300764] = {
			["npcID"] = 150165,
		},
		[331481] = {
			["npcID"] = 167948,
		},
		[397010] = {
			["npcID"] = 197147,
		},
		[256882] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Monzumi",
			["npcID"] = 129552,
		},
		[286432] = {
			["source"] = "Pa'kura Priestess",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 147571,
		},
		[427727] = {
			["source"] = "Reefbreaker Moruud",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209898,
		},
		[397011] = {
			["npcID"] = 197147,
		},
		[333531] = {
			["npcID"] = 172210,
		},
		[175997] = {
			["encounterName"] = "Ancient Protectors",
			["npcID"] = 83894,
			["encounterID"] = 1757,
		},
		[329437] = {
			["npcID"] = 182791,
		},
		[388822] = {
			["encounterName"] = "Echo of Doragosa",
			["npcID"] = 190609,
			["encounterID"] = 2565,
		},
		[366297] = {
			["npcID"] = 184911,
		},
		[204666] = {
			["encounterName"] = "Oakheart",
			["npcID"] = 103344,
			["encounterID"] = 1837,
		},
		[354011] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[372441] = {
			["npcID"] = 186515,
		},
		[399062] = {
			["source"] = "Irontide Crusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200858,
		},
		[257908] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Irontide Officer",
			["npcID"] = 127106,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[419540] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Molten General",
			["npcID"] = 207941,
		},
		[204667] = {
			["encounterName"] = "Oakheart",
			["npcID"] = 103344,
			["encounterID"] = 1837,
		},
		[321249] = {
			["npcID"] = 162051,
		},
		[115652] = {
			["npcID"] = 59519,
		},
		[327393] = {
			["npcID"] = 163618,
		},
		[399065] = {
			["source"] = "Irontide Crusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200858,
		},
		[366303] = {
			["npcID"] = 183927,
		},
		[351969] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["npcID"] = 175730,
			["encounterID"] = 2431,
		},
		[386781] = {
			["encounterName"] = "Telash Greywing",
			["npcID"] = 186737,
			["encounterID"] = 2583,
		},
		[409307] = {
			["source"] = "Blazing Dreadsquall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202262,
		},
		[300777] = {
			["npcID"] = 150165,
		},
		[360162] = {
			["encounterName"] = "Vigilant Guardian",
			["encounterID"] = 2512,
			["npcID"] = 180773,
		},
		[372449] = {
			["npcID"] = 187931,
		},
		[358115] = {
			["npcID"] = 178467,
		},
		[321256] = {
			["npcID"] = 156815,
		},
		[358116] = {
			["npcID"] = 180627,
		},
		[341735] = {
			["npcID"] = 174336,
		},
		[372452] = {
			["npcID"] = 186421,
		},
		[366309] = {
			["npcID"] = 180917,
		},
		[403169] = {
			["source"] = "High Interrogator Kilandrelle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207594,
		},
		[351976] = {
			["npcID"] = 176598,
		},
		[356072] = {
			["npcID"] = 177394,
		},
		[288497] = {
			["source"] = "Jandra Thornbough",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205495,
		},
		[323309] = {
			["npcID"] = 177859,
		},
		[284402] = {
			["npcID"] = 150740,
		},
		[372456] = {
			["encounterName"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["encounterID"] = 2605,
		},
		[394982] = {
			["npcID"] = 188048,
		},
		[421603] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["npcID"] = 209090,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2786,
		},
		[382696] = {
			["npcID"] = 184131,
		},
		[167815] = {
			["npcID"] = 83390,
		},
		[329455] = {
			["encounterName"] = "Hungering Destroyer",
			["npcID"] = 164261,
			["encounterID"] = 2383,
		},
		[325360] = {
			["encounterName"] = "Grand Proctor Beryllia",
			["npcID"] = 162102,
			["encounterID"] = 2362,
		},
		[349934] = {
			["encounterName"] = "The Grand Menagerie",
			["encounterID"] = 2441,
			["npcID"] = 176555,
		},
		[200580] = {
			["npcID"] = 95779,
		},
		[337648] = {
			["npcID"] = 158924,
		},
		[372460] = {
			["npcID"] = 191972,
		},
		[15228] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Murkblood Oracle",
			["npcID"] = 17771,
		},
		[284409] = {
			["npcID"] = 150740,
		},
		[221059] = {
			["npcID"] = 111004,
		},
		[356081] = {
			["npcID"] = 177390,
		},
		[341747] = {
			["npcID"] = 174158,
		},
		[327413] = {
			["npcID"] = 168318,
		},
		[425706] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Astromancer's Guard",
			["npcID"] = 208729,
		},
		[331510] = {
			["npcID"] = 170838,
		},
		[382704] = {
			["npcID"] = 191308,
		},
		[319224] = {
			["npcID"] = 170330,
		},
		[386800] = {
			["npcID"] = 191450,
		},
		[153485] = {
			["npcID"] = 76057,
		},
		[417517] = {
			["source"] = "Ankura Bloodhewer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207589,
		},
		[386801] = {
			["npcID"] = 191661,
		},
		[390897] = {
			["npcID"] = 186632,
		},
		[83918] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ninja",
			["npcID"] = 43553,
		},
		[368373] = {
			["npcID"] = 183516,
		},
		[427758] = {
			["source"] = "Envoy of Winter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209929,
		},
		[382708] = {
			["npcID"] = 193293,
		},
		[356088] = {
			["npcID"] = 177813,
		},
		[427760] = {
			["source"] = "Envoy of Winter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209929,
		},
		[360185] = {
			["npcID"] = 181879,
		},
		[356090] = {
			["encounterName"] = "Guardian of the First Ones",
			["npcID"] = 175731,
			["encounterID"] = 2436,
		},
		[407285] = {
			["source"] = "Djaradin Skullcrusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202258,
		},
		[351996] = {
			["npcID"] = 178384,
		},
		[263943] = {
			["source"] = "Heartsbane Runeweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131677,
		},
		[372474] = {
			["npcID"] = 182727,
		},
		[384761] = {
			["encounterName"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["npcID"] = 186615,
		},
		[172943] = {
			["npcID"] = 84520,
		},
		[388857] = {
			["npcID"] = 197647,
		},
		[347903] = {
			["npcID"] = 176395,
		},
		[392955] = {
			["npcID"] = 183422,
		},
		[397051] = {
			["npcID"] = 199029,
		},
		[349954] = {
			["encounterName"] = "The Grand Menagerie",
			["encounterID"] = 2441,
			["npcID"] = 176555,
		},
		[392957] = {
			["npcID"] = 190216,
		},
		[388862] = {
			["npcID"] = 196045,
		},
		[407292] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Erupting Shadowflame",
			["npcID"] = 199838,
		},
		[388863] = {
			["npcID"] = 196045,
		},
		[199567] = {
			["npcID"] = 101028,
		},
		[427771] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40586,
		},
		[356100] = {
			["npcID"] = 177395,
		},
		[390912] = {
			["npcID"] = 197219,
		},
		[325386] = {
			["npcID"] = 167119,
		},
		[147351] = {
			["npcID"] = 73342,
		},
		[374533] = {
			["encounterName"] = "Forgemaster Gorek",
			["npcID"] = 189478,
			["encounterID"] = 2612,
		},
		[151447] = {
			["npcID"] = 84978,
		},
		[411393] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bogg",
			["npcID"] = 201747,
		},
		[372486] = {
			["npcID"] = 187497,
		},
		[81363] = {
			["npcID"] = 168333,
		},
		[403203] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Eternal Blaze",
			["encounterID"] = 2687,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201773,
		},
		[388869] = {
			["source"] = "Gorjo the Crab Shackler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193226,
		},
		[341771] = {
			["npcID"] = 170882,
		},
		[169878] = {
			["encounterName"] = "Yalnu",
			["npcID"] = 84399,
			["encounterID"] = 1756,
		},
		[300818] = {
			["npcID"] = 154663,
		},
		[263959] = {
			["source"] = "Heartsbane Soulcharmer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131812,
		},
		[421636] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["npcID"] = 209090,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2786,
		},
		[341775] = {
			["npcID"] = 167528,
		},
		[395017] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Massive Magmashell",
			["npcID"] = 193152,
		},
		[409352] = {
			["source"] = "Blazing Dreadsquall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202262,
		},
		[172952] = {
			["npcID"] = 83026,
		},
		[323347] = {
			["npcID"] = 165137,
		},
		[325395] = {
			["encounterName"] = "Domina Venomblade",
			["encounterID"] = 2385,
			["npcID"] = 166813,
		},
		[352016] = {
			["npcID"] = 176578,
		},
		[372494] = {
			["npcID"] = 189391,
		},
		[372495] = {
			["npcID"] = 194375,
		},
		[374544] = {
			["npcID"] = 186226,
		},
		[411404] = {
			["source"] = "Shade of Skytalon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204430,
		},
		[325399] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[354068] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[331543] = {
			["npcID"] = 170196,
		},
		[343830] = {
			["npcID"] = 157964,
		},
		[116178] = {
			["npcID"] = 59522,
		},
		[360213] = {
			["npcID"] = 181839,
		},
		[411407] = {
			["source"] = "Time-Lost Waveshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205363,
		},
		[388882] = {
			["npcID"] = 190405,
		},
		[390930] = {
			["npcID"] = 185784,
		},
		[411408] = {
			["source"] = "Shade of Skytalon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204430,
		},
		[249747] = {
			["npcID"] = 127103,
		},
		[44271] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Garaxxas",
			["npcID"] = 24555,
		},
		[341786] = {
			["npcID"] = 167528,
		},
		[331548] = {
			["npcID"] = 167964,
		},
		[388886] = {
			["npcID"] = 196576,
		},
		[356123] = {
			["npcID"] = 177395,
		},
		[183197] = {
			["npcID"] = 155221,
		},
		[186269] = {
			["npcID"] = 90998,
		},
		[341790] = {
			["npcID"] = 167528,
		},
		[196508] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["encounterID"] = 1850,
			["npcID"] = 99657,
		},
		[272167] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["npcID"] = 136404,
			["encounterID"] = 2431,
		},
		[319266] = {
			["npcID"] = 167033,
		},
		[390938] = {
			["npcID"] = 197406,
		},
		[333602] = {
			["npcID"] = 163126,
		},
		[176032] = {
			["npcID"] = 88163,
		},
		[395035] = {
			["npcID"] = 195930,
		},
		[290600] = {
			["npcID"] = 151684,
		},
		[382749] = {
			["npcID"] = 187140,
		},
		[37361] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Skeletal Guardian",
			["npcID"] = 10390,
		},
		[327461] = {
			["npcID"] = 153165,
		},
		[282411] = {
			["encounterName"] = "Conclave of the Chosen",
			["source"] = "Akunda's Aspect",
			["encounterID"] = 2268,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 144941,
		},
		[349987] = {
			["encounterName"] = "The Grand Menagerie",
			["encounterID"] = 2441,
			["npcID"] = 176555,
		},
		[390943] = {
			["npcID"] = 185784,
		},
		[362275] = {
			["encounterName"] = "Rygelon",
			["encounterID"] = 2549,
			["npcID"] = 182777,
		},
		[319273] = {
			["npcID"] = 151091,
		},
		[296748] = {
			["npcID"] = 152875,
		},
		[356133] = {
			["npcID"] = 180015,
		},
		[358181] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[360229] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 181399,
		},
		[325418] = {
			["npcID"] = 167113,
		},
		[319275] = {
			["npcID"] = 159601,
		},
		[366374] = {
			["encounterName"] = "The Jailer",
			["npcID"] = 180990,
			["encounterID"] = 2537,
		},
		[327467] = {
			["npcID"] = 153165,
		},
		[226206] = {
			["npcID"] = 98756,
		},
		[413473] = {
			["source"] = "Temporal Deviation",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206063,
		},
		[228254] = {
			["npcID"] = 114626,
		},
		[149416] = {
			["npcID"] = 183257,
		},
		[374567] = {
			["encounterName"] = "Leymor",
			["npcID"] = 186644,
			["encounterID"] = 2582,
		},
		[193443] = {
			["encounterName"] = "Glazer",
			["npcID"] = 95887,
			["encounterID"] = 1817,
		},
		[202658] = {
			["npcID"] = 102584,
		},
		[317231] = {
			["encounterName"] = "Xav the Unfallen",
			["encounterID"] = 2366,
			["npcID"] = 162329,
		},
		[196515] = {
			["npcID"] = 100250,
		},
		[329518] = {
			["encounterName"] = "Sun King's Salvation",
			["npcID"] = 165805,
			["encounterID"] = 2402,
		},
		[364330] = {
			["npcID"] = 184737,
		},
		[374569] = {
			["source"] = "Monstrous Decay",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186227,
		},
		[304946] = {
			["npcID"] = 156157,
		},
		[366379] = {
			["encounterName"] = "Rygelon",
			["npcID"] = 182777,
			["encounterID"] = 2549,
		},
		[196516] = {
			["npcID"] = 100248,
		},
		[272183] = {
			["npcID"] = 134284,
		},
		[397096] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Malsegan",
			["npcID"] = 193212,
		},
		[401192] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Quicksmack Magk",
			["npcID"] = 204651,
		},
		[327474] = {
			["npcID"] = 166170,
		},
		[409385] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Shadowflame Amalgamation",
			["encounterID"] = 2687,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201934,
		},
		[234401] = {
			["npcID"] = 117933,
		},
		[202661] = {
			["npcID"] = 102583,
		},
		[397100] = {
			["npcID"] = 199027,
		},
		[350002] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176533,
		},
		[319286] = {
			["npcID"] = 164084,
		},
		[331573] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["npcID"] = 170199,
			["encounterID"] = 2406,
		},
		[372529] = {
			["npcID"] = 192748,
		},
		[411437] = {
			["source"] = "Sundered Siegemaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198874,
		},
		[366387] = {
			["npcID"] = 180978,
		},
		[191401] = {
			["npcID"] = 96640,
		},
		[327481] = {
			["encounterName"] = "Kin-Tara",
			["npcID"] = 162059,
			["encounterID"] = 2357,
		},
		[386866] = {
			["npcID"] = 195709,
		},
		[339768] = {
			["npcID"] = 166012,
		},
		[362294] = {
			["npcID"] = 181968,
		},
		[319292] = {
			["npcID"] = 156676,
		},
		[419632] = {
			["isChanneled"] = true,
			["source"] = "Pendule",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 208945,
		},
		[339770] = {
			["npcID"] = 173568,
		},
		[197546] = {
			["encounterName"] = "Ilysanna Ravencrest",
			["npcID"] = 98696,
			["encounterID"] = 1833,
		},
		[397108] = {
			["npcID"] = 196809,
		},
		[309055] = {
			["npcID"] = 156320,
		},
		[319294] = {
			["npcID"] = 162817,
		},
		[395061] = {
			["npcID"] = 193443,
		},
		[397109] = {
			["npcID"] = 190008,
		},
		[333629] = {
			["encounterName"] = "Amarth, The Harvester",
			["encounterID"] = 2388,
			["npcID"] = 168246,
		},
		[384823] = {
			["encounterName"] = "Kokia Blazehoof",
			["npcID"] = 189886,
			["encounterID"] = 2606,
		},
		[397110] = {
			["npcID"] = 190008,
		},
		[219049] = {
			["encounterName"] = "High Botanist Tel'arn",
			["encounterID"] = 1886,
			["npcID"] = 109041,
		},
		[325440] = {
			["encounterName"] = "Sun King's Salvation",
			["npcID"] = 165764,
			["encounterID"] = 2402,
		},
		[409398] = {
			["source"] = "Crystalline Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203831,
		},
		[323393] = {
			["encounterName"] = "Lord Chamberlain",
			["encounterID"] = 2381,
			["npcID"] = 164218,
		},
		[358205] = {
			["npcID"] = 178862,
		},
		[335680] = {
			["npcID"] = 177861,
		},
		[42740] = {
			["npcID"] = 23960,
		},
		[384827] = {
			["encounterName"] = "Gutshot",
			["encounterID"] = 2567,
			["npcID"] = 186116,
		},
		[222122] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "High Priestess Ishanah",
			["npcID"] = 111536,
		},
		[388923] = {
			["encounterName"] = "Overgrown Ancient",
			["npcID"] = 196482,
			["encounterID"] = 2563,
		},
		[368446] = {
			["npcID"] = 180978,
		},
		[44276] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Zelfan",
			["npcID"] = 24556,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1895,
		},
		[113629] = {
			["npcID"] = 59193,
		},
		[407354] = {
			["source"] = "Slaghide Shalewing",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202303,
		},
		[321349] = {
			["npcID"] = 164857,
		},
		[388925] = {
			["source"] = "Liskanoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193533,
		},
		[401212] = {
			["source"] = "Trudging Devourer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201066,
		},
		[354114] = {
			["npcID"] = 179234,
		},
		[153524] = {
			["npcID"] = 75459,
		},
		[382783] = {
			["source"] = "Obsidian Tyrant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202483,
		},
		[39413] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Murkblood Spearman",
			["npcID"] = 17729,
		},
		[401214] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elder Honeypelt",
			["npcID"] = 202451,
		},
		[362308] = {
			["npcID"] = 185755,
		},
		[407359] = {
			["source"] = "Slaghide Shalewing",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202303,
		},
		[327497] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 166970,
			["encounterID"] = 2412,
		},
		[333641] = {
			["npcID"] = 169905,
		},
		[376644] = {
			["encounterName"] = "Balakar Khan",
			["encounterID"] = 2580,
			["npcID"] = 186151,
		},
		[366406] = {
			["npcID"] = 184908,
		},
		[168885] = {
			["encounterName"] = "Archmage Sol",
			["npcID"] = 82682,
			["encounterID"] = 1751,
		},
		[356169] = {
			["npcID"] = 177567,
		},
		[405316] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["npcID"] = 201320,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2680,
		},
		[366409] = {
			["npcID"] = 184908,
		},
		[368457] = {
			["npcID"] = 180746,
		},
		[172982] = {
			["npcID"] = 83026,
		},
		[339789] = {
			["npcID"] = 166046,
		},
		[358219] = {
			["npcID"] = 179070,
		},
		[393031] = {
			["npcID"] = 186672,
		},
		[390984] = {
			["npcID"] = 192341,
		},
		[425796] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Harbinger of Incineration",
			["npcID"] = 210147,
		},
		[362316] = {
			["npcID"] = 185034,
		},
		[366412] = {
			["npcID"] = 183746,
		},
		[403272] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["encounterID"] = 2684,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201668,
		},
		[228273] = {
			["npcID"] = 114637,
		},
		[360270] = {
			["npcID"] = 181625,
		},
		[345936] = {
			["encounterName"] = "Shriekwing",
			["npcID"] = 164406,
			["encounterID"] = 2398,
		},
		[372557] = {
			["npcID"] = 187566,
		},
		[390987] = {
			["npcID"] = 186609,
		},
		[210868] = {
			["isChanneled"] = true,
			["source"] = "Felsoul Wrathguard",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 114929,
		},
		[390988] = {
			["source"] = "Brutal Motivator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184453,
		},
		[197558] = {
			["encounterName"] = "Fenryr",
			["encounterID"] = 1807,
			["npcID"] = 95674,
		},
		[388941] = {
			["npcID"] = 186962,
		},
		[358225] = {
			["npcID"] = 178732,
		},
		[200630] = {
			["npcID"] = 95769,
		},
		[388942] = {
			["npcID"] = 196671,
		},
		[358226] = {
			["npcID"] = 176949,
		},
		[368465] = {
			["npcID"] = 180746,
		},
		[321367] = {
			["npcID"] = 156562,
		},
		[372561] = {
			["npcID"] = 189227,
		},
		[358227] = {
			["npcID"] = 176959,
		},
		[343893] = {
			["npcID"] = 162829,
		},
		[388944] = {
			["npcID"] = 190904,
		},
		[114658] = {
			["encounterName"] = "Instructor Chillheart",
			["npcID"] = 58633,
			["encounterID"] = 1426,
		},
		[298844] = {
			["npcID"] = 153885,
		},
		[382802] = {
			["npcID"] = 194241,
		},
		[329561] = {
			["encounterName"] = "Sun King's Salvation",
			["npcID"] = 165778,
			["encounterID"] = 2402,
		},
		[358230] = {
			["npcID"] = 179854,
		},
		[347992] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["encounterID"] = 2425,
			["npcID"] = 175616,
		},
		[327515] = {
			["npcID"] = 168361,
		},
		[329563] = {
			["npcID"] = 152508,
		},
		[372566] = {
			["npcID"] = 189227,
		},
		[358232] = {
			["npcID"] = 180104,
		},
		[337755] = {
			["npcID"] = 163213,
		},
		[325469] = {
			["npcID"] = 166928,
		},
		[168894] = {
			["encounterName"] = "Archmage Sol",
			["npcID"] = 84386,
			["encounterID"] = 1751,
		},
		[298849] = {
			["encounterName"] = "Trixie & Naeno",
			["npcID"] = 150712,
			["encounterID"] = 2312,
		},
		[228279] = {
			["npcID"] = 114632,
		},
		[417619] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gill'dan",
			["npcID"] = 204808,
		},
		[427858] = {
			["encounterName"] = "Archmage Sol",
			["source"] = "Archmage Sol",
			["encounterID"] = 1751,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82682,
		},
		[87527] = {
			["npcID"] = 46694,
		},
		[234423] = {
			["npcID"] = 117933,
		},
		[388952] = {
			["npcID"] = 192684,
		},
		[228280] = {
			["npcID"] = 114629,
		},
		[360284] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 181399,
		},
		[362333] = {
			["npcID"] = 182374,
		},
		[186302] = {
			["npcID"] = 126098,
		},
		[358238] = {
			["npcID"] = 178851,
		},
		[434005] = {
			["source"] = "Gilnean Alchemist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 213995,
		},
		[59638] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 31216,
		},
		[358239] = {
			["npcID"] = 178851,
		},
		[368478] = {
			["npcID"] = 180746,
		},
		[427863] = {
			["encounterName"] = "Archmage Sol",
			["source"] = "Archmage Sol",
			["encounterID"] = 1751,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82682,
		},
		[413529] = {
			["source"] = "Timestream Anomaly",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199749,
		},
		[374622] = {
			["encounterName"] = "Kurog Grimtotem",
			["npcID"] = 190690,
			["encounterID"] = 2605,
		},
		[425816] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Tainted Treant",
			["encounterID"] = 2820,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211904,
		},
		[37113] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Murkblood Oracle",
			["npcID"] = 17771,
		},
		[374623] = {
			["encounterName"] = "Kurog Grimtotem",
			["npcID"] = 190686,
			["encounterID"] = 2605,
		},
		[391006] = {
			["npcID"] = 197353,
		},
		[196543] = {
			["encounterName"] = "Fenryr",
			["encounterID"] = 1807,
			["npcID"] = 95674,
		},
		[354147] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[364386] = {
			["encounterName"] = "Rygelon",
			["encounterID"] = 2549,
			["npcID"] = 182823,
		},
		[207806] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["npcID"] = 104215,
			["encounterID"] = 1868,
		},
		[409437] = {
			["source"] = "Voracious Magma Worm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203825,
		},
		[32637] = {
			["npcID"] = 167749,
		},
		[147398] = {
			["npcID"] = 73342,
		},
		[335720] = {
			["npcID"] = 178191,
		},
		[388962] = {
			["source"] = "Matriarch Remalla",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193246,
		},
		[341864] = {
			["npcID"] = 173189,
		},
		[264050] = {
			["npcID"] = 131666,
		},
		[348008] = {
			["npcID"] = 176394,
		},
		[341865] = {
			["npcID"] = 174194,
		},
		[384868] = {
			["npcID"] = 192789,
		},
		[323437] = {
			["encounterName"] = "Lord Chamberlain",
			["encounterID"] = 2381,
			["npcID"] = 164218,
		},
		[341867] = {
			["npcID"] = 165469,
		},
		[200642] = {
			["npcID"] = 95771,
		},
		[323438] = {
			["npcID"] = 166073,
		},
		[343916] = {
			["npcID"] = 169102,
		},
		[198595] = {
			["npcID"] = 95842,
		},
		[176070] = {
			["npcID"] = 173114,
		},
		[419684] = {
			["source"] = "Observational Pollen Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210624,
		},
		[360300] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 181398,
		},
		[386921] = {
			["encounterName"] = "Granyth",
			["encounterID"] = 2637,
			["npcID"] = 194367,
		},
		[364396] = {
			["npcID"] = 184272,
		},
		[376683] = {
			["encounterName"] = "Balakar Khan",
			["npcID"] = 186151,
			["encounterID"] = 2580,
		},
		[378731] = {
			["npcID"] = 190938,
		},
		[206788] = {
			["encounterName"] = "Trilliax",
			["encounterID"] = 1867,
			["npcID"] = 104288,
		},
		[391019] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184986,
		},
		[352112] = {
			["npcID"] = 178372,
		},
		[395115] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Smogswog the Firebreather",
			["npcID"] = 193120,
		},
		[169929] = {
			["encounterName"] = "Yalnu",
			["npcID"] = 84400,
			["encounterID"] = 1756,
		},
		[360304] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 181399,
		},
		[256959] = {
			["source"] = "Reanimated Honor Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 127757,
		},
		[321399] = {
			["npcID"] = 173414,
		},
		[111594] = {
			["encounterName"] = "Instructor Chillheart",
			["npcID"] = 58757,
			["encounterID"] = 1426,
		},
		[317304] = {
			["npcID"] = 163083,
		},
		[388976] = {
			["npcID"] = 196671,
		},
		[358260] = {
			["npcID"] = 177330,
		},
		[207815] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["npcID"] = 104215,
			["encounterID"] = 1868,
		},
		[411503] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Diganthor",
			["npcID"] = 204434,
		},
		[325498] = {
			["npcID"] = 157212,
		},
		[409456] = {
			["encounterName"] = "Iridikron",
			["source"] = "Iridikron",
			["encounterID"] = 2669,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198933,
		},
		[348024] = {
			["npcID"] = 176520,
		},
		[382836] = {
			["encounterName"] = "Teera and Maruuk",
			["encounterID"] = 2581,
			["npcID"] = 186338,
		},
		[368502] = {
			["npcID"] = 180924,
		},
		[36604] = {
			["source"] = "Verdant Emerald Lasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208750,
		},
		[321406] = {
			["encounterName"] = "Doctor Ickus",
			["encounterID"] = 2384,
			["npcID"] = 169498,
		},
		[372600] = {
			["source"] = "Sentinel Talondras",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184124,
		},
		[368506] = {
			["npcID"] = 180924,
		},
		[405366] = {
			["source"] = "Lady Shaz'ra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200885,
		},
		[327552] = {
			["npcID"] = 168573,
		},
		[358270] = {
			["npcID"] = 177330,
		},
		[358271] = {
			["npcID"] = 179914,
		},
		[296839] = {
			["npcID"] = 152898,
		},
		[360320] = {
			["npcID"] = 181942,
		},
		[214988] = {
			["npcID"] = 100364,
		},
		[407420] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Runestone",
			["npcID"] = 204001,
		},
		[254920] = {
			["npcID"] = 169206,
		},
		[214989] = {
			["npcID"] = 100364,
		},
		[368514] = {
			["npcID"] = 183764,
		},
		[403326] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["encounterID"] = 2688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201261,
		},
		[339846] = {
			["npcID"] = 166052,
		},
		[391040] = {
			["npcID"] = 185784,
		},
		[376706] = {
			["source"] = "Nokhud Stormcaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190294,
		},
		[329608] = {
			["npcID"] = 155828,
		},
		[405375] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Thadrion",
			["encounterID"] = 2693,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200913,
		},
		[350086] = {
			["encounterName"] = "The Grand Menagerie",
			["encounterID"] = 2441,
			["npcID"] = 176705,
		},
		[329609] = {
			["npcID"] = 155828,
		},
		[384899] = {
			["npcID"] = 186208,
		},
		[364422] = {
			["npcID"] = 180088,
		},
		[391043] = {
			["npcID"] = 185784,
		},
		[409473] = {
			["source"] = "Voracious Magma Worm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203825,
		},
		[378757] = {
			["npcID"] = 191713,
		},
		[372615] = {
			["npcID"] = 189247,
		},
		[200658] = {
			["npcID"] = 95771,
		},
		[298897] = {
			["encounterName"] = "Trixie & Naeno",
			["npcID"] = 150712,
			["encounterID"] = 2312,
		},
		[196563] = {
			["encounterName"] = "Warlord Parjesh",
			["npcID"] = 91784,
			["encounterID"] = 1810,
		},
		[298898] = {
			["encounterName"] = "Trixie & Naeno",
			["npcID"] = 153755,
			["encounterID"] = 2312,
		},
		[368522] = {
			["npcID"] = 183764,
		},
		[113136] = {
			["npcID"] = 59080,
		},
		[341902] = {
			["npcID"] = 174197,
		},
		[352141] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 176974,
		},
		[364429] = {
			["npcID"] = 180085,
		},
		[391050] = {
			["npcID"] = 197535,
		},
		[360334] = {
			["npcID"] = 183953,
		},
		[325523] = {
			["npcID"] = 165515,
		},
		[319380] = {
			["npcID"] = 159233,
		},
		[329619] = {
			["npcID"] = 159407,
		},
		[163802] = {
			["encounterName"] = "Gug'rokk",
			["npcID"] = 74790,
			["encounterID"] = 1654,
		},
		[372623] = {
			["encounterName"] = "Sentinel Talondras",
			["encounterID"] = 2557,
			["npcID"] = 184124,
		},
		[233426] = {
			["encounterName"] = "Demonic Inquisition",
			["npcID"] = 116689,
			["encounterID"] = 2048,
		},
		[368529] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["encounterID"] = 2529,
			["npcID"] = 180906,
		},
		[255952] = {
			["encounterName"] = "Skycap'n Kragg",
			["source"] = "Skycap'n Kragg",
			["npcID"] = 126832,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2093,
		},
		[391055] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184986,
		},
		[350101] = {
			["encounterName"] = "The Grand Menagerie",
			["encounterID"] = 2441,
			["npcID"] = 176705,
		},
		[360340] = {
			["npcID"] = 182425,
		},
		[346006] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["encounterID"] = 2425,
			["npcID"] = 175616,
		},
		[405391] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Rionthus",
			["encounterID"] = 2693,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200918,
		},
		[376723] = {
			["encounterName"] = "Balakar Khan",
			["encounterID"] = 2580,
			["npcID"] = 190294,
		},
		[354198] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[270241] = {
			["npcID"] = 154129,
		},
		[362390] = {
			["encounterName"] = "Rygelon",
			["encounterID"] = 2549,
			["npcID"] = 182777,
		},
		[376725] = {
			["encounterName"] = "Balakar Khan",
			["encounterID"] = 2580,
			["npcID"] = 190294,
		},
		[256979] = {
			["encounterName"] = "Council o' Captains",
			["source"] = "Captain Eudora",
			["npcID"] = 126848,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2094,
		},
		[327581] = {
			["npcID"] = 168396,
		},
		[409492] = {
			["source"] = "Afflicted Soul",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204773,
		},
		[364442] = {
			["npcID"] = 180089,
		},
		[325535] = {
			["npcID"] = 164562,
		},
		[270246] = {
			["npcID"] = 176576,
		},
		[327584] = {
			["npcID"] = 168393,
		},
		[413590] = {
			["encounterName"] = "Blight of Galakrond",
			["source"] = "Dazhak",
			["encounterID"] = 2668,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201788,
		},
		[33793] = {
			["encounterName"] = "Vazruden the Herald",
			["npcID"] = 17307,
			["encounterID"] = 1892,
		},
		[395161] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Treasure-Mad Trambladd",
			["npcID"] = 193146,
		},
		[364445] = {
			["npcID"] = 180089,
		},
		[358302] = {
			["npcID"] = 179911,
		},
		[231385] = {
			["npcID"] = 114880,
		},
		[183263] = {
			["npcID"] = 155219,
		},
		[360351] = {
			["npcID"] = 179043,
		},
		[193502] = {
			["npcID"] = 98177,
		},
		[372638] = {
			["encounterName"] = "Rygelon",
			["encounterID"] = 2549,
			["npcID"] = 189706,
		},
		[417689] = {
			["source"] = "Meantron Prototype",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206132,
		},
		[164834] = {
			["npcID"] = 81819,
		},
		[368544] = {
			["npcID"] = 184597,
		},
		[364449] = {
			["npcID"] = 179939,
		},
		[368545] = {
			["npcID"] = 184599,
		},
		[198623] = {
			["npcID"] = 108765,
		},
		[11970] = {
			["npcID"] = 46838,
		},
		[395167] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "O'nank Shorescour",
			["npcID"] = 193118,
		},
		[356260] = {
			["npcID"] = 179388,
		},
		[335783] = {
			["npcID"] = 155812,
		},
		[374691] = {
			["encounterName"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["encounterID"] = 2605,
		},
		[368548] = {
			["npcID"] = 185145,
		},
		[226269] = {
			["npcID"] = 113699,
		},
		[331689] = {
			["npcID"] = 165181,
		},
		[382883] = {
			["npcID"] = 194487,
		},
		[25602] = {
			["npcID"] = 19306,
		},
		[368551] = {
			["npcID"] = 184605,
		},
		[348074] = {
			["npcID"] = 178041,
		},
		[325549] = {
			["npcID"] = 172080,
		},
		[319406] = {
			["npcID"] = 159233,
		},
		[358314] = {
			["npcID"] = 180162,
		},
		[362410] = {
			["npcID"] = 181349,
		},
		[405413] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Rionthus",
			["npcID"] = 200918,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2693,
		},
		[79868] = {
			["npcID"] = 82002,
		},
		[358316] = {
			["npcID"] = 180681,
		},
		[221153] = {
			["npcID"] = 111072,
		},
		[405415] = {
			["source"] = "Lady Shaz'ra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200885,
		},
		[391081] = {
			["npcID"] = 190598,
		},
		[225249] = {
			["npcID"] = 111528,
		},
		[362413] = {
			["npcID"] = 179939,
		},
		[413607] = {
			["source"] = "Infinite Twilight Magus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201223,
		},
		[354223] = {
			["npcID"] = 177514,
		},
		[356271] = {
			["npcID"] = 180059,
		},
		[417704] = {
			["source"] = "Drest'Agath the Corrupted",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207925,
		},
		[358320] = {
			["npcID"] = 180162,
		},
		[68607] = {
			["encounterName"] = "The Crown Chemical Co.",
			["source"] = "Apothecary Hummel",
			["npcID"] = 36296,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2879,
		},
		[203750] = {
			["npcID"] = 111622,
		},
		[401325] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[386991] = {
			["npcID"] = 184869,
		},
		[111610] = {
			["encounterName"] = "Instructor Chillheart",
			["npcID"] = 58633,
			["encounterID"] = 1426,
		},
		[358323] = {
			["npcID"] = 180246,
		},
		[88061] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Armored Mistral",
			["npcID"] = 45915,
		},
		[386992] = {
			["npcID"] = 192636,
		},
		[178154] = {
			["encounterName"] = "Oshir",
			["npcID"] = 89011,
			["encounterID"] = 1750,
		},
		[374706] = {
			["npcID"] = 190368,
		},
		[395184] = {
			["npcID"] = 185883,
		},
		[298940] = {
			["encounterName"] = "Trixie & Naeno",
			["npcID"] = 153755,
			["encounterID"] = 2312,
		},
		[360373] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[386994] = {
			["npcID"] = 194086,
		},
		[202728] = {
			["npcID"] = 99649,
		},
		[323515] = {
			["encounterName"] = "Gorechop",
			["encounterID"] = 2365,
			["npcID"] = 162317,
		},
		[358327] = {
			["npcID"] = 179760,
		},
		[44547] = {
			["source"] = "Sister of Torment",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24697,
		},
		[358328] = {
			["npcID"] = 179760,
		},
		[395188] = {
			["npcID"] = 188124,
		},
		[339900] = {
			["npcID"] = 159152,
		},
		[236518] = {
			["encounterName"] = "Sisters of the Moon",
			["npcID"] = 118518,
			["encounterID"] = 2050,
		},
		[360378] = {
			["encounterName"] = "The Jailer",
			["npcID"] = 180990,
			["encounterID"] = 2537,
		},
		[321471] = {
			["encounterName"] = "Mistcaller",
			["encounterID"] = 2392,
			["npcID"] = 164501,
		},
		[298946] = {
			["encounterName"] = "Trixie & Naeno",
			["npcID"] = 153755,
			["encounterID"] = 2312,
		},
		[4962] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crypt Beast",
			["npcID"] = 10413,
		},
		[79872] = {
			["npcID"] = 177586,
		},
		[413621] = {
			["source"] = "Infinite Infiltrator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206214,
		},
		[348094] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[288710] = {
			["npcID"] = 157683,
		},
		[339904] = {
			["npcID"] = 159155,
		},
		[220138] = {
			["source"] = "Kirin Tor Invoker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 110715,
		},
		[405433] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["encounterID"] = 2684,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201668,
		},
		[268234] = {
			["encounterName"] = "Raal the Gluttonous",
			["source"] = "Bile Oozeling",
			["encounterID"] = 2115,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 136541,
		},
		[401338] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elusive Lavafang",
			["npcID"] = 204828,
		},
		[354240] = {
			["npcID"] = 179433,
		},
		[393148] = {
			["npcID"] = 188704,
		},
		[395196] = {
			["npcID"] = 185883,
		},
		[374719] = {
			["npcID"] = 193702,
		},
		[344003] = {
			["npcID"] = 168580,
		},
		[387006] = {
			["npcID"] = 186361,
		},
		[389054] = {
			["npcID"] = 196694,
		},
		[317383] = {
			["npcID"] = 150237,
		},
		[77826] = {
			["encounterName"] = "Nefarian's End",
			["npcID"] = 41270,
			["encounterID"] = 1026,
		},
		[331718] = {
			["npcID"] = 171772,
		},
		[199663] = {
			["npcID"] = 98370,
		},
		[401342] = {
			["source"] = "Crimson Oldblood",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201054,
		},
		[389056] = {
			["encounterName"] = "Watcher Irideus",
			["npcID"] = 189719,
			["encounterID"] = 2615,
		},
		[384961] = {
			["npcID"] = 186208,
		},
		[378818] = {
			["npcID"] = 192788,
		},
		[339911] = {
			["npcID"] = 159152,
		},
		[12675] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Murkblood Oracle",
			["npcID"] = 17771,
		},
		[374724] = {
			["npcID"] = 190368,
		},
		[335817] = {
			["encounterName"] = "Devos, Paragon of Loyalty",
			["npcID"] = 162061,
			["encounterID"] = 2359,
		},
		[337865] = {
			["encounterName"] = "Sun King's Salvation",
			["npcID"] = 165759,
			["encounterID"] = 2402,
		},
		[356295] = {
			["npcID"] = 170257,
		},
		[411585] = {
			["source"] = "Jalgon Stoutburn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204426,
		},
		[341962] = {
			["npcID"] = 162109,
		},
		[364488] = {
			["encounterName"] = "The Jailer",
			["npcID"] = 180990,
			["encounterID"] = 2537,
		},
		[226287] = {
			["npcID"] = 101438,
		},
		[188404] = {
			["encounterName"] = "Hymdall",
			["encounterID"] = 1805,
			["npcID"] = 97788,
		},
		[214001] = {
			["npcID"] = 102095,
		},
		[151545] = {
			["npcID"] = 75210,
		},
		[358348] = {
			["npcID"] = 177913,
		},
		[372683] = {
			["npcID"] = 187894,
		},
		[378827] = {
			["npcID"] = 192786,
		},
		[323538] = {
			["encounterName"] = "High Adjudicator Aleez",
			["encounterID"] = 2403,
			["npcID"] = 165410,
		},
		[407496] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[376780] = {
			["encounterName"] = "Warlord Sargha",
			["npcID"] = 189901,
			["encounterID"] = 2611,
		},
		[214003] = {
			["npcID"] = 102094,
		},
		[356303] = {
			["npcID"] = 180162,
		},
		[15043] = {
			["npcID"] = 40446,
		},
		[354256] = {
			["npcID"] = 177413,
		},
		[356304] = {
			["npcID"] = 170257,
		},
		[236529] = {
			["encounterName"] = "Sisters of the Moon",
			["npcID"] = 118523,
			["encounterID"] = 2050,
		},
		[417737] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Klaxxi Amber Shaper",
			["npcID"] = 207918,
		},
		[387021] = {
			["npcID"] = 192238,
		},
		[166906] = {
			["npcID"] = 178645,
		},
		[151548] = {
			["npcID"] = 75272,
		},
		[337876] = {
			["npcID"] = 162874,
		},
		[356306] = {
			["npcID"] = 182214,
		},
		[325590] = {
			["encounterName"] = "Sun King's Salvation",
			["npcID"] = 165763,
			["encounterID"] = 2402,
		},
		[319447] = {
			["npcID"] = 168004,
		},
		[378832] = {
			["npcID"] = 196384,
		},
		[325591] = {
			["npcID"] = 156779,
		},
		[192504] = {
			["encounterName"] = "Tirathon Saltheril",
			["npcID"] = 95885,
			["encounterID"] = 1815,
		},
		[348117] = {
			["encounterName"] = "The Eye of the Jailer",
			["npcID"] = 175725,
			["encounterID"] = 2433,
		},
		[339927] = {
			["npcID"] = 173553,
		},
		[384978] = {
			["encounterName"] = "Umbrelskul",
			["npcID"] = 186738,
			["encounterID"] = 2584,
		},
		[378835] = {
			["npcID"] = 186362,
		},
		[266209] = {
			["npcID"] = 134284,
		},
		[366549] = {
			["npcID"] = 185154,
		},
		[352215] = {
			["npcID"] = 180246,
		},
		[341977] = {
			["npcID"] = 170690,
		},
		[176124] = {
			["npcID"] = 173114,
		},
		[333787] = {
			["npcID"] = 168934,
		},
		[354265] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["npcID"] = 175730,
			["encounterID"] = 2431,
		},
		[374743] = {
			["npcID"] = 115488,
		},
		[372696] = {
			["npcID"] = 188244,
		},
		[327646] = {
			["encounterName"] = "Mueh'zala",
			["encounterID"] = 2396,
			["npcID"] = 166608,
		},
		[395222] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kain Firebrand",
			["npcID"] = 193675,
		},
		[417748] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Klaxxi Blade Lord",
			["npcID"] = 207922,
		},
		[226296] = {
			["npcID"] = 91000,
		},
		[331743] = {
			["npcID"] = 166276,
		},
		[360412] = {
			["encounterName"] = "Vigilant Guardian",
			["encounterID"] = 2512,
			["npcID"] = 180773,
		},
		[200700] = {
			["encounterName"] = "Dargrul the Underking",
			["npcID"] = 91007,
			["encounterID"] = 1793,
		},
		[378843] = {
			["npcID"] = 191713,
		},
		[360414] = {
			["encounterName"] = "Vigilant Guardian",
			["encounterID"] = 2512,
			["npcID"] = 180773,
		},
		[348128] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["encounterID"] = 2425,
			["npcID"] = 175616,
		},
		[401370] = {
			["source"] = "Raging Owlbeast",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205316,
		},
		[366559] = {
			["npcID"] = 185154,
		},
		[387037] = {
			["npcID"] = 195917,
		},
		[325605] = {
			["npcID"] = 171251,
		},
		[378847] = {
			["npcID"] = 192787,
		},
		[389086] = {
			["npcID"] = 193741,
		},
		[401373] = {
			["source"] = "Raging Owlbeast",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205316,
		},
		[387039] = {
			["npcID"] = 187299,
		},
		[350180] = {
			["npcID"] = 177286,
		},
		[327655] = {
			["npcID"] = 168420,
		},
		[329703] = {
			["npcID"] = 159106,
		},
		[421852] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shoreline Gladehart",
			["npcID"] = 210283,
		},
		[391136] = {
			["npcID"] = 187240,
		},
		[319465] = {
			["npcID"] = 164184,
		},
		[378850] = {
			["npcID"] = 181536,
		},
		[151558] = {
			["npcID"] = 75272,
		},
		[266225] = {
			["encounterName"] = "Gorak Tul",
			["source"] = "Gorak Tul",
			["encounterID"] = 2117,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131864,
		},
		[417759] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Klaxxi Amber Shaper",
			["npcID"] = 207918,
		},
		[329706] = {
			["npcID"] = 176259,
		},
		[358375] = {
			["npcID"] = 179472,
		},
		[427999] = {
			["encounterName"] = "Smolderon",
			["source"] = "Smolderon",
			["npcID"] = 200927,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2824,
		},
		[252923] = {
			["source"] = "Zanchuli Witch-Doctor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122969,
		},
		[45065] = {
			["encounterName"] = "Brutallus",
			["encounterID"] = 725,
			["npcID"] = 24895,
		},
		[387045] = {
			["npcID"] = 195177,
		},
		[305136] = {
			["npcID"] = 156226,
		},
		[417763] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Overlord Mechagon",
			["npcID"] = 205309,
		},
		[268278] = {
			["encounterName"] = "Lord and Lady Waycrest",
			["source"] = "Lady Waycrest",
			["encounterID"] = 2116,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131545,
		},
		[401382] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Past Self",
			["npcID"] = 185800,
		},
		[329711] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 169196,
			["encounterID"] = 2407,
		},
		[389096] = {
			["npcID"] = 196737,
		},
		[327664] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 162689,
		},
		[387049] = {
			["npcID"] = 194091,
		},
		[376811] = {
			["encounterName"] = "Treemouth",
			["encounterID"] = 2568,
			["npcID"] = 186120,
		},
		[395241] = {
			["npcID"] = 198868,
		},
		[389098] = {
			["npcID"] = 196737,
		},
		[366573] = {
			["npcID"] = 185154,
		},
		[401385] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Carcaxas",
			["npcID"] = 202836,
		},
		[313332] = {
			["npcID"] = 166046,
		},
		[374765] = {
			["npcID"] = 190931,
		},
		[233473] = {
			["npcID"] = 117042,
		},
		[201733] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["npcID"] = 98970,
			["encounterID"] = 1835,
		},
		[423912] = {
			["source"] = "The Stonewarmer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210235,
		},
		[360432] = {
			["npcID"] = 182362,
		},
		[362480] = {
			["npcID"] = 182322,
		},
		[372719] = {
			["encounterName"] = "Sentinel Talondras",
			["npcID"] = 184124,
			["encounterID"] = 2557,
		},
		[15620] = {
			["npcID"] = 18965,
		},
		[387054] = {
			["npcID"] = 187281,
		},
		[212997] = {
			["encounterName"] = "Tichondrius",
			["encounterID"] = 1862,
			["npcID"] = 103685,
		},
		[166923] = {
			["npcID"] = 81603,
		},
		[409581] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Whisper in the Dark",
			["npcID"] = 203806,
		},
		[272382] = {
			["npcID"] = 155250,
		},
		[296956] = {
			["npcID"] = 152995,
		},
		[407535] = {
			["source"] = "Horde Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203861,
		},
		[151566] = {
			["npcID"] = 74349,
		},
		[192522] = {
			["encounterName"] = "Ash'Golm",
			["npcID"] = 95886,
			["encounterID"] = 1816,
		},
		[354297] = {
			["npcID"] = 180431,
		},
		[405491] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Buried Wealth",
			["npcID"] = 205330,
		},
		[207881] = {
			["encounterName"] = "Talixae Flamewreath",
			["npcID"] = 104217,
			["encounterID"] = 1869,
		},
		[405492] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Thadrion",
			["encounterID"] = 2693,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200913,
		},
		[333821] = {
			["npcID"] = 161896,
		},
		[425970] = {
			["source"] = "Verdant Boughwalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210437,
		},
		[395254] = {
			["npcID"] = 198878,
		},
		[417780] = {
			["source"] = "Mechanized Mekgineer Hologram",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207539,
		},
		[372730] = {
			["npcID"] = 188244,
		},
		[417781] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Overlord Mechagon",
			["npcID"] = 205309,
		},
		[376827] = {
			["encounterName"] = "Balakar Khan",
			["encounterID"] = 2580,
			["npcID"] = 186151,
		},
		[348159] = {
			["encounterName"] = "Doctor Ickus",
			["encounterID"] = 2384,
			["npcID"] = 164967,
		},
		[407544] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["encounterID"] = 2680,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201320,
		},
		[387067] = {
			["npcID"] = 193214,
		},
		[348160] = {
			["encounterName"] = "Doctor Ickus",
			["encounterID"] = 2384,
			["npcID"] = 164967,
		},
		[376829] = {
			["encounterName"] = "Balakar Khan",
			["encounterID"] = 2580,
			["npcID"] = 186151,
		},
		[428023] = {
			["source"] = "Keeper of the Dream",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210423,
		},
		[333827] = {
			["npcID"] = 167533,
		},
		[372735] = {
			["npcID"] = 187969,
		},
		[270348] = {
			["npcID"] = 154131,
		},
		[331781] = {
			["npcID"] = 170164,
		},
		[31623] = {
			["encounterName"] = "Swamplord Musel'ek",
			["source"] = "Swamplord Musel'ek",
			["npcID"] = 17826,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1947,
		},
		[352259] = {
			["npcID"] = 179433,
		},
		[411644] = {
			["source"] = "Time-Lost Tidehunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205365,
		},
		[385024] = {
			["npcID"] = 188027,
		},
		[333831] = {
			["npcID"] = 171109,
		},
		[339975] = {
			["npcID"] = 173609,
		},
		[393217] = {
			["npcID"] = 189043,
		},
		[227341] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114251,
		},
		[407552] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Rionthus",
			["encounterID"] = 2693,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200918,
		},
		[111631] = {
			["encounterName"] = "Instructor Chillheart",
			["npcID"] = 58633,
			["encounterID"] = 1426,
		},
		[374789] = {
			["encounterName"] = "Leymor",
			["npcID"] = 186644,
			["encounterID"] = 2582,
		},
		[272402] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cutwater Knife Juggler",
			["npcID"] = 129599,
		},
		[153623] = {
			["encounterName"] = "Nhallish",
			["npcID"] = 75829,
			["encounterID"] = 1688,
		},
		[385029] = {
			["npcID"] = 186246,
		},
		[403459] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Essence of Shadow",
			["encounterID"] = 2687,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201774,
		},
		[296978] = {
			["npcID"] = 153003,
		},
		[191508] = {
			["npcID"] = 101637,
		},
		[362507] = {
			["npcID"] = 182690,
		},
		[333839] = {
			["npcID"] = 167534,
		},
		[191509] = {
			["npcID"] = 102886,
		},
		[319506] = {
			["npcID"] = 164232,
		},
		[395273] = {
			["npcID"] = 196856,
		},
		[202772] = {
			["source"] = "Stonefist Brawler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 102623,
		},
		[352271] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[387083] = {
			["npcID"] = 187264,
		},
		[266266] = {
			["encounterName"] = "Gorak Tul",
			["source"] = "Gorak Tul",
			["encounterID"] = 2117,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131864,
		},
		[366606] = {
			["encounterName"] = "Rygelon",
			["encounterID"] = 2549,
			["npcID"] = 182777,
		},
		[385036] = {
			["npcID"] = 190373,
		},
		[421898] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Gnarlroot",
			["npcID"] = 209333,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2820,
		},
		[333845] = {
			["npcID"] = 167534,
		},
		[409612] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Whisper in the Dark",
			["npcID"] = 203806,
		},
		[151581] = {
			["npcID"] = 75426,
		},
		[323608] = {
			["encounterName"] = "Mordretha",
			["encounterID"] = 2404,
			["npcID"] = 165946,
		},
		[376851] = {
			["encounterName"] = "Dathea, Ascended",
			["npcID"] = 189813,
			["encounterID"] = 2635,
		},
		[329753] = {
			["npcID"] = 156134,
		},
		[339992] = {
			["npcID"] = 173609,
		},
		[284703] = {
			["npcID"] = 144572,
		},
		[368661] = {
			["npcID"] = 179386,
		},
		[387091] = {
			["npcID"] = 187239,
		},
		[391187] = {
			["npcID"] = 197557,
		},
		[368662] = {
			["npcID"] = 180015,
		},
		[321564] = {
			["npcID"] = 165829,
		},
		[360472] = {
			["npcID"] = 182362,
		},
		[321565] = {
			["npcID"] = 165829,
		},
		[301088] = {
			["npcID"] = 151657,
		},
		[167966] = {
			["encounterName"] = "Ancient Protectors",
			["npcID"] = 83893,
			["encounterID"] = 1757,
		},
		[9734] = {
			["npcID"] = 82009,
		},
		[79896] = {
			["npcID"] = 184080,
		},
		[259092] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Irontide Stormcaller",
			["npcID"] = 126919,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[189469] = {
			["npcID"] = 100364,
		},
		[241687] = {
			["npcID"] = 117484,
		},
		[376860] = {
			["npcID"] = 186854,
		},
		[428054] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40586,
		},
		[397338] = {
			["encounterName"] = "Kurog Grimtotem",
			["npcID"] = 190588,
			["encounterID"] = 2605,
		},
		[292903] = {
			["npcID"] = 177735,
		},
		[208924] = {
			["encounterName"] = "Trilliax",
			["npcID"] = 104288,
			["encounterID"] = 1867,
		},
		[356384] = {
			["npcID"] = 178907,
		},
		[415769] = {
			["source"] = "Coalesced Time",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206140,
		},
		[415770] = {
			["source"] = "Coalesced Time",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206140,
		},
		[356386] = {
			["npcID"] = 178907,
		},
		[391198] = {
			["npcID"] = 190598,
		},
		[159780] = {
			["npcID"] = 76189,
		},
		[415773] = {
			["source"] = "Interval",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206065,
		},
		[352293] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[395297] = {
			["source"] = "Snee",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186203,
		},
		[236572] = {
			["npcID"] = 117198,
		},
		[329770] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[393251] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Frenzied Grovetalon",
			["npcID"] = 187507,
		},
		[395299] = {
			["npcID"] = 194402,
		},
		[395300] = {
			["npcID"] = 194210,
		},
		[340011] = {
			["npcID"] = 173613,
		},
		[374823] = {
			["npcID"] = 190370,
		},
		[208929] = {
			["encounterName"] = "Il'gynoth, The Heart of Corruption",
			["encounterID"] = 1873,
			["npcID"] = 105383,
		},
		[366633] = {
			["npcID"] = 185155,
		},
		[385063] = {
			["npcID"] = 190207,
		},
		[329774] = {
			["encounterName"] = "Hungering Destroyer",
			["npcID"] = 164261,
			["encounterID"] = 2383,
		},
		[389159] = {
			["source"] = "Liskanoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193533,
		},
		[207906] = {
			["encounterName"] = "Talixae Flamewreath",
			["npcID"] = 104217,
			["encounterID"] = 1869,
		},
		[346157] = {
			["npcID"] = 180252,
		},
		[385065] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["npcID"] = 189492,
			["encounterID"] = 2607,
		},
		[288822] = {
			["source"] = "Rastari Beastmaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 147829,
		},
		[340016] = {
			["npcID"] = 171184,
		},
		[393259] = {
			["npcID"] = 189043,
		},
		[340018] = {
			["npcID"] = 172523,
		},
		[333875] = {
			["npcID"] = 168942,
		},
		[147500] = {
			["npcID"] = 72809,
		},
		[340019] = {
			["npcID"] = 173604,
		},
		[191527] = {
			["npcID"] = 96657,
		},
		[217124] = {
			["npcID"] = 106764,
		},
		[297017] = {
			["npcID"] = 152995,
		},
		[227363] = {
			["encounterName"] = "Attumen the Huntsman",
			["encounterID"] = 1960,
			["npcID"] = 114264,
		},
		[118297] = {
			["npcID"] = 61029,
		},
		[297018] = {
			["npcID"] = 152995,
		},
		[397358] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184986,
		},
		[329783] = {
			["npcID"] = 156226,
		},
		[356404] = {
			["npcID"] = 180091,
		},
		[297020] = {
			["npcID"] = 153011,
		},
		[393265] = {
			["npcID"] = 188509,
		},
		[387122] = {
			["npcID"] = 193214,
		},
		[227365] = {
			["encounterName"] = "Attumen the Huntsman",
			["encounterID"] = 1960,
			["npcID"] = 114264,
		},
		[292926] = {
			["npcID"] = 151127,
		},
		[319547] = {
			["npcID"] = 159233,
		},
		[156718] = {
			["npcID"] = 76104,
		},
		[356407] = {
			["npcID"] = 180091,
		},
		[358455] = {
			["npcID"] = 177972,
		},
		[79903] = {
			["npcID"] = 81996,
		},
		[340026] = {
			["npcID"] = 171184,
		},
		[387125] = {
			["encounterName"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["npcID"] = 195696,
		},
		[315454] = {
			["npcID"] = 177978,
		},
		[374839] = {
			["encounterName"] = "Forgemaster Gorek",
			["npcID"] = 189478,
			["encounterID"] = 2612,
		},
		[325694] = {
			["npcID"] = 160359,
		},
		[417843] = {
			["source"] = "Listless Nae'dra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211164,
		},
		[387127] = {
			["encounterName"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["npcID"] = 195696,
		},
		[337982] = {
			["npcID"] = 162872,
		},
		[325696] = {
			["npcID"] = 168960,
		},
		[356414] = {
			["npcID"] = 179892,
		},
		[51219] = {
			["npcID"] = 46859,
		},
		[272457] = {
			["encounterName"] = "Sporecaller Zancha",
			["npcID"] = 131383,
			["encounterID"] = 2112,
		},
		[389179] = {
			["encounterName"] = "Watcher Irideus",
			["npcID"] = 189719,
			["encounterID"] = 2615,
		},
		[325700] = {
			["npcID"] = 165529,
		},
		[106526] = {
			["encounterName"] = "Wise Mari",
			["npcID"] = 56448,
			["encounterID"] = 1418,
		},
		[274507] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bilge Rat Swabby",
			["npcID"] = 129526,
		},
		[325701] = {
			["npcID"] = 165529,
		},
		[226347] = {
			["npcID"] = 102404,
		},
		[331845] = {
			["npcID"] = 165687,
		},
		[391230] = {
			["npcID"] = 197557,
		},
		[387135] = {
			["npcID"] = 194898,
		},
		[331846] = {
			["npcID"] = 167964,
		},
		[183345] = {
			["npcID"] = 153011,
		},
		[319560] = {
			["npcID"] = 172704,
		},
		[170035] = {
			["encounterName"] = "Yalnu",
			["npcID"] = 84358,
			["encounterID"] = 1756,
		},
		[362565] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
			["encounterID"] = 2422,
		},
		[292942] = {
			["npcID"] = 151128,
		},
		[362566] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
			["encounterID"] = 2422,
		},
		[284752] = {
			["npcID"] = 144572,
		},
		[208944] = {
			["encounterName"] = "Grand Magistrix Elisande",
			["encounterID"] = 1872,
			["npcID"] = 106643,
		},
		[346186] = {
			["npcID"] = 167323,
		},
		[364616] = {
			["npcID"] = 183596,
		},
		[368712] = {
			["npcID"] = 184058,
		},
		[362569] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
			["encounterID"] = 2422,
		},
		[194611] = {
			["npcID"] = 98926,
		},
		[350283] = {
			["encounterName"] = "The Nine",
			["npcID"] = 177094,
			["encounterID"] = 2429,
		},
		[303185] = {
			["source"] = "Azsh'ari Stormbinder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 155629,
		},
		[272469] = {
			["source"] = "Abyssal Reach",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 138538,
		},
		[397382] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Frostforged Zealot",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199547,
		},
		[417860] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shoreline Gladehart",
			["npcID"] = 210283,
		},
		[250925] = {
			["source"] = "Felsiege Champion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 119597,
		},
		[397383] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Magma Mystic",
			["encounterID"] = 2682,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199703,
		},
		[387145] = {
			["npcID"] = 194317,
		},
		[374859] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["encounterID"] = 2529,
			["npcID"] = 180906,
		},
		[209971] = {
			["encounterName"] = "Grand Magistrix Elisande",
			["encounterID"] = 1872,
			["npcID"] = 106643,
		},
		[356430] = {
			["npcID"] = 178958,
		},
		[188470] = {
			["source"] = "Surging Podling",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210210,
		},
		[173112] = {
			["npcID"] = 83697,
		},
		[356431] = {
			["npcID"] = 180113,
		},
		[166969] = {
			["npcID"] = 79315,
		},
		[401482] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["source"] = "Tyr, the Infinite Keeper",
			["encounterID"] = 2670,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198998,
		},
		[370766] = {
			["npcID"] = 187139,
		},
		[147516] = {
			["npcID"] = 72809,
		},
		[362576] = {
			["npcID"] = 182728,
		},
		[295001] = {
			["npcID"] = 151128,
		},
		[338005] = {
			["npcID"] = 165415,
		},
		[374865] = {
			["npcID"] = 194544,
		},
		[393295] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[393296] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Frostwrought Dominator",
			["npcID"] = 198308,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[364628] = {
			["npcID"] = 183596,
		},
		[338008] = {
			["npcID"] = 163213,
		},
		[229429] = {
			["npcID"] = 115388,
		},
		[340057] = {
			["npcID"] = 174336,
		},
		[366678] = {
			["encounterName"] = "The Jailer",
			["npcID"] = 180990,
			["encounterID"] = 2537,
		},
		[385108] = {
			["npcID"] = 187317,
		},
		[352345] = {
			["encounterName"] = "Timecap'n Hooktail",
			["npcID"] = 176178,
			["encounterID"] = 2419,
		},
		[338011] = {
			["npcID"] = 166318,
		},
		[325725] = {
			["encounterName"] = "Mueh'zala",
			["encounterID"] = 2396,
			["npcID"] = 166608,
		},
		[356442] = {
			["npcID"] = 180092,
		},
		[9672] = {
			["npcID"] = 45985,
		},
		[360538] = {
			["npcID"] = 182120,
		},
		[346204] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["encounterID"] = 2425,
			["npcID"] = 175616,
		},
		[198715] = {
			["npcID"] = 100876,
		},
		[184381] = {
			["npcID"] = 159190,
		},
		[346205] = {
			["npcID"] = 173717,
		},
		[321633] = {
			["npcID"] = 170228,
		},
		[193597] = {
			["encounterName"] = "Lady Hatecoil",
			["npcID"] = 91789,
			["encounterID"] = 1811,
		},
		[323682] = {
			["npcID"] = 163501,
		},
		[366685] = {
			["npcID"] = 185271,
		},
		[393306] = {
			["npcID"] = 193709,
		},
		[346208] = {
			["npcID"] = 177899,
		},
		[323683] = {
			["encounterName"] = "Mordretha",
			["encounterID"] = 2404,
			["npcID"] = 165946,
		},
		[393307] = {
			["npcID"] = 193558,
		},
		[358496] = {
			["npcID"] = 179805,
		},
		[393308] = {
			["npcID"] = 193558,
		},
		[411738] = {
			["source"] = "Rashok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201320,
		},
		[307303] = {
			["npcID"] = 156323,
		},
		[393309] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Flamewrought Eradicator",
			["npcID"] = 198311,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[235578] = {
			["npcID"] = 118698,
		},
		[366689] = {
			["npcID"] = 185268,
		},
		[352355] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 176929,
		},
		[241722] = {
			["source"] = "Ok'rok Icetouch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 121200,
		},
		[364643] = {
			["npcID"] = 181057,
		},
		[383073] = {
			["encounterName"] = "Terros",
			["npcID"] = 190496,
			["encounterID"] = 2639,
		},
		[354405] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[323689] = {
			["npcID"] = 158642,
		},
		[200768] = {
			["npcID"] = 95766,
		},
		[212031] = {
			["npcID"] = 105705,
		},
		[86058] = {
			["encounterName"] = "Halfus Wyrmbreaker",
			["npcID"] = 44687,
			["encounterID"] = 1030,
		},
		[329834] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 169267,
			["encounterID"] = 2405,
		},
		[340073] = {
			["npcID"] = 168697,
		},
		[374885] = {
			["npcID"] = 189555,
		},
		[364647] = {
			["npcID"] = 181057,
		},
		[333931] = {
			["npcID"] = 177443,
		},
		[376934] = {
			["encounterName"] = "Treemouth",
			["encounterID"] = 2568,
			["npcID"] = 186120,
		},
		[372839] = {
			["npcID"] = 191570,
		},
		[333932] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 169813,
			["encounterID"] = 2407,
		},
		[362601] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["encounterID"] = 2539,
			["npcID"] = 182169,
		},
		[356458] = {
			["npcID"] = 180095,
		},
		[270453] = {
			["npcID"] = 151091,
		},
		[329838] = {
			["npcID"] = 159027,
		},
		[198723] = {
			["npcID"] = 99358,
		},
		[342125] = {
			["npcID"] = 167538,
		},
		[417893] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Walking Nightmare",
			["npcID"] = 206627,
		},
		[197700] = {
			["source"] = "Temple Priestess",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 100450,
		},
		[364652] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["encounterID"] = 2539,
			["npcID"] = 182169,
		},
		[366701] = {
			["npcID"] = 185268,
		},
		[409704] = {
			["source"] = "Kretchenwrath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201673,
		},
		[403561] = {
			["source"] = "Fael'lin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198916,
		},
		[383084] = {
			["npcID"] = 190066,
		},
		[393323] = {
			["npcID"] = 198298,
		},
		[321652] = {
			["npcID"] = 172601,
		},
		[333939] = {
			["npcID"] = 165206,
		},
		[411754] = {
			["source"] = "Conduit Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205478,
		},
		[30990] = {
			["npcID"] = 17427,
		},
		[376943] = {
			["encounterName"] = "Dathea, Ascended",
			["npcID"] = 189813,
			["encounterID"] = 2635,
		},
		[411755] = {
			["source"] = "Conduit Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205478,
		},
		[413803] = {
			["source"] = "Cenrrrn Cirrgl Mooncaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205851,
		},
		[301177] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["npcID"] = 150190,
			["encounterID"] = 2291,
		},
		[360562] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[403565] = {
			["source"] = "Fael'lin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198916,
		},
		[157772] = {
			["source"] = "Voidseer Kalurg",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83385,
		},
		[393327] = {
			["npcID"] = 190778,
		},
		[403566] = {
			["source"] = "Flare Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202683,
		},
		[413805] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cenrrrn Cirrgl Tideshifter",
			["npcID"] = 204516,
		},
		[374898] = {
			["npcID"] = 196897,
		},
		[385137] = {
			["npcID"] = 193535,
		},
		[255041] = {
			["source"] = "Feasting Skyscreamer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 128434,
		},
		[372851] = {
			["encounterName"] = "Melidrussa Chillworn",
			["npcID"] = 188252,
			["encounterID"] = 2609,
		},
		[342135] = {
			["npcID"] = 167532,
		},
		[387186] = {
			["npcID"] = 187127,
		},
		[395378] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Malsegan",
			["npcID"] = 193212,
		},
		[250947] = {
			["source"] = "Vilefiend",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 119602,
		},
		[153679] = {
			["encounterName"] = "Slave Watcher Crushto",
			["npcID"] = 74787,
			["encounterID"] = 1653,
		},
		[385141] = {
			["npcID"] = 190373,
		},
		[387189] = {
			["npcID"] = 196971,
		},
		[206921] = {
			["encounterName"] = "Star Augur Etraeus",
			["encounterID"] = 1863,
			["npcID"] = 103758,
		},
		[342139] = {
			["npcID"] = 167538,
		},
		[360569] = {
			["npcID"] = 182374,
		},
		[193611] = {
			["encounterName"] = "Lady Hatecoil",
			["npcID"] = 91789,
			["encounterID"] = 1811,
		},
		[153680] = {
			["encounterName"] = "Bonemaw",
			["npcID"] = 75452,
			["encounterID"] = 1679,
		},
		[352379] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 176929,
		},
		[387191] = {
			["source"] = "Strunraan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193534,
		},
		[387192] = {
			["npcID"] = 187127,
		},
		[397431] = {
			["encounterName"] = "Dathea, Ascended",
			["npcID"] = 192934,
			["encounterID"] = 2635,
		},
		[393336] = {
			["npcID"] = 189289,
		},
		[173135] = {
			["npcID"] = 83578,
		},
		[366716] = {
			["npcID"] = 185274,
		},
		[389242] = {
			["npcID"] = 193827,
		},
		[110125] = {
			["npcID"] = 57109,
		},
		[409721] = {
			["source"] = "Winglord Dezran",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202610,
		},
		[372862] = {
			["npcID"] = 187318,
		},
		[244808] = {
			["npcID"] = 145337,
		},
		[321669] = {
			["encounterName"] = "Mistcaller",
			["encounterID"] = 2392,
			["npcID"] = 165108,
		},
		[389245] = {
			["npcID"] = 190111,
		},
		[360577] = {
			["npcID"] = 180930,
		},
		[346243] = {
			["npcID"] = 178490,
		},
		[331909] = {
			["npcID"] = 165473,
		},
		[350339] = {
			["encounterName"] = "The Nine",
			["npcID"] = 177407,
			["encounterID"] = 2429,
		},
		[409724] = {
			["source"] = "Neltharion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201668,
		},
		[329862] = {
			["npcID"] = 153885,
		},
		[389247] = {
			["npcID"] = 187187,
		},
		[144470] = {
			["npcID"] = 71952,
		},
		[323720] = {
			["npcID"] = 181203,
		},
		[350342] = {
			["encounterName"] = "The Nine",
			["npcID"] = 177095,
			["encounterID"] = 2429,
		},
		[352390] = {
			["npcID"] = 179334,
		},
		[125997] = {
			["npcID"] = 63764,
		},
		[270481] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 135002,
		},
		[389251] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Skulking Lasher",
			["npcID"] = 204741,
		},
		[319628] = {
			["npcID"] = 178376,
		},
		[393348] = {
			["npcID"] = 198263,
		},
		[387205] = {
			["npcID"] = 198417,
		},
		[346251] = {
			["npcID"] = 178490,
		},
		[299153] = {
			["encounterName"] = "Trixie & Naeno",
			["npcID"] = 150712,
			["encounterID"] = 2312,
		},
		[403589] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gor'krosh",
			["npcID"] = 199186,
		},
		[147546] = {
			["npcID"] = 72970,
		},
		[268440] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Crackshot",
			["npcID"] = 126918,
		},
		[360589] = {
			["npcID"] = 182114,
		},
		[389258] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Piskato",
			["npcID"] = 195973,
		},
		[360590] = {
			["npcID"] = 182114,
		},
		[403593] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magma Burster",
			["npcID"] = 200801,
		},
		[405641] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Shadowflame Amalgamation",
			["encounterID"] = 2687,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201934,
		},
		[360591] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 182045,
		},
		[15241] = {
			["npcID"] = 17771,
		},
		[391308] = {
			["npcID"] = 191450,
		},
		[15497] = {
			["npcID"] = 17771,
		},
		[379023] = {
			["npcID"] = 191240,
		},
		[422026] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Gnarlroot",
			["npcID"] = 209333,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2820,
		},
		[325782] = {
			["npcID"] = 164038,
		},
		[422027] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Spirit of the Kaldorei",
			["npcID"] = 207800,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[331927] = {
			["npcID"] = 167962,
		},
		[358548] = {
			["npcID"] = 180664,
		},
		[299164] = {
			["encounterName"] = "Trixie & Naeno",
			["npcID"] = 153756,
			["encounterID"] = 2312,
		},
		[385170] = {
			["npcID"] = 191645,
		},
		[342168] = {
			["npcID"] = 170833,
		},
		[409744] = {
			["source"] = "Kretchenwrath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201673,
		},
		[173148] = {
			["npcID"] = 81279,
		},
		[389267] = {
			["npcID"] = 195506,
		},
		[385172] = {
			["npcID"] = 191645,
		},
		[389268] = {
			["npcID"] = 187135,
		},
		[376982] = {
			["npcID"] = 192076,
		},
		[238677] = {
			["npcID"] = 120698,
		},
		[389269] = {
			["npcID"] = 187061,
		},
		[317598] = {
			["source"] = "Ishak of the Four Winds",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 157134,
		},
		[389270] = {
			["npcID"] = 187061,
		},
		[325790] = {
			["npcID"] = 166225,
		},
		[111668] = {
			["encounterName"] = "Commander Ri'mok",
			["npcID"] = 56877,
			["encounterID"] = 1406,
		},
		[407701] = {
			["isChanneled"] = true,
			["source"] = "Incorporeal Being",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 204030,
		},
		[379033] = {
			["npcID"] = 195351,
		},
		[350365] = {
			["encounterName"] = "The Nine",
			["npcID"] = 177095,
			["encounterID"] = 2429,
		},
		[417941] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rotted Gladiator",
			["npcID"] = 207808,
		},
		[338079] = {
			["npcID"] = 164737,
		},
		[389273] = {
			["npcID"] = 186612,
		},
		[199772] = {
			["npcID"] = 97087,
		},
		[319650] = {
			["encounterName"] = "Kryxis the Voracious",
			["npcID"] = 162100,
			["encounterID"] = 2360,
		},
		[389274] = {
			["npcID"] = 190070,
		},
		[157794] = {
			["npcID"] = 76263,
		},
		[284840] = {
			["npcID"] = 165169,
		},
		[340130] = {
			["npcID"] = 165663,
		},
		[317605] = {
			["npcID"] = 162744,
		},
		[385181] = {
			["encounterName"] = "Gulping Goliath",
			["npcID"] = 189722,
			["encounterID"] = 2616,
		},
		[297128] = {
			["npcID"] = 144298,
		},
		[198750] = {
			["encounterName"] = "Odyn",
			["encounterID"] = 1809,
			["npcID"] = 102019,
		},
		[184416] = {
			["npcID"] = 169277,
		},
		[336037] = {
			["npcID"] = 181186,
		},
		[409757] = {
			["source"] = "Djaradin Commander",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202109,
		},
		[387232] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Taresh",
			["npcID"] = 188711,
		},
		[227420] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114266,
		},
		[344230] = {
			["encounterName"] = "Stone Legion Generals",
			["encounterID"] = 2417,
			["npcID"] = 168112,
		},
		[157797] = {
			["npcID"] = 77080,
		},
		[167012] = {
			["npcID"] = 170694,
		},
		[193633] = {
			["npcID"] = 98275,
		},
		[325802] = {
			["npcID"] = 166936,
		},
		[204896] = {
			["isChanneled"] = true,
			["source"] = "Bloodscent Felhound",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 98813,
		},
		[164965] = {
			["npcID"] = 81820,
		},
		[78907] = {
			["npcID"] = 183994,
		},
		[376997] = {
			["encounterName"] = "Crawth",
			["npcID"] = 191736,
			["encounterID"] = 2564,
		},
		[395427] = {
			["npcID"] = 189235,
		},
		[44577] = {
			["source"] = "Sunblade Imp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24815,
		},
		[366759] = {
			["npcID"] = 183498,
		},
		[270515] = {
			["npcID"] = 137905,
		},
		[159847] = {
			["npcID"] = 76556,
		},
		[411811] = {
			["source"] = "Bubbling Slime",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205651,
		},
		[405668] = {
			["source"] = "Sundered Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201753,
		},
		[383143] = {
			["npcID"] = 197356,
		},
		[342189] = {
			["npcID"] = 174175,
		},
		[79932] = {
			["npcID"] = 81999,
		},
		[227424] = {
			["npcID"] = 109577,
		},
		[346286] = {
			["encounterName"] = "Mailroom Mayhem",
			["encounterID"] = 2424,
			["npcID"] = 175646,
		},
		[422053] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Tainted Lasher",
			["npcID"] = 210231,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2820,
		},
		[358573] = {
			["npcID"] = 179423,
		},
		[336048] = {
			["npcID"] = 176262,
		},
		[329905] = {
			["npcID"] = 157122,
		},
		[180327] = {
			["npcID"] = 126073,
		},
		[387243] = {
			["npcID"] = 195095,
		},
		[334002] = {
			["npcID"] = 173943,
		},
		[350385] = {
			["encounterName"] = "The Nine",
			["npcID"] = 177094,
			["encounterID"] = 2429,
		},
		[319669] = {
			["encounterName"] = "Kul'tharok",
			["encounterID"] = 2364,
			["npcID"] = 162309,
		},
		[329908] = {
			["npcID"] = 157017,
		},
		[329909] = {
			["npcID"] = 157017,
		},
		[172138] = {
			["npcID"] = 86185,
		},
		[210022] = {
			["encounterName"] = "Grand Magistrix Elisande",
			["encounterID"] = 1872,
			["npcID"] = 106643,
		},
		[192617] = {
			["encounterName"] = "Wrath of Azshara",
			["npcID"] = 96028,
			["encounterID"] = 1814,
		},
		[164973] = {
			["npcID"] = 81985,
		},
		[226406] = {
			["npcID"] = 113537,
		},
		[329916] = {
			["npcID"] = 171173,
		},
		[356537] = {
			["npcID"] = 179334,
		},
		[358585] = {
			["npcID"] = 176669,
		},
		[303296] = {
			["source"] = "Zanj'ir Huntress",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 155618,
		},
		[354490] = {
			["npcID"] = 179526,
		},
		[9739] = {
			["npcID"] = 82015,
		},
		[238694] = {
			["encounterName"] = "Fury of the God Queen",
			["encounterID"] = 2059,
			["npcID"] = 116484,
		},
		[374969] = {
			["encounterName"] = "Forgemaster Gorek",
			["npcID"] = 189478,
			["encounterID"] = 2612,
		},
		[377017] = {
			["encounterName"] = "Warlord Sargha",
			["npcID"] = 189901,
			["encounterID"] = 2611,
		},
		[227432] = {
			["npcID"] = 109577,
		},
		[360636] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 181549,
		},
		[230504] = {
			["encounterName"] = "Spellblade Aluriel",
			["encounterID"] = 1871,
			["npcID"] = 115905,
		},
		[348350] = {
			["encounterName"] = "Zo'phex the Sentinel",
			["encounterID"] = 2425,
			["npcID"] = 175616,
		},
		[207979] = {
			["encounterName"] = "Talixae Flamewreath",
			["npcID"] = 104273,
			["encounterID"] = 1869,
		},
		[192621] = {
			["encounterName"] = "Ash'Golm",
			["encounterID"] = 1816,
			["npcID"] = 95886,
		},
		[340160] = {
			["npcID"] = 173655,
		},
		[293063] = {
			["npcID"] = 151331,
		},
		[336066] = {
			["npcID"] = 179911,
		},
		[201837] = {
			["npcID"] = 99366,
		},
		[383165] = {
			["npcID"] = 197356,
		},
		[319685] = {
			["encounterName"] = "Kryxis the Voracious",
			["npcID"] = 162100,
			["encounterID"] = 2360,
		},
		[387261] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["npcID"] = 189492,
			["encounterID"] = 2607,
		},
		[336068] = {
			["npcID"] = 182686,
		},
		[321734] = {
			["npcID"] = 156564,
		},
		[407740] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aurantia",
			["npcID"] = 203047,
		},
		[201839] = {
			["npcID"] = 99366,
		},
		[356548] = {
			["npcID"] = 178392,
		},
		[334023] = {
			["npcID"] = 167536,
		},
		[360644] = {
			["npcID"] = 181339,
		},
		[231532] = {
			["npcID"] = 114845,
		},
		[303308] = {
			["npcID"] = 186112,
		},
		[329929] = {
			["npcID"] = 157083,
		},
		[323786] = {
			["npcID"] = 163524,
		},
		[12747] = {
			["npcID"] = 6519,
		},
		[327882] = {
			["npcID"] = 168153,
		},
		[329930] = {
			["npcID"] = 157083,
		},
		[256106] = {
			["encounterName"] = "Skycap'n Kragg",
			["source"] = "Skycap'n Kragg",
			["npcID"] = 126832,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2093,
		},
		[87618] = {
			["encounterName"] = "Asaad",
			["source"] = "Asaad",
			["encounterID"] = 1042,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43875,
		},
		[393411] = {
			["npcID"] = 193849,
		},
		[327885] = {
			["encounterName"] = "Lord Chamberlain",
			["encounterID"] = 2381,
			["npcID"] = 164218,
		},
		[194675] = {
			["npcID"] = 98963,
		},
		[350411] = {
			["encounterName"] = "Soulrender Dormazain",
			["npcID"] = 175728,
			["encounterID"] = 2434,
		},
		[358603] = {
			["npcID"] = 181212,
		},
		[377033] = {
			["npcID"] = 193153,
		},
		[264407] = {
			["encounterName"] = "Raal the Gluttonous",
			["source"] = "Faceless Maiden",
			["npcID"] = 131821,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2115,
		},
		[377034] = {
			["encounterName"] = "Crawth",
			["npcID"] = 191736,
			["encounterID"] = 2564,
		},
		[397514] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Warlord Kagni",
			["encounterID"] = 2682,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199659,
		},
		[393419] = {
			["npcID"] = 189289,
		},
		[325844] = {
			["npcID"] = 163991,
		},
		[387277] = {
			["npcID"] = 195917,
		},
		[192631] = {
			["encounterName"] = "Ash'Golm",
			["encounterID"] = 1816,
			["npcID"] = 95886,
		},
		[422090] = {
			["source"] = "Treant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 54983,
		},
		[39207] = {
			["npcID"] = 45618,
		},
		[389327] = {
			["npcID"] = 188141,
		},
		[358611] = {
			["npcID"] = 179760,
		},
		[329943] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 168156,
			["encounterID"] = 2407,
		},
		[178298] = {
			["npcID"] = 81432,
		},
		[350421] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["npcID"] = 175730,
			["encounterID"] = 2431,
		},
		[350422] = {
			["encounterName"] = "Soulrender Dormazain",
			["npcID"] = 175727,
			["encounterID"] = 2434,
		},
		[325850] = {
			["npcID"] = 166942,
		},
		[272609] = {
			["npcID"] = 138281,
		},
		[224374] = {
			["encounterName"] = "Talixae Flamewreath",
			["npcID"] = 112668,
			["encounterID"] = 1869,
		},
		[258162] = {
			["npcID"] = 193025,
		},
		[323804] = {
			["npcID"] = 163524,
		},
		[317661] = {
			["npcID"] = 163503,
		},
		[224375] = {
			["encounterName"] = "Talixae Flamewreath",
			["npcID"] = 112668,
			["encounterID"] = 1869,
		},
		[393429] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Stormwrought Despoiler",
			["npcID"] = 198326,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[193659] = {
			["encounterName"] = "God-King Skovald",
			["encounterID"] = 1808,
			["npcID"] = 95675,
		},
		[227447] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114284,
		},
		[391382] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Volatile Infuser",
			["npcID"] = 197671,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2635,
		},
		[319711] = {
			["npcID"] = 172053,
		},
		[340189] = {
			["npcID"] = 173655,
		},
		[325855] = {
			["npcID"] = 163991,
		},
		[305378] = {
			["npcID"] = 177862,
		},
		[319713] = {
			["encounterName"] = "Kryxis the Voracious",
			["npcID"] = 162100,
			["encounterID"] = 2360,
		},
		[395480] = {
			["source"] = "Gaelzion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193653,
		},
		[430292] = {
			["source"] = "Inquisitor Fairbell",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211930,
		},
		[391385] = {
			["npcID"] = 182815,
		},
		[387290] = {
			["source"] = "Morlash",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201549,
		},
		[323810] = {
			["encounterName"] = "General Kaal",
			["npcID"] = 166085,
			["encounterID"] = 2363,
		},
		[393434] = {
			["npcID"] = 193790,
		},
		[332002] = {
			["npcID"] = 170417,
		},
		[358623] = {
			["npcID"] = 179552,
		},
		[241784] = {
			["npcID"] = 114629,
		},
		[321764] = {
			["npcID"] = 164861,
		},
		[358624] = {
			["npcID"] = 178997,
		},
		[30741] = {
			["npcID"] = 16807,
		},
		[364769] = {
			["npcID"] = 181360,
		},
		[334053] = {
			["encounterName"] = "Oryphrion",
			["npcID"] = 162060,
			["encounterID"] = 2358,
		},
		[366818] = {
			["npcID"] = 185275,
		},
		[225404] = {
			["npcID"] = 112804,
		},
		[106055] = {
			["encounterName"] = "Wise Mari",
			["npcID"] = 56448,
			["encounterID"] = 1418,
		},
		[387297] = {
			["npcID"] = 186354,
		},
		[375011] = {
			["npcID"] = 191019,
		},
		[368868] = {
			["npcID"] = 184738,
		},
		[395489] = {
			["source"] = "Karantun",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193647,
		},
		[426206] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["encounterID"] = 2731,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208445,
		},
		[241788] = {
			["npcID"] = 114632,
		},
		[387300] = {
			["npcID"] = 192739,
		},
		[366823] = {
			["npcID"] = 185275,
		},
		[323821] = {
			["encounterName"] = "General Kaal",
			["npcID"] = 162099,
			["encounterID"] = 2363,
		},
		[424161] = {
			["source"] = "The Apostle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209911,
		},
		[225407] = {
			["npcID"] = 113128,
		},
		[201858] = {
			["npcID"] = 100539,
		},
		[221312] = {
			["npcID"] = 111184,
		},
		[338157] = {
			["npcID"] = 165047,
		},
		[364778] = {
			["encounterName"] = "Skolex, the Insatiable Ravener",
			["npcID"] = 181395,
			["encounterID"] = 2542,
		},
		[193668] = {
			["encounterName"] = "God-King Skovald",
			["encounterID"] = 1808,
			["npcID"] = 95675,
		},
		[372971] = {
			["npcID"] = 189471,
		},
		[209027] = {
			["npcID"] = 111563,
		},
		[340208] = {
			["npcID"] = 173655,
		},
		[342256] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168112,
			["encounterID"] = 2417,
		},
		[225410] = {
			["npcID"] = 113128,
		},
		[428263] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40586,
		},
		[325876] = {
			["npcID"] = 165414,
		},
		[319733] = {
			["encounterName"] = "Echelon",
			["encounterID"] = 2380,
			["npcID"] = 164185,
		},
		[224387] = {
			["npcID"] = 112718,
		},
		[393453] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Defender",
			["npcID"] = 199941,
		},
		[395501] = {
			["encounterName"] = "Dathea, Ascended",
			["npcID"] = 192934,
			["encounterID"] = 2635,
		},
		[393454] = {
			["npcID"] = 190986,
		},
		[329975] = {
			["npcID"] = 168004,
		},
		[389360] = {
			["npcID"] = 192516,
		},
		[350453] = {
			["npcID"] = 179894,
		},
		[227461] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114324,
		},
		[393458] = {
			["npcID"] = 190278,
		},
		[329978] = {
			["npcID"] = 156142,
		},
		[393459] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[389364] = {
			["npcID"] = 187528,
		},
		[44843] = {
			["encounterName"] = "Brutallus",
			["encounterID"] = 725,
			["npcID"] = 24895,
		},
		[387317] = {
			["npcID"] = 190093,
		},
		[334076] = {
			["npcID"] = 168942,
		},
		[209033] = {
			["npcID"] = 104246,
		},
		[356602] = {
			["npcID"] = 180164,
		},
		[391414] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Borzgas",
			["npcID"] = 193896,
		},
		[368890] = {
			["npcID"] = 181408,
		},
		[234631] = {
			["npcID"] = 118065,
		},
		[411894] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Shadowflame Remnant",
			["encounterID"] = 2687,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205378,
		},
		[299268] = {
			["npcID"] = 150740,
		},
		[241799] = {
			["encounterName"] = "Maiden of Virtue",
			["encounterID"] = 1954,
			["npcID"] = 183423,
		},
		[340224] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nemaeus",
			["npcID"] = 161529,
		},
		[366847] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 182144,
		},
		[385277] = {
			["npcID"] = 192626,
		},
		[379134] = {
			["npcID"] = 191092,
		},
		[168082] = {
			["encounterName"] = "Ancient Protectors",
			["npcID"] = 83892,
			["encounterID"] = 1757,
		},
		[329989] = {
			["npcID"] = 158978,
		},
		[350467] = {
			["encounterName"] = "The Nine",
			["npcID"] = 175726,
			["encounterID"] = 2429,
		},
		[329990] = {
			["npcID"] = 157482,
		},
		[150677] = {
			["encounterName"] = "Gug'rokk",
			["npcID"] = 74790,
			["encounterID"] = 1654,
		},
		[389376] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grizzlerock",
			["npcID"] = 193652,
		},
		[350469] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["npcID"] = 175729,
			["encounterID"] = 2432,
		},
		[391425] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Frostwrought Dominator",
			["npcID"] = 198308,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[418046] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Grommash Hellscream",
			["encounterID"] = 2672,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203678,
		},
		[411903] = {
			["source"] = "Sundered Chemist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205656,
		},
		[342280] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["npcID"] = 165521,
			["encounterID"] = 2406,
		},
		[418047] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Anduin Lothar",
			["npcID"] = 203679,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2672,
		},
		[256138] = {
			["source"] = "Dazar'ai Honor Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 127799,
		},
		[342281] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["npcID"] = 165521,
			["encounterID"] = 2406,
		},
		[352520] = {
			["npcID"] = 178601,
		},
		[193682] = {
			["encounterName"] = "Lady Hatecoil",
			["npcID"] = 91789,
			["encounterID"] = 1811,
		},
		[383237] = {
			["npcID"] = 187321,
		},
		[45101] = {
			["npcID"] = 24979,
		},
		[411906] = {
			["source"] = "Sundered Chemist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205656,
		},
		[364808] = {
			["npcID"] = 181145,
		},
		[350475] = {
			["encounterName"] = "The Nine",
			["npcID"] = 175726,
			["encounterID"] = 2429,
		},
		[393478] = {
			["npcID"] = 189289,
		},
		[321807] = {
			["npcID"] = 163619,
		},
		[348428] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 176605,
		},
		[95826] = {
			["npcID"] = 51346,
		},
		[354572] = {
			["npcID"] = 176561,
		},
		[364811] = {
			["npcID"] = 181145,
		},
		[387337] = {
			["npcID"] = 191093,
		},
		[360717] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 181398,
		},
		[428293] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Naz'jar Honor Guard",
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40633,
		},
		[368909] = {
			["npcID"] = 185861,
		},
		[411912] = {
			["source"] = "Sundered Devourer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205673,
		},
		[241808] = {
			["npcID"] = 114792,
		},
		[313621] = {
			["npcID"] = 177637,
		},
		[350482] = {
			["encounterName"] = "The Nine",
			["npcID"] = 175726,
			["encounterID"] = 2429,
		},
		[241809] = {
			["npcID"] = 114792,
		},
		[375056] = {
			["encounterName"] = "Chargath, Bane of Scales",
			["npcID"] = 189340,
			["encounterID"] = 2613,
		},
		[418059] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Anduin Lothar",
			["npcID"] = 203679,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2672,
		},
		[387343] = {
			["npcID"] = 190213,
		},
		[366866] = {
			["npcID"] = 184651,
		},
		[377105] = {
			["npcID"] = 190510,
		},
		[362771] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 183463,
		},
		[375058] = {
			["npcID"] = 196897,
		},
		[156829] = {
			["npcID"] = 78437,
		},
		[168092] = {
			["encounterName"] = "Ancient Protectors",
			["npcID"] = 83892,
			["encounterID"] = 1757,
		},
		[227477] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114284,
		},
		[366869] = {
			["npcID"] = 184651,
		},
		[352538] = {
			["encounterName"] = "Guardian of the First Ones",
			["npcID"] = 175731,
			["encounterID"] = 2436,
		},
		[354586] = {
			["npcID"] = 179526,
		},
		[236694] = {
			["encounterName"] = "Sisters of the Moon",
			["npcID"] = 118374,
			["encounterID"] = 2050,
		},
		[360730] = {
			["npcID"] = 181113,
		},
		[373017] = {
			["encounterName"] = "Kokia Blazehoof",
			["npcID"] = 189886,
			["encounterID"] = 2606,
		},
		[240790] = {
			["npcID"] = 118044,
		},
		[336158] = {
			["npcID"] = 172217,
		},
		[389401] = {
			["npcID"] = 195960,
		},
		[146595] = {
			["encounterName"] = "Sha of Pride",
			["encounterID"] = 1604,
			["npcID"] = 71965,
		},
		[297254] = {
			["encounterName"] = "King Gobbamak",
			["npcID"] = 150159,
			["encounterID"] = 2290,
		},
		[35377] = {
			["npcID"] = 46838,
		},
		[284968] = {
			["npcID"] = 144572,
		},
		[321828] = {
			["encounterName"] = "Mistcaller",
			["encounterID"] = 2392,
			["npcID"] = 164501,
		},
		[301351] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["npcID"] = 150190,
			["encounterID"] = 2291,
		},
		[172193] = {
			["npcID"] = 172589,
		},
		[424217] = {
			["source"] = "Sparring Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 216676,
		},
		[360737] = {
			["npcID"] = 181116,
		},
		[403740] = {
			["encounterName"] = "Magmorax",
			["source"] = "Magmorax",
			["encounterID"] = 2683,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201579,
		},
		[364833] = {
			["npcID"] = 181111,
		},
		[403741] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[368930] = {
			["npcID"] = 185838,
		},
		[422172] = {
			["encounterName"] = "Smolderon",
			["source"] = "Smolderon",
			["npcID"] = 200927,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2824,
		},
		[342310] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[385313] = {
			["npcID"] = 195119,
		},
		[373027] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["encounterID"] = 2592,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187967,
		},
		[321834] = {
			["encounterName"] = "Mistcaller",
			["encounterID"] = 2392,
			["npcID"] = 164501,
		},
		[358695] = {
			["npcID"] = 180426,
		},
		[202913] = {
			["encounterName"] = "Tirathon Saltheril",
			["npcID"] = 95885,
			["encounterID"] = 1815,
		},
		[418081] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felhound",
			["npcID"] = 206090,
		},
		[375079] = {
			["npcID"] = 190370,
		},
		[418082] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felhound",
			["npcID"] = 206090,
		},
		[395558] = {
			["npcID"] = 193650,
		},
		[358699] = {
			["npcID"] = 180417,
		},
		[393511] = {
			["npcID"] = 186783,
		},
		[373034] = {
			["npcID"] = 186690,
		},
		[358700] = {
			["npcID"] = 180417,
		},
		[198820] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["npcID"] = 98970,
			["encounterID"] = 1835,
		},
		[399656] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Igneous Darkness",
			["npcID"] = 202866,
		},
		[342320] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["npcID"] = 165521,
			["encounterID"] = 2406,
		},
		[197797] = {
			["encounterName"] = "Ilysanna Ravencrest",
			["source"] = "Risen Arcanist",
			["encounterID"] = 1833,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 100486,
		},
		[169129] = {
			["encounterName"] = "Skulloc, Son of Gruul",
			["npcID"] = 84464,
			["encounterID"] = 1754,
		},
		[197798] = {
			["npcID"] = 95881,
		},
		[332084] = {
			["npcID"] = 167965,
		},
		[362801] = {
			["encounterName"] = "Artificer Xy'mox",
			["encounterID"] = 2553,
			["npcID"] = 183501,
		},
		[391470] = {
			["npcID"] = 194459,
		},
		[214181] = {
			["npcID"] = 112251,
		},
		[389423] = {
			["npcID"] = 196388,
		},
		[183465] = {
			["npcID"] = 91001,
		},
		[350517] = {
			["encounterName"] = "Timecap'n Hooktail",
			["npcID"] = 175546,
			["encounterID"] = 2419,
		},
		[393520] = {
			["npcID"] = 188708,
		},
		[340279] = {
			["npcID"] = 173714,
		},
		[399664] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Igneous Darkness",
			["npcID"] = 202866,
		},
		[33844] = {
			["npcID"] = 82025,
		},
		[227493] = {
			["encounterName"] = "Attumen the Huntsman",
			["encounterID"] = 1960,
			["npcID"] = 114262,
		},
		[385331] = {
			["encounterName"] = "Umbrelskul",
			["npcID"] = 195138,
			["encounterID"] = 2584,
		},
		[362806] = {
			["encounterName"] = "Rygelon",
			["npcID"] = 182777,
			["encounterID"] = 2549,
		},
		[416048] = {
			["encounterName"] = "Igira the Cruel",
			["source"] = "Igira the Cruel",
			["npcID"] = 200926,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2709,
		},
		[327995] = {
			["npcID"] = 168574,
		},
		[373046] = {
			["encounterName"] = "Melidrussa Chillworn",
			["npcID"] = 188252,
			["encounterID"] = 2609,
		},
		[375094] = {
			["npcID"] = 190029,
		},
		[368951] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["encounterID"] = 2529,
			["npcID"] = 180906,
		},
		[411954] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Infinite Chronoweaver",
			["npcID"] = 205384,
		},
		[393525] = {
			["source"] = "Ceeqa the Peacetaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188708,
		},
		[160943] = {
			["encounterName"] = "Nitrogg Thundertower",
			["encounterID"] = 1732,
			["npcID"] = 77483,
		},
		[356666] = {
			["npcID"] = 179892,
		},
		[393527] = {
			["npcID"] = 187528,
		},
		[229544] = {
			["npcID"] = 115401,
		},
		[411958] = {
			["source"] = "Iridikron's Creation",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205691,
		},
		[373051] = {
			["npcID"] = 186669,
		},
		[211115] = {
			["npcID"] = 106059,
		},
		[385339] = {
			["encounterName"] = "Teera and Maruuk",
			["encounterID"] = 2581,
			["npcID"] = 186338,
		},
		[371005] = {
			["npcID"] = 187139,
		},
		[340289] = {
			["npcID"] = 173714,
		},
		[360767] = {
			["npcID"] = 181879,
		},
		[387388] = {
			["npcID"] = 185595,
		},
		[403771] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[217260] = {
			["npcID"] = 186679,
		},
		[201902] = {
			["npcID"] = 100539,
		},
		[221356] = {
			["npcID"] = 111164,
		},
		[405821] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["encounterID"] = 2680,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201320,
		},
		[399678] = {
			["source"] = "Flamebringer Elementalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203705,
		},
		[193712] = {
			["encounterName"] = "Lady Hatecoil",
			["npcID"] = 91789,
			["encounterID"] = 1811,
		},
		[340294] = {
			["npcID"] = 157294,
		},
		[377154] = {
			["npcID"] = 197665,
		},
		[297292] = {
			["npcID"] = 153165,
		},
		[373059] = {
			["encounterName"] = "The Primal Council",
			["npcID"] = 187771,
			["encounterID"] = 2590,
		},
		[167092] = {
			["npcID"] = 79510,
		},
		[395586] = {
			["npcID"] = 194402,
		},
		[198833] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["npcID"] = 98970,
			["encounterID"] = 1835,
		},
		[391491] = {
			["npcID"] = 190307,
		},
		[360775] = {
			["npcID"] = 185511,
		},
		[356680] = {
			["npcID"] = 177133,
		},
		[228526] = {
			["encounterName"] = "Maiden of Virtue",
			["encounterID"] = 1954,
			["npcID"] = 183423,
		},
		[393540] = {
			["npcID"] = 188687,
		},
		[176309] = {
			["source"] = "Twisted Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 88279,
		},
		[387398] = {
			["npcID"] = 185589,
		},
		[340300] = {
			["npcID"] = 173720,
		},
		[360778] = {
			["npcID"] = 181111,
		},
		[167095] = {
			["npcID"] = 83390,
		},
		[350541] = {
			["encounterName"] = "The Nine",
			["npcID"] = 175726,
			["encounterID"] = 2429,
		},
		[352589] = {
			["encounterName"] = "Guardian of the First Ones",
			["npcID"] = 176583,
			["encounterID"] = 2436,
		},
		[33335] = {
			["npcID"] = 18634,
		},
		[193717] = {
			["encounterName"] = "Lady Hatecoil",
			["npcID"] = 91789,
			["encounterID"] = 1811,
		},
		[340304] = {
			["npcID"] = 173720,
		},
		[203956] = {
			["npcID"] = 127090,
		},
		[34871] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Umbrafen Witchdoctor",
			["npcID"] = 20115,
		},
		[395594] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zurgaz Corebreaker",
			["npcID"] = 193680,
		},
		[340305] = {
			["npcID"] = 173720,
		},
		[334162] = {
			["npcID"] = 166908,
		},
		[393547] = {
			["npcID"] = 186401,
		},
		[377166] = {
			["encounterName"] = "Terros",
			["npcID"] = 190496,
			["encounterID"] = 2639,
		},
		[428360] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Firelands Destroyer",
			["npcID"] = 210293,
		},
		[15503] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Ellrys Duskhallow",
			["npcID"] = 24558,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1895,
		},
		[344403] = {
			["npcID"] = 175012,
		},
		[356690] = {
			["npcID"] = 177135,
		},
		[344404] = {
			["npcID"] = 175012,
		},
		[3396] = {
			["source"] = "Battle Creeper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 48268,
		},
		[262308] = {
			["encounterName"] = "The Crown Chemical Co.",
			["source"] = "Whispering Lurker",
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 207175,
		},
		[285020] = {
			["encounterName"] = "Tussle Tonks",
			["encounterID"] = 2257,
			["npcID"] = 144244,
		},
		[419624] = {
			["encounterName"] = "The Crown Chemical Co.",
			["source"] = "Whispering Behemoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207171,
		},
		[345553] = {
			["npcID"] = 174843,
		},
		[227508] = {
			["encounterName"] = "Maiden of Virtue",
			["encounterID"] = 1954,
			["npcID"] = 113971,
		},
		[278463] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Maddened Survivalist",
			["npcID"] = 131850,
		},
		[147646] = {
			["npcID"] = 72807,
		},
		[193376] = {
			["encounterName"] = "Ularogg Cragshaper",
			["npcID"] = 91004,
			["encounterID"] = 1791,
		},
		[407504] = {
			["encounterName"] = "Morchie",
			["source"] = "Morchie",
			["encounterID"] = 2671,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198999,
		},
		[345552] = {
			["npcID"] = 177168,
		},
		[287070] = {
			["encounterName"] = "Opulence",
			["source"] = "Opulence",
			["encounterID"] = 2271,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 145261,
		},
		[234676] = {
			["npcID"] = 117198,
		},
		[426273] = {
			["source"] = "Strange Winged Goblin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 213778,
		},
		[194545] = {
			["source"] = "Scarlet Technician",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211884,
		},
		[385363] = {
			["npcID"] = 188704,
		},
		[387411] = {
			["npcID"] = 195930,
		},
		[253721] = {
			["isChanneled"] = true,
			["source"] = "Shieldbearer of Zul",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 127879,
		},
		[419441] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Magma Soldier",
			["npcID"] = 209191,
		},
		[418128] = {
			["source"] = "Lord Thassarian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207822,
		},
		[36152] = {
			["npcID"] = 18835,
		},
		[427567] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Raszageth's Last Breath",
			["npcID"] = 209912,
		},
		[364426] = {
			["npcID"] = 180088,
		},
		[368983] = {
			["npcID"] = 191378,
		},
		[123490] = {
			["npcID"] = 63030,
		},
		[315742] = {
			["npcID"] = 166012,
		},
		[350554] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["npcID"] = 175730,
			["encounterID"] = 2431,
		},
		[368984] = {
			["npcID"] = 191136,
		},
		[346459] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[278444] = {
			["source"] = "Devouring Maggot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134024,
		},
		[317791] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 163366,
		},
		[147649] = {
			["npcID"] = 72807,
		},
		[329168] = {
			["encounterName"] = "Lord Chamberlain",
			["encounterID"] = 2381,
			["npcID"] = 165737,
		},
		[413804] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cenrrrn Cirrgl Mender",
			["npcID"] = 205852,
		},
		[358747] = {
			["npcID"] = 178824,
		},
		[393559] = {
			["npcID"] = 197409,
		},
		[136387] = {
			["npcID"] = 23682,
		},
		[364891] = {
			["npcID"] = 183737,
		},
		[358748] = {
			["npcID"] = 178824,
		},
		[196796] = {
			["npcID"] = 99956,
		},
		[354653] = {
			["npcID"] = 179560,
		},
		[332128] = {
			["npcID"] = 170419,
		},
		[358749] = {
			["npcID"] = 178824,
		},
		[418134] = {
			["encounterName"] = "The Crown Chemical Co.",
			["source"] = "Zal'kir the Chosen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205865,
		},
		[270334] = {
			["source"] = "Portal Breacher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209821,
		},
		[373084] = {
			["npcID"] = 189466,
		},
		[114062] = {
			["encounterName"] = "Jandice Barov",
			["npcID"] = 59184,
			["encounterID"] = 1427,
		},
		[319843] = {
			["npcID"] = 161376,
		},
		[321891] = {
			["encounterName"] = "Mistcaller",
			["encounterID"] = 2392,
			["npcID"] = 165251,
		},
		[176301] = {
			["source"] = "Everbloom Waterspeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 88261,
		},
		[191678] = {
			["npcID"] = 96480,
		},
		[368990] = {
			["encounterName"] = "Emberon",
			["npcID"] = 184422,
			["encounterID"] = 2558,
		},
		[421703] = {
			["encounterName"] = "Volcoross",
			["source"] = "Volcoross",
			["encounterID"] = 2737,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208478,
		},
		[348513] = {
			["encounterName"] = "Painsmith Raznal",
			["npcID"] = 176523,
			["encounterID"] = 2430,
		},
		[413813] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Clockwork Sapper",
			["npcID"] = 206058,
		},
		[229562] = {
			["npcID"] = 115406,
		},
		[411994] = {
			["isChanneled"] = true,
			["source"] = "Infinite Chronoweaver",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 205384,
		},
		[373087] = {
			["encounterName"] = "Kokia Blazehoof",
			["npcID"] = 189886,
			["encounterID"] = 2606,
		},
		[355787] = {
			["encounterName"] = "Painsmith Raznal",
			["npcID"] = 176523,
			["encounterID"] = 2430,
		},
		[336228] = {
			["npcID"] = 170694,
		},
		[362849] = {
			["encounterName"] = "Artificer Xy'mox",
			["encounterID"] = 2553,
			["npcID"] = 183501,
		},
		[392854] = {
			["npcID"] = 184853,
		},
		[427518] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Raszageth's Last Breath",
			["npcID"] = 209912,
		},
		[196799] = {
			["npcID"] = 99956,
		},
		[421473] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Nymue",
			["encounterID"] = 2708,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 206172,
		},
		[323943] = {
			["encounterName"] = "Devos, Paragon of Loyalty",
			["npcID"] = 162061,
			["encounterID"] = 2359,
		},
		[376865] = {
			["encounterName"] = "Balakar Khan",
			["npcID"] = 186151,
			["encounterID"] = 2580,
		},
		[403699] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Essence of Shadow",
			["encounterID"] = 2687,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201774,
		},
		[430051] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Screaming Soul",
			["npcID"] = 214608,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[424140] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["npcID"] = 209090,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2786,
		},
		[407902] = {
			["source"] = "Horde Farseer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204206,
		},
		[303467] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rowdy Grunt",
			["npcID"] = 199250,
		},
		[66514] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "North Sea Kraken",
			["npcID"] = 34925,
		},
		[364900] = {
			["npcID"] = 183737,
		},
		[425889] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["npcID"] = 208445,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2731,
		},
		[428004] = {
			["isChanneled"] = true,
			["source"] = "Keeper of the Dream",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 210423,
		},
		[423734] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Doomfiend",
			["encounterID"] = 2820,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210910,
		},
		[389474] = {
			["npcID"] = 190904,
		},
		[421398] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["npcID"] = 209090,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2786,
		},
		[429615] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Nymue",
			["encounterID"] = 2708,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206172,
		},
		[387427] = {
			["npcID"] = 181775,
		},
		[425492] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[421672] = {
			["encounterName"] = "Volcoross",
			["source"] = "Volcoross",
			["npcID"] = 208478,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2737,
		},
		[192706] = {
			["encounterName"] = "Wrath of Azshara",
			["npcID"] = 96028,
			["encounterID"] = 1814,
		},
		[264525] = {
			["source"] = "Maddened Survivalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131850,
		},
		[44538] = {
			["source"] = "Ethereum Smuggler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24698,
		},
		[358760] = {
			["encounterName"] = "The Eye of the Jailer",
			["encounterID"] = 2433,
			["npcID"] = 176521,
		},
		[418145] = {
			["source"] = "Lord Thassarian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207822,
		},
		[417215] = {
			["source"] = "Blood Horde Reaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207585,
		},
		[389477] = {
			["npcID"] = 190719,
		},
		[427579] = {
			["source"] = "Stalwart Bristlebruin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210507,
		},
		[200898] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["encounterID"] = 1850,
			["npcID"] = 96015,
		},
		[354666] = {
			["npcID"] = 179580,
		},
		[264520] = {
			["source"] = "Maddened Survivalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131850,
		},
		[358762] = {
			["npcID"] = 180389,
		},
		[295282] = {
			["npcID"] = 154033,
		},
		[354667] = {
			["npcID"] = 179580,
		},
		[323951] = {
			["npcID"] = 177380,
		},
		[382593] = {
			["npcID"] = 186206,
		},
		[295283] = {
			["npcID"] = 154033,
		},
		[429973] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["encounterID"] = 2731,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208445,
		},
		[425995] = {
			["source"] = "Keeper of the Dream",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210423,
		},
		[425819] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Tainted Treant",
			["encounterID"] = 2820,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211904,
		},
		[423610] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["encounterID"] = 2731,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 208445,
		},
		[387433] = {
			["npcID"] = 192224,
		},
		[411747] = {
			["source"] = "Twisted Elementium",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205628,
		},
		[242668] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Banshee",
			["npcID"] = 119058,
		},
		[385386] = {
			["npcID"] = 192700,
		},
		[314825] = {
			["npcID"] = 161436,
		},
		[428345] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Molten Scorpid",
			["npcID"] = 213696,
		},
		[264038] = {
			["source"] = "Coven Thornshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131666,
		},
		[372235] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rebel Mender",
			["npcID"] = 195064,
		},
		[220024] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Emmarel Shadewarden",
			["npcID"] = 110473,
		},
		[264153] = {
			["source"] = "Devouring Maggot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134024,
		},
		[417634] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["encounterID"] = 2731,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208445,
		},
		[200901] = {
			["encounterName"] = "Hyrja",
			["encounterID"] = 1806,
			["npcID"] = 97219,
		},
		[154356] = {
			["npcID"] = 76595,
		},
		[169714] = {
			["npcID"] = 81984,
		},
		[264510] = {
			["source"] = "Crazed Marksman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131849,
		},
		[418153] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cinderclaw Stalker",
			["npcID"] = 207084,
		},
		[268202] = {
			["encounterName"] = "Gorak Tul",
			["source"] = "Deathtouched Slaver",
			["encounterID"] = 2117,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135552,
		},
		[398780] = {
			["source"] = "Farscale Myrmidon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200485,
		},
		[358769] = {
			["npcID"] = 180782,
		},
		[385390] = {
			["npcID"] = 192699,
		},
		[346483] = {
			["npcID"] = 173580,
		},
		[405868] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Invoq",
			["npcID"] = 203627,
		},
		[358770] = {
			["npcID"] = 176880,
		},
		[393582] = {
			["npcID"] = 198382,
		},
		[346484] = {
			["npcID"] = 179380,
		},
		[389487] = {
			["npcID"] = 193668,
		},
		[407917] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["encounterID"] = 2684,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201668,
		},
		[336246] = {
			["npcID"] = 166292,
		},
		[387440] = {
			["npcID"] = 195878,
		},
		[389488] = {
			["npcID"] = 191378,
		},
		[421971] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Gnarlroot",
			["npcID"] = 209333,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2820,
		},
		[393584] = {
			["npcID"] = 190339,
		},
		[256864] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dinomancer Kish'o",
			["npcID"] = 129553,
		},
		[266036] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thistle Acolyte",
			["npcID"] = 135474,
		},
		[358773] = {
			["npcID"] = 179891,
		},
		[159949] = {
			["npcID"] = 76651,
		},
		[390940] = {
			["npcID"] = 197354,
		},
		[422078] = {
			["source"] = "Emerald Wingguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210278,
		},
		[265876] = {
			["source"] = "Matron Alma",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135365,
		},
		[377204] = {
			["encounterName"] = "Warlord Sargha",
			["npcID"] = 189901,
			["encounterID"] = 2611,
		},
		[351680] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["npcID"] = 175730,
			["encounterID"] = 2431,
		},
		[111723] = {
			["encounterName"] = "Raigonn",
			["npcID"] = 56877,
			["encounterID"] = 1419,
		},
		[195378] = {
			["npcID"] = 95869,
		},
		[228528] = {
			["npcID"] = 114783,
		},
		[176127] = {
			["npcID"] = 80935,
		},
		[263961] = {
			["source"] = "Heartsbane Soulcharmer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131812,
		},
		[423820] = {
			["source"] = "Overseer Chardryn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210912,
		},
		[418161] = {
			["source"] = "Kirkessen the Zealous",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207821,
		},
		[428400] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Dark Colossus",
			["encounterID"] = 2677,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 214012,
		},
		[332156] = {
			["npcID"] = 167963,
		},
		[191691] = {
			["npcID"] = 96480,
		},
		[336252] = {
			["npcID"] = 166292,
		},
		[38204] = {
			["source"] = "Unbound Corrupter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 30868,
		},
		[256922] = {
			["encounterName"] = "Raal the Gluttonous",
			["source"] = "Faceless Maiden",
			["npcID"] = 131821,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2115,
		},
		[423523] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Anguished Dream Spirit",
			["npcID"] = 210304,
		},
		[425397] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Fiery Treant",
			["encounterID"] = 2731,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 208459,
		},
		[427510] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Dulhu",
			["encounterID"] = 1757,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 83894,
		},
		[215241] = {
			["npcID"] = 111621,
		},
		[167119] = {
			["npcID"] = 173114,
		},
		[417953] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Galok Wingslicer",
			["npcID"] = 206460,
		},
		[395639] = {
			["npcID"] = 194401,
		},
		[137427] = {
			["npcID"] = 170031,
		},
		[394680] = {
			["npcID"] = 191536,
		},
		[393592] = {
			["source"] = "Gethrel the South Wind",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193848,
		},
		[123499] = {
			["npcID"] = 63031,
		},
		[389497] = {
			["npcID"] = 187475,
		},
		[167120] = {
			["npcID"] = 81279,
		},
		[278919] = {
			["npcID"] = 170873,
		},
		[330113] = {
			["npcID"] = 169600,
		},
		[227529] = {
			["npcID"] = 114334,
		},
		[401421] = {
			["encounterName"] = "Chronikar",
			["source"] = "Chronikar",
			["encounterID"] = 2666,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198995,
		},
		[336257] = {
			["npcID"] = 164351,
		},
		[331634] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 166970,
			["encounterID"] = 2412,
		},
		[411433] = {
			["isChanneled"] = true,
			["source"] = "Grazing Cliffhorn",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 205384,
		},
		[428374] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40586,
		},
		[428103] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Naz'jar Frost Witch",
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 44404,
		},
		[427668] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["encounterID"] = 1044,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40765,
		},
		[388535] = {
			["npcID"] = 196521,
		},
		[358784] = {
			["npcID"] = 179891,
		},
		[295304] = {
			["npcID"] = 154033,
		},
		[387453] = {
			["npcID"] = 189668,
		},
		[418009] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Alliance Archer",
			["npcID"] = 206352,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2672,
		},
		[326021] = {
			["npcID"] = 172312,
		},
		[328069] = {
			["npcID"] = 172072,
		},
		[412027] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Infinite Keeper",
			["encounterID"] = 2673,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205212,
		},
		[332165] = {
			["npcID"] = 170414,
		},
		[228555] = {
			["encounterName"] = "Maiden of Virtue",
			["encounterID"] = 1954,
			["npcID"] = 183424,
		},
		[266181] = {
			["encounterName"] = "Gorak Tul",
			["source"] = "Gorak Tul",
			["encounterID"] = 2117,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131864,
		},
		[330118] = {
			["npcID"] = 170414,
		},
		[375068] = {
			["encounterName"] = "Magmatusk",
			["npcID"] = 190023,
			["encounterID"] = 2610,
		},
		[175314] = {
			["npcID"] = 81994,
		},
		[360835] = {
			["npcID"] = 179006,
		},
		[223100] = {
			["source"] = "Dreadheart Ruiner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 112021,
		},
		[405886] = {
			["encounterName"] = "The Vigilant Steward, Zskarn",
			["source"] = "Dragonfire Golem",
			["npcID"] = 203230,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2689,
		},
		[370104] = {
			["npcID"] = 190767,
		},
		[427498] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Life Warden Gola",
			["encounterID"] = 1757,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83892,
		},
		[395648] = {
			["npcID"] = 188859,
		},
		[389505] = {
			["npcID"] = 193171,
		},
		[391553] = {
			["npcID"] = 199609,
		},
		[369028] = {
			["npcID"] = 185823,
		},
		[423531] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Anguished Dream Spirit",
			["npcID"] = 210304,
		},
		[332169] = {
			["npcID"] = 170400,
		},
		[407936] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["encounterID"] = 2684,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201668,
		},
		[372151] = {
			["npcID"] = 186284,
		},
		[395650] = {
			["npcID"] = 199014,
		},
		[353721] = {
			["npcID"] = 179135,
		},
		[423626] = {
			["encounterName"] = "The Headless Horseman",
			["source"] = "Headless Horseman",
			["npcID"] = 207438,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2725,
		},
		[295311] = {
			["npcID"] = 154033,
		},
		[330123] = {
			["npcID"] = 169600,
		},
		[407775] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Thadrion",
			["npcID"] = 200913,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[413105] = {
			["encounterName"] = "Chronikar",
			["source"] = "Chronikar",
			["encounterID"] = 2666,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198995,
		},
		[428139] = {
			["encounterName"] = "Archmage Sol",
			["source"] = "Archmage Sol",
			["encounterID"] = 1751,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82682,
		},
		[346506] = {
			["npcID"] = 178193,
		},
		[366187] = {
			["npcID"] = 183499,
		},
		[264390] = {
			["source"] = "Runic Disciple",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131685,
		},
		[407039] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Sundered Flame Banner",
			["npcID"] = 203812,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2684,
		},
		[152792] = {
			["encounterName"] = "Nhallish",
			["npcID"] = 75829,
			["encounterID"] = 1688,
		},
		[409359] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Warlord Kagni",
			["npcID"] = 199659,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2682,
		},
		[228559] = {
			["npcID"] = 114792,
		},
		[76813] = {
			["source"] = "Naz'jar Oracle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 41096,
		},
		[321935] = {
			["npcID"] = 164707,
		},
		[111728] = {
			["encounterName"] = "Raigonn",
			["npcID"] = 56877,
			["encounterID"] = 1419,
		},
		[316859] = {
			["npcID"] = 170042,
		},
		[393607] = {
			["npcID"] = 187553,
		},
		[29582] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Phantom Guest",
			["npcID"] = 16409,
		},
		[415419] = {
			["source"] = "Larodar, Keeper of the Flame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205136,
		},
		[374364] = {
			["encounterName"] = "Leymor",
			["npcID"] = 186644,
			["encounterID"] = 2582,
		},
		[319889] = {
			["npcID"] = 157037,
		},
		[421340] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Anvil",
			["npcID"] = 206478,
		},
		[388529] = {
			["npcID"] = 192931,
		},
		[419790] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Druid of the Moon",
			["npcID"] = 210686,
		},
		[393609] = {
			["npcID"] = 187645,
		},
		[204852] = {
			["isChanneled"] = true,
			["source"] = "Nightmare Dweller",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 101991,
		},
		[389514] = {
			["source"] = "Bazual",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193532,
		},
		[288927] = {
			["source"] = "Unliving Augur",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 148488,
		},
		[344464] = {
			["npcID"] = 166398,
		},
		[421292] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Aerwynn",
			["encounterID"] = 2728,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208365,
		},
		[364942] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[427964] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blazing Incarnation",
			["npcID"] = 213559,
		},
		[372863] = {
			["encounterName"] = "Kokia Blazehoof",
			["npcID"] = 189232,
			["encounterID"] = 2606,
		},
		[346513] = {
			["npcID"] = 171581,
		},
		[44606] = {
			["source"] = "Sunblade Magister",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24685,
		},
		[364495] = {
			["npcID"] = 181625,
		},
		[328084] = {
			["npcID"] = 172072,
		},
		[255824] = {
			["source"] = "Dazar'ai Juggernaut",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122971,
		},
		[419975] = {
			["source"] = "Splinterlimb",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209365,
		},
		[257231] = {
			["npcID"] = 166057,
		},
		[54333] = {
			["source"] = "Lightning Totem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16385,
		},
		[360850] = {
			["npcID"] = 182149,
		},
		[389518] = {
			["npcID"] = 188180,
		},
		[416139] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2673,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199000,
		},
		[418187] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Aerwynn",
			["encounterID"] = 2728,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208365,
		},
		[366001] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["npcID"] = 182074,
			["encounterID"] = 2539,
		},
		[352660] = {
			["encounterName"] = "Guardian of the First Ones",
			["npcID"] = 175731,
			["encounterID"] = 2436,
		},
		[326039] = {
			["encounterName"] = "Grand Proctor Beryllia",
			["npcID"] = 162102,
			["encounterID"] = 2362,
		},
		[393615] = {
			["npcID"] = 188715,
		},
		[420236] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["npcID"] = 209090,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2786,
		},
		[169179] = {
			["encounterName"] = "Yalnu",
			["npcID"] = 83846,
			["encounterID"] = 1756,
		},
		[264608] = {
			["encounterName"] = "Council o' Captains",
			["event"] = "SPELL_CAST_START",
			["source"] = "Rummy Mancomb",
			["npcID"] = 133219,
		},
		[295324] = {
			["npcID"] = 154033,
		},
		[387473] = {
			["npcID"] = 187285,
		},
		[315802] = {
			["npcID"] = 150959,
		},
		[284941] = {
			["encounterName"] = "Opulence",
			["source"] = "Opulence",
			["encounterID"] = 2271,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 145261,
		},
		[319898] = {
			["npcID"] = 168022,
		},
		[323057] = {
			["encounterName"] = "Ingra Maloch",
			["encounterID"] = 2397,
			["npcID"] = 164567,
		},
		[389522] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Azra's Prized Peony",
			["npcID"] = 193135,
		},
		[350615] = {
			["encounterName"] = "Soulrender Dormazain",
			["npcID"] = 175727,
			["encounterID"] = 2434,
		},
		[352663] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[260852] = {
			["encounterName"] = "Heartsbane Triad",
			["source"] = "Sister Solena",
			["encounterID"] = 2113,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131824,
		},
		[356759] = {
			["npcID"] = 177129,
		},
		[342425] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168113,
			["encounterID"] = 2417,
		},
		[159966] = {
			["npcID"] = 76651,
		},
		[368047] = {
			["npcID"] = 178508,
		},
		[227542] = {
			["encounterName"] = "Moroes",
			["encounterID"] = 1961,
			["npcID"] = 114317,
		},
		[114291] = {
			["npcID"] = 59464,
		},
		[360856] = {
			["npcID"] = 182392,
		},
		[413387] = {
			["source"] = "Executor of the Caliph",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45928,
		},
		[424087] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Devastator",
			["npcID"] = 207089,
		},
		[417928] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Invading Flameclaw",
			["npcID"] = 206805,
		},
		[360857] = {
			["npcID"] = 182149,
		},
		[326046] = {
			["npcID"] = 167111,
		},
		[227543] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114284,
		},
		[228567] = {
			["npcID"] = 114794,
		},
		[328094] = {
			["npcID"] = 168627,
		},
		[395670] = {
			["npcID"] = 194401,
		},
		[295332] = {
			["encounterName"] = "Abyssal Commander Sivara",
			["source"] = "Abyssal Commander Sivara",
			["encounterID"] = 2298,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151881,
		},
		[150753] = {
			["encounterName"] = "Slave Watcher Crushto",
			["npcID"] = 74787,
			["encounterID"] = 1653,
		},
		[369050] = {
			["npcID"] = 191224,
		},
		[152801] = {
			["encounterName"] = "Nhallish",
			["npcID"] = 75829,
			["encounterID"] = 1688,
		},
		[356764] = {
			["npcID"] = 177878,
		},
		[383385] = {
			["npcID"] = 185656,
		},
		[164064] = {
			["source"] = "Sparring Death Knight",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 216725,
		},
		[387481] = {
			["npcID"] = 187285,
		},
		[386559] = {
			["encounterName"] = "Khajin the Unyielding",
			["npcID"] = 189727,
			["encounterID"] = 2617,
		},
		[417573] = {
			["source"] = "Gill'dan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204808,
		},
		[385434] = {
			["encounterName"] = "Teera and Maruuk",
			["encounterID"] = 2581,
			["npcID"] = 186339,
		},
		[313763] = {
			["npcID"] = 156320,
		},
		[227545] = {
			["encounterName"] = "Moroes",
			["encounterID"] = 1961,
			["npcID"] = 114316,
		},
		[428130] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Verlann Timbercrush",
			["npcID"] = 207554,
		},
		[169075] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stalwart Warden",
			["npcID"] = 83988,
		},
		[297382] = {
			["encounterName"] = "King Gobbamak",
			["npcID"] = 153172,
			["encounterID"] = 2290,
		},
		[340385] = {
			["npcID"] = 168147,
		},
		[150755] = {
			["encounterName"] = "Gug'rokk",
			["npcID"] = 74790,
			["encounterID"] = 1654,
		},
		[360863] = {
			["npcID"] = 183249,
		},
		[395675] = {
			["npcID"] = 187767,
		},
		[389532] = {
			["npcID"] = 193541,
		},
		[228269] = {
			["encounterName"] = "Shade of Medivh",
			["npcID"] = 114350,
			["encounterID"] = 1965,
		},
		[369055] = {
			["npcID"] = 186638,
		},
		[403671] = {
			["encounterName"] = "Magmorax",
			["source"] = "Magmorax",
			["encounterID"] = 2683,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201579,
		},
		[332196] = {
			["npcID"] = 167963,
		},
		[405361] = {
			["source"] = "Lady Shaz'ra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200885,
		},
		[11538] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Marius Sunshard",
			["npcID"] = 113542,
		},
		[38209] = {
			["source"] = "Scarlet Purifier",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210969,
		},
		[389534] = {
			["npcID"] = 183422,
		},
		[228571] = {
			["npcID"] = 114794,
		},
		[418056] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Anduin Lothar",
			["npcID"] = 203679,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2672,
		},
		[395678] = {
			["npcID"] = 184456,
		},
		[397726] = {
			["npcID"] = 187159,
		},
		[375201] = {
			["npcID"] = 189087,
		},
		[197696] = {
			["encounterName"] = "Ilysanna Ravencrest",
			["source"] = "Illysanna Ravencrest",
			["encounterID"] = 1833,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 98696,
		},
		[296372] = {
			["npcID"] = 152612,
		},
		[359852] = {
			["npcID"] = 181981,
		},
		[341422] = {
			["npcID"] = 165472,
		},
		[370764] = {
			["npcID"] = 187160,
		},
		[235638] = {
			["source"] = "Roottender Treant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209245,
		},
		[368042] = {
			["npcID"] = 178508,
		},
		[411236] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[385442] = {
			["encounterName"] = "Gulping Goliath",
			["npcID"] = 189722,
			["encounterID"] = 2616,
		},
		[412063] = {
			["isChanneled"] = true,
			["source"] = "Epoch Ripper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 205435,
		},
		[397729] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Glakis, Winter's Wrath",
			["npcID"] = 199502,
		},
		[424227] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Priestess of the Moon",
			["npcID"] = 211076,
		},
		[393634] = {
			["npcID"] = 193849,
		},
		[425873] = {
			["source"] = "Lingering Torment",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209564,
		},
		[356775] = {
			["npcID"] = 177791,
		},
		[150759] = {
			["encounterName"] = "Slave Watcher Crushto",
			["npcID"] = 74787,
			["encounterID"] = 1653,
		},
		[319916] = {
			["npcID"] = 161410,
		},
		[418208] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Prophet",
			["npcID"] = 206474,
		},
		[423491] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Raelas Firewind",
			["npcID"] = 209152,
		},
		[424352] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Gnarlroot",
			["npcID"] = 209333,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2820,
		},
		[415373] = {
			["source"] = "Great Glorious Alliance Footman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207578,
		},
		[173265] = {
			["source"] = "Amorph Annihilator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86620,
		},
		[200418] = {
			["encounterName"] = "Dargrul the Underking",
			["source"] = "Dargrul",
			["encounterID"] = 1793,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91007,
		},
		[79971] = {
			["source"] = "Tarenar Sunstrike",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45794,
		},
		[410019] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Thadrion",
			["npcID"] = 200913,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2693,
		},
		[395685] = {
			["npcID"] = 184456,
		},
		[405924] = {
			["source"] = "Krono Sandtongue",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205622,
		},
		[423396] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lethka",
			["npcID"] = 208740,
		},
		[417751] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Klaxxi Blade Lord",
			["npcID"] = 207922,
		},
		[417937] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rotted Gladiator",
			["npcID"] = 207808,
		},
		[333227] = {
			["npcID"] = 169905,
		},
		[14034] = {
			["npcID"] = 17771,
		},
		[360875] = {
			["npcID"] = 179006,
		},
		[321968] = {
			["npcID"] = 164929,
		},
		[81020] = {
			["source"] = "Blackscale Raider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45984,
		},
		[288814] = {
			["source"] = "Rastari Flamespeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 147830,
		},
		[360876] = {
			["npcID"] = 182357,
		},
		[387497] = {
			["npcID"] = 187244,
		},
		[419411] = {
			["source"] = "Ursoc the Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206834,
		},
		[417184] = {
			["source"] = "Eviscerator Kintara",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207596,
		},
		[315082] = {
			["npcID"] = 158259,
		},
		[288828] = {
			["source"] = "Rastari Beastmaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 147829,
		},
		[200551] = {
			["encounterName"] = "Dargrul the Underking",
			["npcID"] = 91007,
			["encounterID"] = 1793,
		},
		[54334] = {
			["source"] = "Living Monstrosity",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16021,
		},
		[344496] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168113,
			["encounterID"] = 2417,
		},
		[338353] = {
			["npcID"] = 173016,
		},
		[381356] = {
			["npcID"] = 193292,
		},
		[232673] = {
			["npcID"] = 115244,
		},
		[292270] = {
			["encounterName"] = "Blackwater Behemoth",
			["source"] = "Blackwater Behemoth",
			["encounterID"] = 2289,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 150653,
		},
		[282031] = {
			["encounterName"] = "Jadefire Masters",
			["source"] = "Ma'ra Grimfang",
			["encounterID"] = 2285,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 144691,
		},
		[381357] = {
			["npcID"] = 190267,
		},
		[407978] = {
			["encounterName"] = "Blight of Galakrond",
			["source"] = "Ahnzon",
			["encounterID"] = 2668,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 201792,
		},
		[196838] = {
			["encounterName"] = "Fenryr",
			["encounterID"] = 1807,
			["npcID"] = 99868,
		},
		[395692] = {
			["npcID"] = 184456,
		},
		[157931] = {
			["npcID"] = 76263,
		},
		[296365] = {
			["npcID"] = 152612,
		},
		[369072] = {
			["npcID"] = 181875,
		},
		[418188] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shackled Flames of the Betrayer",
			["npcID"] = 207815,
		},
		[340404] = {
			["npcID"] = 168147,
		},
		[369073] = {
			["source"] = "Pureblooded Mammoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205681,
		},
		[118905] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 61245,
		},
		[395694] = {
			["npcID"] = 199037,
		},
		[364978] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["encounterID"] = 2529,
			["npcID"] = 181047,
		},
		[358835] = {
			["npcID"] = 177444,
		},
		[417499] = {
			["source"] = "Malfunctioning Robotic Cauldron",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207111,
		},
		[338358] = {
			["npcID"] = 165290,
		},
		[364979] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["encounterID"] = 2529,
			["npcID"] = 180906,
		},
		[358836] = {
			["npcID"] = 180664,
		},
		[172771] = {
			["npcID"] = 86809,
		},
		[405332] = {
			["source"] = "Gahz'raxes",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200537,
		},
		[198888] = {
			["npcID"] = 97068,
		},
		[417497] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rude Crude",
			["npcID"] = 206617,
		},
		[418222] = {
			["source"] = "Gillidan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205036,
		},
		[152814] = {
			["npcID"] = 75713,
		},
		[338357] = {
			["npcID"] = 172981,
		},
		[415556] = {
			["source"] = "Margosh the Smoker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207592,
		},
		[384416] = {
			["encounterName"] = "Gutshot",
			["encounterID"] = 2567,
			["npcID"] = 186116,
		},
		[362934] = {
			["npcID"] = 182326,
		},
		[260072] = {
			["source"] = "Pa'kura Priest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131834,
		},
		[334266] = {
			["encounterName"] = "Hungering Destroyer",
			["npcID"] = 164261,
			["encounterID"] = 2383,
		},
		[338362] = {
			["npcID"] = 165290,
		},
		[387508] = {
			["npcID"] = 187244,
		},
		[178412] = {
			["npcID"] = 83578,
		},
		[288836] = {
			["source"] = "Rastari Alpha",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 147835,
		},
		[377270] = {
			["npcID"] = 195961,
		},
		[403891] = {
			["encounterName"] = "Morchie",
			["source"] = "Morchie",
			["encounterID"] = 2671,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198999,
		},
		[122406] = {
			["encounterName"] = "Wind Lord Mel'jarak",
			["npcID"] = 62397,
			["encounterID"] = 1498,
		},
		[65033] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vanquished Constrictor Tentacle",
			["npcID"] = 34266,
		},
		[385462] = {
			["npcID"] = 190949,
		},
		[409261] = {
			["encounterName"] = "Iridikron",
			["source"] = "Iridikron",
			["encounterID"] = 2669,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198933,
		},
		[396861] = {
			["npcID"] = 190779,
		},
		[14030] = {
			["source"] = "Officer Brady",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 14439,
		},
		[413427] = {
			["source"] = "Pendule",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206074,
		},
		[417227] = {
			["source"] = "Blood Horde Reaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207585,
		},
		[364986] = {
			["npcID"] = 181360,
		},
		[199915] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["encounterID"] = 1850,
			["npcID"] = 99651,
		},
		[401318] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["encounterID"] = 2688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201261,
		},
		[417808] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Haywire Harvester",
			["npcID"] = 205889,
		},
		[389560] = {
			["source"] = "Obsidian Tyrant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202483,
		},
		[342462] = {
			["npcID"] = 170836,
		},
		[229608] = {
			["npcID"] = 115486,
		},
		[29575] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spectral Sentry",
			["npcID"] = 16424,
		},
		[299460] = {
			["npcID"] = 150250,
		},
		[358845] = {
			["npcID"] = 181133,
		},
		[418119] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aqir Destroyer",
			["npcID"] = 207912,
		},
		[234728] = {
			["npcID"] = 115244,
		},
		[209628] = {
			["encounterName"] = "Advisor Melandrus",
			["encounterID"] = 1870,
			["npcID"] = 104218,
		},
		[391610] = {
			["npcID"] = 190401,
		},
		[413806] = {
			["source"] = "Cenrrrn Cirrgl Tideshifter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204516,
		},
		[316836] = {
			["npcID"] = 160478,
		},
		[418122] = {
			["source"] = "Lord Thassarian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207822,
		},
		[257254] = {
			["npcID"] = 171302,
		},
		[377277] = {
			["npcID"] = 192221,
		},
		[428471] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Manifested Dream",
			["npcID"] = 213143,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2708,
		},
		[389564] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Steamgill",
			["npcID"] = 193123,
		},
		[418225] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vorus'arak",
			["npcID"] = 205862,
		},
		[319941] = {
			["encounterName"] = "Echelon",
			["encounterID"] = 2380,
			["npcID"] = 164185,
		},
		[428472] = {
			["isChanneled"] = true,
			["source"] = "Molten Scorpid",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 210295,
		},
		[121468] = {
			["encounterName"] = "Commander Ri'mok",
			["npcID"] = 61177,
			["encounterID"] = 1406,
		},
		[391613] = {
			["npcID"] = 190404,
		},
		[415296] = {
			["source"] = "Larodar, Keeper of the Flame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205136,
		},
		[417694] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Eye Stalk",
			["npcID"] = 208519,
		},
		[373184] = {
			["npcID"] = 189769,
		},
		[413487] = {
			["source"] = "Temporal Fusion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206068,
		},
		[229611] = {
			["npcID"] = 115486,
		},
		[418202] = {
			["source"] = "Infinite Riftmage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208698,
		},
		[389567] = {
			["encounterName"] = "The Crown Chemical Co.",
			["event"] = "SPELL_CAST_START",
			["source"] = "Overspritzed Guard",
			["npcID"] = 116285,
		},
		[44519] = {
			["source"] = "Sunblade Warlock",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24686,
		},
		[407389] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brimstone Serpent",
			["npcID"] = 202272,
		},
		[412093] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Contaminated Titan Watcher",
			["npcID"] = 203834,
		},
		[356804] = {
			["npcID"] = 178578,
		},
		[54791] = {
			["encounterName"] = "Maleki the Pallid",
			["source"] = "Maleki the Pallid",
			["npcID"] = 10438,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 481,
		},
		[418237] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Prophet Skitra",
			["npcID"] = 208491,
		},
		[31601] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crypt Crawler",
			["npcID"] = 10412,
		},
		[415125] = {
			["encounterName"] = "Blight of Galakrond",
			["source"] = "Blight of Galakrond",
			["encounterID"] = 2668,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 207638,
		},
		[80780] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shrieking Banshee",
			["npcID"] = 10463,
		},
		[394647] = {
			["npcID"] = 192003,
		},
		[12739] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scholomance Neophyte",
			["npcID"] = 10470,
		},
		[418125] = {
			["source"] = "Varian Wrynn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205308,
		},
		[415304] = {
			["source"] = "Great Glorious Alliance Paladin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207579,
		},
		[199652] = {
			["npcID"] = 95843,
		},
		[417241] = {
			["source"] = "Gill'dan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204808,
		},
		[332234] = {
			["npcID"] = 167967,
		},
		[183539] = {
			["source"] = "Rotdrool Grabber",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91002,
		},
		[88194] = {
			["source"] = "Young Storm Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45919,
		},
		[357786] = {
			["npcID"] = 177718,
		},
		[389572] = {
			["npcID"] = 187262,
		},
		[342474] = {
			["npcID"] = 165759,
		},
		[147704] = {
			["npcID"] = 72895,
		},
		[420289] = {
			["source"] = "Tempest Conqueror",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207040,
		},
		[257756] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bilge Rat Buccaneer",
			["npcID"] = 129527,
		},
		[150776] = {
			["encounterName"] = "Gug'rokk",
			["npcID"] = 74790,
			["encounterID"] = 1654,
		},
		[196591] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coldscale Gazecrawler",
			["npcID"] = 108185,
		},
		[28294] = {
			["source"] = "Living Monstrosity",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16021,
		},
		[324046] = {
			["encounterName"] = "Oryphrion",
			["npcID"] = 162060,
			["encounterID"] = 2358,
		},
		[418241] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Prophet Skitra",
			["npcID"] = 208491,
		},
		[321999] = {
			["npcID"] = 164705,
		},
		[289235] = {
			["source"] = "Akunda the Devout",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 148617,
		},
		[299474] = {
			["npcID"] = 150154,
		},
		[88080] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Whipping Wind",
			["npcID"] = 47238,
		},
		[387528] = {
			["npcID"] = 186329,
		},
		[420292] = {
			["source"] = "Tempest Conqueror",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207040,
		},
		[356812] = {
			["npcID"] = 180286,
		},
		[317905] = {
			["npcID"] = 178102,
		},
		[54338] = {
			["source"] = "Mad Scientist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16020,
		},
		[140539] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Memory of a Defender",
			["npcID"] = 200527,
		},
		[411302] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Empty Recollection",
			["npcID"] = 202969,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[398978] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Memory of a Fiend",
			["npcID"] = 200030,
		},
		[360909] = {
			["npcID"] = 182150,
		},
		[411394] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bogg",
			["npcID"] = 201747,
		},
		[238586] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brutal Punisher",
			["npcID"] = 117421,
		},
		[396690] = {
			["source"] = "Dismay Fly",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193367,
		},
		[328146] = {
			["encounterName"] = "Blightbone",
			["encounterID"] = 2387,
			["npcID"] = 164702,
		},
		[272046] = {
			["encounterName"] = "Skycap'n Kragg",
			["source"] = "Sharkbait",
			["npcID"] = 126841,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2093,
		},
		[174328] = {
			["npcID"] = 76177,
		},
		[383231] = {
			["npcID"] = 193944,
		},
		[319956] = {
			["npcID"] = 167055,
		},
		[358215] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 177787,
		},
		[405962] = {
			["source"] = "Bronogg the Bully",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203386,
		},
		[322970] = {
			["npcID"] = 178462,
		},
		[319957] = {
			["npcID"] = 177134,
		},
		[394641] = {
			["npcID"] = 192030,
		},
		[31012] = {
			["encounterName"] = "Opera Hall",
			["source"] = "Dorothee",
			["npcID"] = 17535,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 655,
		},
		[191735] = {
			["npcID"] = 98954,
		},
		[125056] = {
			["npcID"] = 165189,
		},
		[46406] = {
			["npcID"] = 25756,
		},
		[365009] = {
			["npcID"] = 184409,
		},
		[408975] = {
			["source"] = "Sundered Edgelord",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198873,
		},
		[303205] = {
			["source"] = "Azsh'ari Oracle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 155628,
		},
		[365008] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 183033,
		},
		[389583] = {
			["npcID"] = 196971,
		},
		[375249] = {
			["npcID"] = 190708,
		},
		[401810] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[405431] = {
			["encounterName"] = "Manifested Timeways",
			["source"] = "Manifested Timeways",
			["encounterID"] = 2667,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198996,
		},
		[288765] = {
			["npcID"] = 177637,
		},
		[421260] = {
			["source"] = "Aurostor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209574,
		},
		[369107] = {
			["npcID"] = 185272,
		},
		[173307] = {
			["npcID"] = 83390,
		},
		[198904] = {
			["npcID"] = 99358,
		},
		[375251] = {
			["encounterName"] = "Magmatusk",
			["npcID"] = 181861,
			["encounterID"] = 2610,
		},
		[405696] = {
			["encounterName"] = "Manifested Timeways",
			["source"] = "Manifested Timeways",
			["encounterID"] = 2667,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198996,
		},
		[298985] = {
			["source"] = "Blackfin Seer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 148475,
		},
		[294726] = {
			["source"] = "Abyssal Commander Sivara",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151881,
		},
		[391634] = {
			["npcID"] = 190403,
		},
		[118914] = {
			["source"] = "Shado-Pan Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 61252,
		},
		[415262] = {
			["encounterName"] = "The Headless Horseman",
			["source"] = "Headless Horseman",
			["npcID"] = 207438,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2725,
		},
		[329110] = {
			["encounterName"] = "Doctor Ickus",
			["encounterID"] = 2384,
			["npcID"] = 164967,
		},
		[400883] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Blazestalker",
			["npcID"] = 199828,
		},
		[369110] = {
			["encounterName"] = "Emberon",
			["encounterID"] = 2558,
			["npcID"] = 184422,
		},
		[407733] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Neldris",
			["encounterID"] = 2693,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200912,
		},
		[417640] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fel-Touched Shu'halo",
			["npcID"] = 206182,
		},
		[358872] = {
			["npcID"] = 178592,
		},
		[353682] = {
			["npcID"] = 176880,
		},
		[366938] = {
			["npcID"] = 185032,
		},
		[418258] = {
			["source"] = "Imperial Vizier Zor'lok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208500,
		},
		[183548] = {
			["npcID"] = 102404,
		},
		[319966] = {
			["npcID"] = 167078,
		},
		[420306] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Chainmaster",
			["npcID"] = 211058,
		},
		[227575] = {
			["encounterName"] = "Moroes",
			["encounterID"] = 1961,
			["npcID"] = 114316,
		},
		[396684] = {
			["source"] = "Dismay Fly",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193367,
		},
		[393686] = {
			["npcID"] = 187886,
		},
		[255220] = {
			["npcID"] = 166032,
		},
		[409635] = {
			["encounterName"] = "Iridikron",
			["source"] = "Iridikron",
			["encounterID"] = 2669,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198933,
		},
		[408970] = {
			["source"] = "Sundered Preserver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205735,
		},
		[154331] = {
			["npcID"] = 133104,
		},
		[412117] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Neldris",
			["encounterID"] = 2693,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200912,
		},
		[340446] = {
			["npcID"] = 167898,
		},
		[397783] = {
			["encounterName"] = "Wise Mari",
			["encounterID"] = 1418,
			["npcID"] = 56448,
		},
		[410070] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["npcID"] = 201320,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2680,
		},
		[173311] = {
			["npcID"] = 83390,
		},
		[209620] = {
			["encounterName"] = "Grand Magistrix Elisande",
			["encounterID"] = 1872,
			["npcID"] = 105299,
		},
		[10452] = {
			["npcID"] = 45569,
		},
		[403574] = {
			["source"] = "Fael'lin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198916,
		},
		[412081] = {
			["source"] = "Colossal Draconic Golem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203826,
		},
		[389594] = {
			["npcID"] = 186430,
		},
		[350687] = {
			["encounterName"] = "The Nine",
			["npcID"] = 175726,
			["encounterID"] = 2429,
		},
		[405279] = {
			["encounterName"] = "Morchie",
			["source"] = "Morchie",
			["encounterID"] = 2671,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198999,
		},
		[54331] = {
			["source"] = "Sludge Belcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16029,
		},
		[407596] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["encounterID"] = 2680,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201320,
		},
		[342497] = {
			["npcID"] = 160466,
		},
		[80009] = {
			["npcID"] = 82001,
		},
		[417338] = {
			["source"] = "The Lich King",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205305,
		},
		[44872] = {
			["encounterName"] = "Brutallus",
			["encounterID"] = 725,
			["npcID"] = 24895,
		},
		[424408] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bodwin",
			["npcID"] = 209153,
		},
		[344546] = {
			["npcID"] = 162880,
		},
		[362976] = {
			["npcID"] = 183721,
		},
		[358006] = {
			["npcID"] = 178789,
		},
		[411862] = {
			["source"] = "Animation Fluid",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203939,
		},
		[407122] = {
			["source"] = "Horde Warlock",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203857,
		},
		[74613] = {
			["source"] = "Dark Ranger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 48269,
		},
		[361868] = {
			["npcID"] = 182688,
		},
		[342500] = {
			["npcID"] = 170836,
		},
		[407790] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["encounterID"] = 2684,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201668,
		},
		[341390] = {
			["npcID"] = 174012,
		},
		[365026] = {
			["npcID"] = 182318,
		},
		[408029] = {
			["encounterName"] = "Blight of Galakrond",
			["source"] = "Loszkeleth",
			["encounterID"] = 2668,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201790,
		},
		[296551] = {
			["encounterName"] = "Abyssal Commander Sivara",
			["source"] = "Abyssal Commander Sivara",
			["encounterID"] = 2298,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151881,
		},
		[338406] = {
			["npcID"] = 173051,
		},
		[260344] = {
			["npcID"] = 166027,
		},
		[201983] = {
			["npcID"] = 113537,
		},
		[393696] = {
			["npcID"] = 195764,
		},
		[189697] = {
			["npcID"] = 161785,
		},
		[372225] = {
			["npcID"] = 189467,
		},
		[333861] = {
			["npcID"] = 167536,
		},
		[418269] = {
			["source"] = "Imperial Vizier Zor'lok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208500,
		},
		[346599] = {
			["npcID"] = 168975,
		},
		[411012] = {
			["source"] = "Young Storm Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45919,
		},
		[294290] = {
			["npcID"] = 144293,
		},
		[344552] = {
			["npcID"] = 164905,
		},
		[374152] = {
			["npcID"] = 197352,
		},
		[348648] = {
			["npcID"] = 176520,
		},
		[224510] = {
			["npcID"] = 112671,
		},
		[352744] = {
			["encounterName"] = "The Nine",
			["encounterID"] = 2429,
			["npcID"] = 175726,
		},
		[412129] = {
			["source"] = "Lerai, Timesworn Maiden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205152,
		},
		[402989] = {
			["encounterName"] = "Magmorax",
			["source"] = "Magmorax",
			["encounterID"] = 2683,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201579,
		},
		[367079] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["encounterID"] = 2529,
			["npcID"] = 180906,
		},
		[164102] = {
			["npcID"] = 81235,
		},
		[193235] = {
			["encounterName"] = "Hymdall",
			["encounterID"] = 1805,
			["npcID"] = 94960,
		},
		[182532] = {
			["npcID"] = 174183,
		},
		[277907] = {
			["npcID"] = 175672,
		},
		[415106] = {
			["encounterName"] = "Blight of Galakrond",
			["source"] = "Blight of Galakrond",
			["encounterID"] = 2668,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198997,
		},
		[362985] = {
			["npcID"] = 183714,
		},
		[365033] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[299502] = {
			["npcID"] = 155094,
		},
		[369129] = {
			["npcID"] = 186509,
		},
		[346604] = {
			["npcID"] = 175792,
		},
		[356843] = {
			["npcID"] = 179388,
		},
		[317936] = {
			["npcID"] = 163459,
		},
		[106864] = {
			["encounterName"] = "Liu Flameheart",
			["encounterID"] = 1416,
			["npcID"] = 56732,
		},
		[346605] = {
			["npcID"] = 175801,
		},
		[400974] = {
			["source"] = "Flamebringer Shaman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203700,
		},
		[411399] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bogg",
			["npcID"] = 201747,
		},
		[417782] = {
			["source"] = "Mechanized Mekgineer Hologram",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207539,
		},
		[403943] = {
			["source"] = "Veltrax",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200904,
		},
		[365036] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["encounterID"] = 2539,
			["npcID"] = 184126,
		},
		[383298] = {
			["npcID"] = 182815,
		},
		[328177] = {
			["npcID"] = 168572,
		},
		[420326] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flamebound Sentinel",
			["npcID"] = 206900,
		},
		[397801] = {
			["encounterName"] = "Wise Mari",
			["encounterID"] = 1418,
			["npcID"] = 56448,
		},
		[358894] = {
			["npcID"] = 179892,
		},
		[264694] = {
			["encounterName"] = "Raal the Gluttonous",
			["source"] = "Raal the Gluttonous",
			["encounterID"] = 2115,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131863,
		},
		[412136] = {
			["source"] = "Valow, Timesworn Keeper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201222,
		},
		[414184] = {
			["encounterName"] = "Iridikron",
			["source"] = "Iridikron",
			["encounterID"] = 2669,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198933,
		},
		[365958] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 181954,
		},
		[352752] = {
			["encounterName"] = "The Nine",
			["encounterID"] = 2429,
			["npcID"] = 178736,
		},
		[387564] = {
			["npcID"] = 196102,
		},
		[162058] = {
			["encounterName"] = "Skylord Tovra",
			["encounterID"] = 1736,
			["npcID"] = 80005,
		},
		[346607] = {
			["npcID"] = 175857,
		},
		[328180] = {
			["npcID"] = 168627,
		},
		[395756] = {
			["npcID"] = 194222,
		},
		[340467] = {
			["npcID"] = 173756,
		},
		[224515] = {
			["npcID"] = 112676,
		},
		[350071] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["npcID"] = 177117,
			["encounterID"] = 2432,
		},
		[419516] = {
			["source"] = "Chronaxie",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206070,
		},
		[417641] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felbolg",
			["npcID"] = 206189,
		},
		[317943] = {
			["npcID"] = 163457,
		},
		[258181] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Crusher",
			["npcID"] = 130400,
		},
		[346612] = {
			["npcID"] = 175851,
		},
		[340469] = {
			["npcID"] = 167439,
		},
		[334326] = {
			["npcID"] = 171376,
		},
		[352756] = {
			["encounterName"] = "The Nine",
			["encounterID"] = 2429,
			["npcID"] = 178738,
		},
		[411112] = {
			["source"] = "Calibrating Scent Matrix",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203606,
		},
		[178442] = {
			["source"] = "Infected Mechanic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 89144,
		},
		[414189] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Krrrn Trr Pyromancer",
			["npcID"] = 205821,
		},
		[114826] = {
			["npcID"] = 59553,
		},
		[406911] = {
			["source"] = "Sundered Champion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201288,
		},
		[365044] = {
			["npcID"] = 182318,
		},
		[409975] = {
			["source"] = "Djaradin Commander",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202109,
		},
		[250114] = {
			["npcID"] = 8776,
		},
		[420334] = {
			["source"] = "Keeper Adranas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209931,
		},
		[397809] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Glakis, Winter's Wrath",
			["npcID"] = 199502,
		},
		[334329] = {
			["npcID"] = 171376,
		},
		[428526] = {
			["encounterName"] = "Ozumat",
			["source"] = "Splotch",
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 213806,
		},
		[387571] = {
			["encounterName"] = "Primal Tsunami",
			["npcID"] = 189729,
			["encounterID"] = 2618,
		},
		[414192] = {
			["source"] = "Krrrn Trr Cryomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204451,
		},
		[309757] = {
			["npcID"] = 156325,
		},
		[200969] = {
			["npcID"] = 97084,
		},
		[395763] = {
			["npcID"] = 196336,
		},
		[340474] = {
			["npcID"] = 167503,
		},
		[384385] = {
			["npcID"] = 193062,
		},
		[319997] = {
			["npcID"] = 164510,
		},
		[413544] = {
			["source"] = "Timestream Anomaly",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199749,
		},
		[381430] = {
			["npcID"] = 190388,
		},
		[407796] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["encounterID"] = 2684,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201668,
		},
		[415436] = {
			["source"] = "Coalesced Moment",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206064,
		},
		[333729] = {
			["npcID"] = 168949,
		},
		[413787] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Entropic Hatred",
			["npcID"] = 203809,
		},
		[403890] = {
			["source"] = "Duzalgor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200610,
		},
		[393718] = {
			["npcID"] = 188715,
		},
		[428530] = {
			["encounterName"] = "Ozumat",
			["source"] = "Ink of Ozumat",
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 213770,
		},
		[411809] = {
			["source"] = "Pahi'rys",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205540,
		},
		[150801] = {
			["encounterName"] = "Slave Watcher Crushto",
			["npcID"] = 74787,
			["encounterID"] = 1653,
		},
		[413135] = {
			["source"] = "Forgemaster Kraglin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201625,
		},
		[242950] = {
			["npcID"] = 115642,
		},
		[227592] = {
			["encounterName"] = "Shade of Medivh",
			["npcID"] = 114350,
			["encounterID"] = 1965,
		},
		[378282] = {
			["npcID"] = 192788,
		},
		[336383] = {
			["npcID"] = 179768,
		},
		[222473] = {
			["npcID"] = 111508,
		},
		[382712] = {
			["source"] = "Wilted Oak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186229,
		},
		[411916] = {
			["source"] = "Sundered Devourer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205673,
		},
		[59395] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Memory of a Torturer",
			["npcID"] = 202555,
		},
		[407124] = {
			["source"] = "Horde Raider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207969,
		},
		[299525] = {
			["npcID"] = 150250,
		},
		[326146] = {
			["source"] = "Rising Despair",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 157558,
		},
		[385531] = {
			["encounterName"] = "Gulping Goliath",
			["npcID"] = 189722,
			["encounterID"] = 2616,
		},
		[405437] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Shadowflame Amalgamation",
			["encounterID"] = 2687,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201934,
		},
		[427384] = {
			["source"] = "Gilgoblin Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40935,
		},
		[348313] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[377341] = {
			["npcID"] = 190407,
		},
		[338434] = {
			["npcID"] = 162875,
		},
		[340482] = {
			["npcID"] = 174131,
		},
		[407198] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["encounterID"] = 2688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201261,
		},
		[360960] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["encounterID"] = 2540,
			["npcID"] = 181224,
		},
		[409921] = {
			["source"] = "Djaradin Commander",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202109,
		},
		[356865] = {
			["npcID"] = 177271,
		},
		[372311] = {
			["npcID"] = 189266,
		},
		[37965] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Underbog Shambler",
			["npcID"] = 17871,
		},
		[241828] = {
			["npcID"] = 114804,
		},
		[420347] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kaldorei Archdruid",
			["npcID"] = 211066,
		},
		[317959] = {
			["npcID"] = 163458,
		},
		[377344] = {
			["npcID"] = 192329,
		},
		[412156] = {
			["source"] = "Time-Lost Aerobot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205723,
		},
		[324103] = {
			["npcID"] = 162133,
		},
		[317880] = {
			["npcID"] = 158992,
		},
		[320008] = {
			["encounterName"] = "The Manastorms",
			["encounterID"] = 2394,
			["npcID"] = 164556,
		},
		[294491] = {
			["npcID"] = 186479,
		},
		[268274] = {
			["encounterName"] = "Ring of Booty",
			["source"] = "Booty Fanatic",
			["npcID"] = 136539,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2095,
		},
		[342534] = {
			["npcID"] = 160504,
		},
		[409231] = {
			["source"] = "Colossal Draconic Golem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203826,
		},
		[346630] = {
			["npcID"] = 175851,
		},
		[388474] = {
			["npcID"] = 194803,
		},
		[367108] = {
			["npcID"] = 184413,
		},
		[397386] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Magma Mystic",
			["encounterID"] = 2682,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199703,
		},
		[346631] = {
			["npcID"] = 175930,
		},
		[390926] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Professor Gastrinax",
			["npcID"] = 203521,
		},
		[317963] = {
			["npcID"] = 163458,
		},
		[369157] = {
			["npcID"] = 188372,
		},
		[428542] = {
			["source"] = "Naz'jar Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40577,
		},
		[381444] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Rira Hackclaw",
			["encounterID"] = 2570,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186122,
		},
		[416256] = {
			["encounterName"] = "Iridikron",
			["source"] = "Iridikron's Creation",
			["encounterID"] = 2669,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204918,
		},
		[369158] = {
			["npcID"] = 185841,
		},
		[215754] = {
			["npcID"] = 108655,
		},
		[378886] = {
			["source"] = "Turi Flickerflame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199740,
		},
		[229151] = {
			["encounterName"] = "Viz'aduum the Watcher",
			["npcID"] = 114790,
			["encounterID"] = 2017,
		},
		[12470] = {
			["source"] = "Gold Shaman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 32340,
		},
		[395531] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Chargum",
			["npcID"] = 193685,
		},
		[391003] = {
			["npcID"] = 197356,
		},
		[358921] = {
			["npcID"] = 178612,
		},
		[401361] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Alcanon",
			["npcID"] = 203515,
		},
		[265721] = {
			["source"] = "Terrorachna",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200349,
		},
		[211217] = {
			["npcID"] = 98756,
		},
		[382561] = {
			["npcID"] = 189654,
		},
		[196883] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lord Etheldrin Ravencrest",
			["npcID"] = 98521,
		},
		[413044] = {
			["source"] = "Grotesque Horror",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 138187,
		},
		[198931] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valarjar Mystic",
			["npcID"] = 207026,
		},
		[350732] = {
			["encounterName"] = "Guardian of the First Ones",
			["npcID"] = 175731,
			["encounterID"] = 2436,
		},
		[331152] = {
			["npcID"] = 167164,
		},
		[260136] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mala'kili",
			["npcID"] = 128935,
		},
		[365067] = {
			["npcID"] = 182318,
		},
		[403571] = {
			["source"] = "Fael'lin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198916,
		},
		[426500] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gnarlroot",
			["npcID"] = 81984,
		},
		[395784] = {
			["npcID"] = 199031,
		},
		[401642] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[342543] = {
			["npcID"] = 170834,
		},
		[393523] = {
			["npcID"] = 187528,
		},
		[363021] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 183463,
		},
		[324114] = {
			["npcID"] = 161896,
		},
		[342544] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168113,
			["encounterID"] = 2417,
		},
		[320019] = {
			["npcID"] = 167022,
		},
		[264603] = {
			["encounterName"] = "Elder Leaxa",
			["source"] = "Elder Leaxa",
			["encounterID"] = 2111,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131318,
		},
		[374135] = {
			["npcID"] = 195256,
		},
		[416264] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2673,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199000,
		},
		[388764] = {
			["source"] = "Snappy",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193228,
		},
		[403978] = {
			["encounterName"] = "The Vigilant Steward, Zskarn",
			["source"] = "Zskarn",
			["encounterID"] = 2689,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202375,
		},
		[427376] = {
			["source"] = "Gilgoblin Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40935,
		},
		[372539] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["npcID"] = 187967,
			["encounterID"] = 2592,
		},
		[360977] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["encounterID"] = 2529,
			["npcID"] = 180906,
		},
		[363024] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 183671,
		},
		[198934] = {
			["npcID"] = 95834,
		},
		[322940] = {
			["npcID"] = 172073,
		},
		[37967] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Underbog Shambler",
			["npcID"] = 17871,
		},
		[414038] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aquifon",
			["npcID"] = 203468,
		},
		[340500] = {
			["npcID"] = 167078,
		},
		[318892] = {
			["npcID"] = 164021,
		},
		[385551] = {
			["encounterName"] = "Gulping Goliath",
			["npcID"] = 189722,
			["encounterID"] = 2616,
		},
		[264734] = {
			["encounterName"] = "Raal the Gluttonous",
			["source"] = "Raal the Gluttonous",
			["npcID"] = 131863,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2115,
		},
		[324987] = {
			["npcID"] = 166301,
		},
		[317976] = {
			["npcID"] = 178102,
		},
		[394893] = {
			["npcID"] = 193668,
		},
		[411730] = {
			["source"] = "Molten Hound",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205611,
		},
		[356099] = {
			["npcID"] = 177395,
		},
		[391696] = {
			["encounterName"] = "Kurog Grimtotem",
			["npcID"] = 190690,
			["encounterID"] = 2605,
		},
		[385553] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["npcID"] = 194990,
			["encounterID"] = 2607,
		},
		[409885] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Highmountain Seer",
			["npcID"] = 201268,
		},
		[356885] = {
			["npcID"] = 177833,
		},
		[401867] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Obsidian Guard",
			["encounterID"] = 2682,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200836,
		},
		[418318] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Faceless One",
			["npcID"] = 206463,
		},
		[338456] = {
			["npcID"] = 172981,
		},
		[332313] = {
			["encounterName"] = "Domina Venomblade",
			["encounterID"] = 2385,
			["npcID"] = 164266,
		},
		[405905] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Amniotic Ooze",
			["npcID"] = 203072,
		},
		[394843] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Oshigol",
			["npcID"] = 193235,
		},
		[391026] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Liskanoth",
			["npcID"] = 193533,
		},
		[411798] = {
			["source"] = "Oozing Sludge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205644,
		},
		[326171] = {
			["encounterName"] = "Mueh'zala",
			["encounterID"] = 2396,
			["npcID"] = 166608,
		},
		[320028] = {
			["npcID"] = 177545,
		},
		[401216] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nevroll",
			["npcID"] = 203039,
		},
		[356888] = {
			["npcID"] = 177813,
		},
		[401108] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Ignara",
			["encounterID"] = 2682,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202791,
		},
		[393748] = {
			["npcID"] = 197501,
		},
		[372553] = {
			["npcID"] = 187566,
		},
		[223511] = {
			["npcID"] = 113512,
		},
		[404846] = {
			["encounterName"] = "Magmorax",
			["source"] = "Magmorax",
			["encounterID"] = 2683,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201579,
		},
		[328221] = {
			["npcID"] = 166723,
		},
		[330269] = {
			["npcID"] = 169600,
		},
		[178461] = {
			["source"] = "Amorphic Cognitor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86144,
		},
		[358938] = {
			["npcID"] = 180840,
		},
		[221464] = {
			["npcID"] = 111225,
		},
		[250933] = {
			["source"] = "Felsiege Doomcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 119533,
		},
		[332318] = {
			["encounterName"] = "Sludgefist",
			["npcID"] = 164407,
			["encounterID"] = 2399,
		},
		[411439] = {
			["source"] = "Sundered Siegemaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198874,
		},
		[270886] = {
			["npcID"] = 151333,
		},
		[403057] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["encounterID"] = 2684,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201668,
		},
		[428564] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Flamewaker Infernoguard",
			["npcID"] = 210290,
		},
		[317985] = {
			["npcID"] = 163520,
		},
		[393752] = {
			["npcID"] = 195764,
		},
		[346654] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 166969,
			["encounterID"] = 2412,
		},
		[383496] = {
			["source"] = "Strunraan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193534,
		},
		[326177] = {
			["npcID"] = 167437,
		},
		[395707] = {
			["npcID"] = 199031,
		},
		[88186] = {
			["source"] = "Empyrean Assassin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45922,
		},
		[340512] = {
			["npcID"] = 167078,
		},
		[342560] = {
			["npcID"] = 160506,
		},
		[411700] = {
			["source"] = "Time-Lost Tidehunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205365,
		},
		[405850] = {
			["source"] = "Sundered Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201753,
		},
		[426519] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Nymue",
			["encounterID"] = 2708,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206172,
		},
		[381470] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Tricktotem",
			["encounterID"] = 2570,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186125,
		},
		[336418] = {
			["npcID"] = 175857,
		},
		[330275] = {
			["npcID"] = 169600,
		},
		[82797] = {
			["npcID"] = 5427,
		},
		[30633] = {
			["encounterName"] = "Warbringer O'mrogg",
			["source"] = "Warbringer O'mrogg",
			["npcID"] = 16809,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1937,
		},
		[418329] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Queen Angerboda",
			["npcID"] = 207823,
		},
		[387613] = {
			["npcID"] = 195842,
		},
		[373279] = {
			["npcID"] = 189988,
		},
		[277035] = {
			["npcID"] = 154018,
		},
		[33493] = {
			["npcID"] = 18848,
		},
		[387614] = {
			["npcID"] = 195851,
		},
		[384365] = {
			["npcID"] = 192800,
		},
		[401175] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ebyssian",
			["npcID"] = 201707,
		},
		[411910] = {
			["source"] = "Young Storm Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45919,
		},
		[363042] = {
			["npcID"] = 182350,
		},
		[228277] = {
			["npcID"] = 114634,
		},
		[411837] = {
			["source"] = "Fragment of Fire",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205971,
		},
		[168227] = {
			["encounterName"] = "Skulloc, Son of Gruul",
			["npcID"] = 83612,
			["encounterID"] = 1754,
		},
		[385258] = {
			["source"] = "Coastal Eel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198782,
		},
		[418333] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Queen Angerboda",
			["npcID"] = 207823,
		},
		[386411] = {
			["encounterName"] = "Teera and Maruuk",
			["encounterID"] = 2581,
			["npcID"] = 186339,
		},
		[385569] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["npcID"] = 189492,
			["encounterID"] = 2607,
		},
		[338471] = {
			["npcID"] = 162100,
		},
		[356901] = {
			["npcID"] = 177004,
		},
		[375331] = {
			["encounterName"] = "The Primal Council",
			["npcID"] = 187768,
			["encounterID"] = 2590,
		},
		[227158] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Darkspear Headhunter",
			["npcID"] = 113034,
		},
		[387618] = {
			["encounterName"] = "Primal Tsunami",
			["npcID"] = 196043,
			["encounterID"] = 2618,
		},
		[332329] = {
			["npcID"] = 170486,
		},
		[334377] = {
			["npcID"] = 171805,
		},
		[418335] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Queen Angerboda",
			["npcID"] = 207823,
		},
		[401316] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["encounterID"] = 2688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201261,
		},
		[409756] = {
			["source"] = "Djaradin Commander",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202109,
		},
		[277041] = {
			["npcID"] = 154020,
		},
		[413136] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Harlan Sweete",
			["npcID"] = 126983,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[395811] = {
			["npcID"] = 190115,
		},
		[405137] = {
			["source"] = "Lady Shaz'ra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200885,
		},
		[342570] = {
			["npcID"] = 170832,
		},
		[391247] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bazual",
			["npcID"] = 193532,
		},
		[395488] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Pipspark Thundersnap",
			["npcID"] = 193684,
		},
		[274383] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vermin Trapper",
			["npcID"] = 130404,
		},
		[277043] = {
			["npcID"] = 154018,
		},
		[361001] = {
			["encounterName"] = "Vigilant Guardian",
			["encounterID"] = 2512,
			["npcID"] = 184522,
		},
		[264757] = {
			["encounterName"] = "Elder Leaxa",
			["source"] = "Elder Leaxa",
			["encounterID"] = 2111,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131318,
		},
		[227615] = {
			["encounterName"] = "Shade of Medivh",
			["npcID"] = 114350,
			["encounterID"] = 1965,
		},
		[334381] = {
			["npcID"] = 171384,
		},
		[377384] = {
			["npcID"] = 190407,
		},
		[382787] = {
			["npcID"] = 187315,
		},
		[389271] = {
			["npcID"] = 193133,
		},
		[392773] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rymek",
			["npcID"] = 188846,
		},
		[225568] = {
			["npcID"] = 99366,
		},
		[202019] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["npcID"] = 98970,
			["encounterID"] = 1835,
		},
		[332335] = {
			["npcID"] = 170488,
		},
		[201411] = {
			["npcID"] = 100527,
		},
		[393750] = {
			["npcID"] = 188711,
		},
		[395816] = {
			["npcID"] = 191524,
		},
		[260292] = {
			["encounterName"] = "Cragmaw the Infested",
			["source"] = "Cragmaw the Infested",
			["encounterID"] = 2118,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131817,
		},
		[159017] = {
			["npcID"] = 78734,
		},
		[385578] = {
			["encounterName"] = "Azureblade",
			["npcID"] = 186739,
			["encounterID"] = 2585,
		},
		[44503] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wretched Husk",
			["npcID"] = 24690,
		},
		[324146] = {
			["encounterName"] = "Ventunax",
			["npcID"] = 162058,
			["encounterID"] = 2356,
		},
		[393298] = {
			["npcID"] = 188673,
		},
		[369197] = {
			["npcID"] = 195187,
		},
		[412200] = {
			["source"] = "Time-Lost Aerobot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205723,
		},
		[272180] = {
			["source"] = "Grotesque Horror",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 138187,
		},
		[391723] = {
			["npcID"] = 197697,
		},
		[377389] = {
			["npcID"] = 192333,
		},
		[395819] = {
			["npcID"] = 187602,
		},
		[340530] = {
			["npcID"] = 162528,
		},
		[237857] = {
			["encounterName"] = "Fury of the God Queen",
			["encounterID"] = 2059,
			["npcID"] = 116499,
		},
		[393772] = {
			["npcID"] = 188717,
		},
		[387629] = {
			["npcID"] = 195876,
		},
		[356913] = {
			["npcID"] = 177813,
		},
		[208165] = {
			["encounterName"] = "Talixae Flamewreath",
			["npcID"] = 104217,
			["encounterID"] = 1869,
		},
		[395448] = {
			["source"] = "Voraazka",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193674,
		},
		[324079] = {
			["encounterName"] = "Mordretha",
			["encounterID"] = 2404,
			["npcID"] = 165946,
		},
		[402983] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gholna",
			["npcID"] = 199853,
		},
		[391726] = {
			["npcID"] = 197698,
		},
		[342581] = {
			["npcID"] = 160507,
		},
		[387631] = {
			["npcID"] = 190968,
		},
		[422443] = {
			["source"] = "Sickened Growth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207926,
		},
		[358963] = {
			["npcID"] = 180864,
		},
		[400999] = {
			["source"] = "Bonesifter Marwak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200681,
		},
		[410978] = {
			["source"] = "Djaradin Dragonhunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202108,
		},
		[196290] = {
			["npcID"] = 91792,
		},
		[304537] = {
			["npcID"] = 153529,
		},
		[328248] = {
			["encounterName"] = "Sun King's Salvation",
			["npcID"] = 165763,
			["encounterID"] = 2402,
		},
		[222501] = {
			["source"] = "Captain Grub Redcut",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199351,
		},
		[225573] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ghostly Councilor",
			["npcID"] = 98370,
		},
		[159021] = {
			["npcID"] = 77890,
		},
		[426541] = {
			["source"] = "Runic Disciple",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131685,
		},
		[403855] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vakan",
			["npcID"] = 199855,
		},
		[375348] = {
			["npcID"] = 190401,
		},
		[301629] = {
			["npcID"] = 150297,
		},
		[199361] = {
			["npcID"] = 96934,
		},
		[173764] = {
			["source"] = "Infected Plunderer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86215,
		},
		[365110] = {
			["npcID"] = 183746,
		},
		[358967] = {
			["npcID"] = 179446,
		},
		[303678] = {
			["npcID"] = 155824,
		},
		[338490] = {
			["npcID"] = 162875,
		},
		[374624] = {
			["encounterName"] = "Kurog Grimtotem",
			["npcID"] = 190686,
			["encounterID"] = 2605,
		},
		[258338] = {
			["encounterName"] = "Council o' Captains",
			["event"] = "SPELL_CAST_START",
			["source"] = "Captain Raoul",
			["npcID"] = 126847,
		},
		[361016] = {
			["npcID"] = 183253,
		},
		[260793] = {
			["encounterName"] = "Cragmaw the Infested",
			["source"] = "Cragmaw the Infested",
			["encounterID"] = 2118,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131817,
		},
		[413023] = {
			["source"] = "Lerai, Timesworn Maiden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205152,
		},
		[375351] = {
			["npcID"] = 190403,
		},
		[393781] = {
			["npcID"] = 194147,
		},
		[391158] = {
			["npcID"] = 193722,
		},
		[275012] = {
			["npcID"] = 152998,
		},
		[358970] = {
			["npcID"] = 179891,
		},
		[328254] = {
			["encounterName"] = "Sun King's Salvation",
			["npcID"] = 168700,
			["encounterID"] = 2402,
		},
		[408927] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Animated Contaminant",
			["npcID"] = 202270,
		},
		[356923] = {
			["npcID"] = 179890,
		},
		[358971] = {
			["npcID"] = 179890,
		},
		[393783] = {
			["npcID"] = 192761,
		},
		[395831] = {
			["npcID"] = 195715,
		},
		[356924] = {
			["npcID"] = 179890,
		},
		[389496] = {
			["source"] = "Liskanoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193533,
		},
		[377402] = {
			["npcID"] = 190405,
		},
		[420405] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tempest Caller",
			["npcID"] = 207041,
		},
		[299588] = {
			["npcID"] = 150251,
		},
		[227568] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114261,
		},
		[412215] = {
			["source"] = "Spurlok, Timesworn Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205158,
		},
		[395833] = {
			["npcID"] = 196913,
		},
		[397881] = {
			["npcID"] = 59873,
		},
		[384353] = {
			["encounterName"] = "Gutshot",
			["encounterID"] = 2567,
			["npcID"] = 186116,
		},
		[320067] = {
			["npcID"] = 177217,
		},
		[395834] = {
			["npcID"] = 197121,
		},
		[162500] = {
			["encounterName"] = "Rocketspark and Borka",
			["encounterID"] = 1715,
			["npcID"] = 77803,
		},
		[87622] = {
			["encounterName"] = "Asaad",
			["source"] = "Asaad",
			["encounterID"] = 1042,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43875,
		},
		[361023] = {
			["npcID"] = 181005,
		},
		[169265] = {
			["encounterName"] = "Yalnu",
			["npcID"] = 83846,
			["encounterID"] = 1756,
		},
		[356928] = {
			["npcID"] = 177128,
		},
		[352834] = {
			["npcID"] = 176959,
		},
		[352833] = {
			["encounterName"] = "Guardian of the First Ones",
			["npcID"] = 175731,
			["encounterID"] = 2436,
		},
		[404027] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[365120] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 181954,
		},
		[334404] = {
			["encounterName"] = "Huntsman Altimor",
			["npcID"] = 165066,
			["encounterID"] = 2418,
		},
		[46164] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["source"] = "Kael'thas Sunstrider",
			["npcID"] = 24664,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1894,
		},
		[346690] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 166971,
			["encounterID"] = 2412,
		},
		[423259] = {
			["source"] = "Wildfire Blazekin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210685,
		},
		[399933] = {
			["source"] = "Tukkaraq's Boat",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201121,
		},
		[337587] = {
			["npcID"] = 162880,
		},
		[378208] = {
			["encounterName"] = "Hackclaw's War-Band",
			["encounterID"] = 2570,
			["npcID"] = 186124,
		},
		[397886] = {
			["npcID"] = 62358,
		},
		[375327] = {
			["npcID"] = 190404,
		},
		[361027] = {
			["npcID"] = 181093,
		},
		[382303] = {
			["encounterName"] = "Bromach",
			["encounterID"] = 2556,
			["npcID"] = 184018,
		},
		[397341] = {
			["encounterName"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["encounterID"] = 2605,
		},
		[358980] = {
			["npcID"] = 180864,
		},
		[16429] = {
			["source"] = "Thuzadin Shadowcaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10398,
		},
		[297310] = {
			["npcID"] = 153174,
		},
		[397888] = {
			["npcID"] = 200126,
		},
		[385574] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["npcID"] = 189492,
			["encounterID"] = 2607,
		},
		[377411] = {
			["npcID"] = 187455,
		},
		[395841] = {
			["npcID"] = 197120,
		},
		[397889] = {
			["npcID"] = 200126,
		},
		[358982] = {
			["npcID"] = 180865,
		},
		[270929] = {
			["npcID"] = 152843,
		},
		[357729] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 178072,
		},
		[365126] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 181548,
		},
		[358983] = {
			["npcID"] = 180865,
		},
		[347490] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[387652] = {
			["npcID"] = 187203,
		},
		[394795] = {
			["npcID"] = 193443,
		},
		[218415] = {
			["encounterName"] = "Il'gynoth, The Heart of Corruption",
			["encounterID"] = 1873,
			["npcID"] = 105906,
		},
		[289360] = {
			["source"] = "Div'yane",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 148615,
		},
		[346698] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 166971,
			["encounterID"] = 2412,
		},
		[397892] = {
			["npcID"] = 104275,
		},
		[367176] = {
			["npcID"] = 184409,
		},
		[352842] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176532,
		},
		[242989] = {
			["npcID"] = 115638,
		},
		[258169] = {
			["source"] = "Sandana the Tempest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193176,
		},
		[204082] = {
			["npcID"] = 116206,
		},
		[352843] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176533,
		},
		[420419] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tempest Caller",
			["npcID"] = 207041,
		},
		[198963] = {
			["encounterName"] = "Naraxas",
			["source"] = "Naraxas",
			["encounterID"] = 1792,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91005,
		},
		[350796] = {
			["encounterName"] = "So'leah",
			["encounterID"] = 2442,
			["npcID"] = 177269,
		},
		[371273] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 188302,
		},
		[367966] = {
			["npcID"] = 184901,
		},
		[235823] = {
			["npcID"] = 118489,
		},
		[329917] = {
			["npcID"] = 168578,
		},
		[320081] = {
			["npcID"] = 177217,
		},
		[387657] = {
			["npcID"] = 186329,
		},
		[356941] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 178081,
		},
		[397897] = {
			["npcID"] = 104273,
		},
		[377419] = {
			["npcID"] = 189914,
		},
		[420422] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[162105] = {
			["npcID"] = 88509,
		},
		[257220] = {
			["npcID"] = 166029,
		},
		[274400] = {
			["source"] = "Cutwater Duelist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 129559,
		},
		[387659] = {
			["npcID"] = 194458,
		},
		[381516] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["npcID"] = 190485,
			["encounterID"] = 2623,
		},
		[326227] = {
			["source"] = "Rising Despair",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 157558,
		},
		[377421] = {
			["npcID"] = 192938,
		},
		[412233] = {
			["source"] = "Time-Lost Rocketeer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205727,
		},
		[235825] = {
			["npcID"] = 118487,
		},
		[228025] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114329,
		},
		[393804] = {
			["npcID"] = 188860,
		},
		[363088] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["encounterID"] = 2539,
			["npcID"] = 182169,
		},
		[373327] = {
			["encounterName"] = "Eranog",
			["encounterID"] = 2587,
			["npcID"] = 187593,
		},
		[159035] = {
			["npcID"] = 78728,
		},
		[392832] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Degmakh",
			["npcID"] = 194251,
		},
		[354898] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176532,
		},
		[340564] = {
			["npcID"] = 169206,
		},
		[350803] = {
			["encounterName"] = "The Eye of the Jailer",
			["npcID"] = 175725,
			["encounterID"] = 2433,
		},
		[393806] = {
			["npcID"] = 187387,
		},
		[413562] = {
			["encounterName"] = "Grand Vizier Ertan",
			["source"] = "Lurking Tempest",
			["encounterID"] = 1043,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204337,
		},
		[348756] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[408141] = {
			["encounterName"] = "Blight of Galakrond",
			["source"] = "Dazhak",
			["encounterID"] = 2668,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201788,
		},
		[420428] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Deceiver Hr'qoth",
			["npcID"] = 206784,
		},
		[354900] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176532,
		},
		[381521] = {
			["npcID"] = 192462,
		},
		[368287] = {
			["npcID"] = 185534,
		},
		[361044] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 182305,
		},
		[373329] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184986,
		},
		[340567] = {
			["npcID"] = 162741,
		},
		[33624] = {
			["npcID"] = 18971,
		},
		[312674] = {
			["npcID"] = 161388,
		},
		[395857] = {
			["npcID"] = 189834,
		},
		[388897] = {
			["npcID"] = 193605,
		},
		[381525] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["npcID"] = 190484,
			["encounterID"] = 2623,
		},
		[86182] = {
			["encounterName"] = "Conclave of Wind",
			["source"] = "Rohash",
			["encounterID"] = 1035,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45872,
		},
		[413013] = {
			["encounterName"] = "Chronikar",
			["source"] = "Chronikar",
			["encounterID"] = 2666,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198995,
		},
		[356951] = {
			["npcID"] = 177004,
		},
		[358999] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[393811] = {
			["npcID"] = 192718,
		},
		[354904] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176532,
		},
		[227638] = {
			["encounterName"] = "Attumen the Huntsman",
			["encounterID"] = 1960,
			["npcID"] = 114262,
		},
		[393812] = {
			["npcID"] = 188860,
		},
		[426576] = {
			["source"] = "Dream Seedling",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211339,
		},
		[395860] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mossy Gulper",
			["npcID"] = 195762,
		},
		[154415] = {
			["encounterName"] = "Soulbinder Nyami",
			["npcID"] = 76177,
			["encounterID"] = 1685,
		},
		[394706] = {
			["npcID"] = 198702,
		},
		[393813] = {
			["npcID"] = 186064,
		},
		[387670] = {
			["npcID"] = 187266,
		},
		[413012] = {
			["source"] = "Shadow Additive",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205671,
		},
		[375384] = {
			["npcID"] = 190371,
		},
		[369241] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Berserker",
			["npcID"] = 200058,
		},
		[322143] = {
			["npcID"] = 156559,
		},
		[356955] = {
			["npcID"] = 176880,
		},
		[375385] = {
			["npcID"] = 190700,
		},
		[328287] = {
			["npcID"] = 165265,
		},
		[356956] = {
			["npcID"] = 177573,
		},
		[235831] = {
			["npcID"] = 118839,
		},
		[301667] = {
			["npcID"] = 150292,
		},
		[237879] = {
			["encounterName"] = "Fury of the God Queen",
			["encounterID"] = 2059,
			["npcID"] = 116499,
		},
		[241798] = {
			["npcID"] = 114783,
		},
		[381530] = {
			["npcID"] = 193373,
		},
		[390982] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Rampager",
			["npcID"] = 186727,
		},
		[377435] = {
			["npcID"] = 187265,
		},
		[412247] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Agitator Zoralek",
			["npcID"] = 199305,
		},
		[396629] = {
			["npcID"] = 193163,
		},
		[375388] = {
			["npcID"] = 190900,
		},
		[362617] = {
			["encounterName"] = "The Jailer",
			["npcID"] = 180990,
			["encounterID"] = 2537,
		},
		[391268] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Earthwrought Smasher",
			["npcID"] = 197595,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[397914] = {
			["npcID"] = 200137,
		},
		[350816] = {
			["encounterName"] = "The Eye of the Jailer",
			["npcID"] = 176531,
			["encounterID"] = 2433,
		},
		[397094] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Malsegan",
			["npcID"] = 193212,
		},
		[161090] = {
			["encounterName"] = "Rocketspark and Borka",
			["encounterID"] = 1715,
			["npcID"] = 77816,
		},
		[235833] = {
			["npcID"] = 118491,
		},
		[253239] = {
			["source"] = "Dazar'ai Juggernaut",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122971,
		},
		[376892] = {
			["encounterName"] = "Balakar Khan",
			["encounterID"] = 2580,
			["npcID"] = 186151,
		},
		[387677] = {
			["npcID"] = 190214,
		},
		[389725] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bazual",
			["npcID"] = 193532,
		},
		[320861] = {
			["npcID"] = 162046,
		},
		[318813] = {
			["npcID"] = 164021,
		},
		[31405] = {
			["npcID"] = 17771,
		},
		[381535] = {
			["npcID"] = 190388,
		},
		[158014] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gruffy",
			["npcID"] = 193251,
		},
		[164887] = {
			["npcID"] = 81820,
		},
		[427343] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["encounterID"] = 2731,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208445,
		},
		[158020] = {
			["npcID"] = 151957,
		},
		[390979] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Drakeflayer",
			["npcID"] = 192341,
		},
		[328295] = {
			["npcID"] = 168718,
		},
		[395871] = {
			["npcID"] = 189834,
		},
		[365155] = {
			["npcID"] = 183746,
		},
		[12248] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Murkblood Oracle",
			["npcID"] = 17771,
		},
		[389435] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wither Biter",
			["npcID"] = 197136,
		},
		[395872] = {
			["npcID"] = 59546,
		},
		[401362] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sulfira Deepstrider",
			["npcID"] = 201076,
		},
		[86374] = {
			["source"] = "Shado-Pan Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 61252,
		},
		[192288] = {
			["encounterName"] = "Hyrja",
			["encounterID"] = 1806,
			["npcID"] = 97202,
		},
		[354918] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176532,
		},
		[414303] = {
			["encounterName"] = "Manifested Timeways",
			["source"] = "Manifested Timeways",
			["encounterID"] = 2667,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198996,
		},
		[415055] = {
			["source"] = "Pureblooded Proto-Drake",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205682,
		},
		[157534] = {
			["npcID"] = 88087,
		},
		[387683] = {
			["npcID"] = 187203,
		},
		[356967] = {
			["npcID"] = 180348,
		},
		[3110] = {
			["npcID"] = 58959,
		},
		[398985] = {
			["npcID"] = 198214,
		},
		[330347] = {
			["npcID"] = 157583,
		},
		[235837] = {
			["npcID"] = 118492,
		},
		[277106] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Professor Gastrinax",
			["npcID"] = 203521,
		},
		[295536] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["npcID"] = 150190,
			["encounterID"] = 2291,
		},
		[46150] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coilskar Witch",
			["npcID"] = 24696,
		},
		[324205] = {
			["encounterName"] = "Ventunax",
			["npcID"] = 162058,
			["encounterID"] = 2356,
		},
		[210875] = {
			["npcID"] = 96574,
		},
		[377447] = {
			["npcID"] = 192220,
		},
		[106851] = {
			["npcID"] = 59519,
		},
		[86699] = {
			["source"] = "Shado-Pan Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 61252,
		},
		[301681] = {
			["npcID"] = 150292,
		},
		[361066] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 181551,
		},
		[395878] = {
			["npcID"] = 59546,
		},
		[356971] = {
			["npcID"] = 180087,
		},
		[167239] = {
			["npcID"] = 83028,
		},
		[350828] = {
			["encounterName"] = "The Eye of the Jailer",
			["npcID"] = 175725,
			["encounterID"] = 2433,
		},
		[371306] = {
			["npcID"] = 186741,
		},
		[164168] = {
			["npcID"] = 81212,
		},
		[402766] = {
			["source"] = "Sundered Flame Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203616,
		},
		[393832] = {
			["source"] = "Sturdy Gladehorn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196655,
		},
		[412262] = {
			["source"] = "Time-Lost Rocketeer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205727,
		},
		[426596] = {
			["source"] = "Coven Diviner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131819,
		},
		[167240] = {
			["npcID"] = 83028,
		},
		[320114] = {
			["encounterName"] = "Xav the Unfallen",
			["encounterID"] = 2366,
			["npcID"] = 162329,
		},
		[228673] = {
			["source"] = "Kirin Tor Invoker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 110715,
		},
		[406120] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Keeper Tyr",
			["npcID"] = 198982,
		},
		[146763] = {
			["encounterName"] = "Galakras",
			["encounterID"] = 1622,
			["npcID"] = 72353,
		},
		[354927] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 178081,
		},
		[165193] = {
			["source"] = "Anchorite Valest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81101,
		},
		[340593] = {
			["npcID"] = 172050,
		},
		[157001] = {
			["npcID"] = 77890,
		},
		[393835] = {
			["npcID"] = 195397,
		},
		[261438] = {
			["encounterName"] = "Lord and Lady Waycrest",
			["source"] = "Lord Waycrest",
			["encounterID"] = 2116,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131527,
		},
		[235841] = {
			["npcID"] = 118448,
		},
		[367215] = {
			["npcID"] = 184395,
		},
		[336499] = {
			["encounterName"] = "Mistcaller",
			["encounterID"] = 2392,
			["npcID"] = 164501,
		},
		[54965] = {
			["npcID"] = 23960,
		},
		[365168] = {
			["npcID"] = 183398,
		},
		[193826] = {
			["encounterName"] = "God-King Skovald",
			["encounterID"] = 1808,
			["npcID"] = 95675,
		},
		[37979] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Murkblood Healer",
			["npcID"] = 17730,
		},
		[395885] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[365169] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[391790] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Seismic Stomps",
			["npcID"] = 197829,
		},
		[237890] = {
			["encounterName"] = "Fury of the God Queen",
			["encounterID"] = 2059,
			["npcID"] = 116496,
		},
		[371313] = {
			["npcID"] = 34503,
		},
		[341702] = {
			["npcID"] = 162657,
		},
		[391791] = {
			["npcID"] = 197220,
		},
		[320120] = {
			["encounterName"] = "An Affront of Challengers",
			["encounterID"] = 2391,
			["npcID"] = 164463,
		},
		[354932] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 178081,
		},
		[261440] = {
			["encounterName"] = "Lord and Lady Waycrest",
			["source"] = "Lord Waycrest",
			["encounterID"] = 2116,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131527,
		},
		[359028] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 176563,
		},
		[386993] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cascade Proto-Drake",
			["npcID"] = 194939,
		},
		[346742] = {
			["encounterName"] = "Mailroom Mayhem",
			["encounterID"] = 2424,
			["npcID"] = 175646,
		},
		[356981] = {
			["npcID"] = 177529,
		},
		[391793] = {
			["npcID"] = 197220,
		},
		[410223] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[272592] = {
			["npcID"] = 138281,
		},
		[373364] = {
			["npcID"] = 189878,
		},
		[221875] = {
			["encounterName"] = "Star Augur Etraeus",
			["encounterID"] = 1863,
			["npcID"] = 103758,
		},
		[386555] = {
			["npcID"] = 187768,
		},
		[197961] = {
			["encounterName"] = "Odyn",
			["encounterID"] = 1809,
			["npcID"] = 95676,
		},
		[195254] = {
			["encounterName"] = "Amalgam of Souls",
			["npcID"] = 98542,
			["encounterID"] = 1832,
		},
		[114646] = {
			["npcID"] = 59555,
		},
		[385652] = {
			["npcID"] = 195243,
		},
		[363126] = {
			["npcID"] = 181027,
		},
		[356984] = {
			["npcID"] = 178402,
		},
		[399987] = {
			["source"] = "Zaqali Firecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200454,
		},
		[114859] = {
			["npcID"] = 59614,
		},
		[410225] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2677,
		},
		[156722] = {
			["npcID"] = 77700,
		},
		[395284] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Groffnar",
			["npcID"] = 201537,
		},
		[395893] = {
			["encounterName"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["encounterID"] = 2605,
		},
		[354938] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176533,
		},
		[398806] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nimbulatus, Storm's Wrath",
			["npcID"] = 199667,
		},
		[391798] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rebel Incinerator",
			["npcID"] = 195062,
		},
		[328318] = {
			["npcID"] = 177912,
		},
		[363130] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["encounterID"] = 2539,
			["npcID"] = 182169,
		},
		[365901] = {
			["npcID"] = 185346,
		},
		[391799] = {
			["npcID"] = 197131,
		},
		[202420] = {
			["npcID"] = 127597,
		},
		[76133] = {
			["encounterName"] = "Ozumat",
			["source"] = "Neptulon",
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40792,
		},
		[373370] = {
			["npcID"] = 189878,
		},
		[116] = {
			["npcID"] = 188027,
		},
		[396907] = {
			["encounterName"] = "Liu Flameheart",
			["encounterID"] = 1416,
			["npcID"] = 56762,
		},
		[82608] = {
			["npcID"] = 3255,
		},
		[57780] = {
			["source"] = "Steelforged Defender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 33236,
		},
		[367228] = {
			["npcID"] = 184767,
		},
		[399949] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Tempest",
			["npcID"] = 200673,
		},
		[387708] = {
			["npcID"] = 187745,
		},
		[422518] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[375420] = {
			["npcID"] = 196185,
		},
		[328322] = {
			["encounterName"] = "Echelon",
			["encounterID"] = 2380,
			["npcID"] = 164363,
		},
		[406854] = {
			["source"] = "Sundered Arcanist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201736,
		},
		[388424] = {
			["encounterName"] = "Primal Tsunami",
			["npcID"] = 189729,
			["encounterID"] = 2618,
		},
		[394567] = {
			["source"] = "Gillidan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205036,
		},
		[320132] = {
			["encounterName"] = "The Manastorms",
			["encounterID"] = 2394,
			["npcID"] = 164556,
		},
		[395899] = {
			["npcID"] = 199124,
		},
		[224944] = {
			["npcID"] = 113012,
		},
		[261446] = {
			["encounterName"] = "Lord and Lady Waycrest",
			["source"] = "Lady Waycrest",
			["encounterID"] = 2116,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 131545,
		},
		[229706] = {
			["npcID"] = 115418,
		},
		[375422] = {
			["npcID"] = 189337,
		},
		[414330] = {
			["encounterName"] = "Iridikron",
			["source"] = "Chromie",
			["encounterID"] = 2669,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 204449,
		},
		[375423] = {
			["npcID"] = 181310,
		},
		[31407] = {
			["npcID"] = 17729,
		},
		[412283] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Alcanon",
			["npcID"] = 203515,
		},
		[365185] = {
			["npcID"] = 184659,
		},
		[397878] = {
			["npcID"] = 59873,
		},
		[410236] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Grommash Hellscream",
			["encounterID"] = 2672,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203678,
		},
		[412284] = {
			["source"] = "Captain Reykal",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203355,
		},
		[407097] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Earthrender Ku'siva",
			["npcID"] = 199840,
		},
		[183633] = {
			["npcID"] = 91008,
		},
		[377473] = {
			["encounterName"] = "Warlord Sargha",
			["npcID"] = 189901,
			["encounterID"] = 2611,
		},
		[420476] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crustbreaker Conduit",
			["npcID"] = 207038,
		},
		[328016] = {
			["npcID"] = 168578,
		},
		[320135] = {
			["npcID"] = 167470,
		},
		[250934] = {
			["source"] = "Felsiege Doomcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 119533,
		},
		[224943] = {
			["npcID"] = 113012,
		},
		[381570] = {
			["npcID"] = 190388,
		},
		[406851] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["encounterID"] = 2680,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201320,
		},
		[33111] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowmoon Warlock",
			["npcID"] = 17371,
		},
		[394564] = {
			["source"] = "Gillidan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205036,
		},
		[395541] = {
			["npcID"] = 193650,
		},
		[211632] = {
			["npcID"] = 105617,
		},
		[322892] = {
			["npcID"] = 156560,
		},
		[394802] = {
			["npcID"] = 198502,
		},
		[340617] = {
			["encounterName"] = "Huntsman Altimor",
			["npcID"] = 173112,
			["encounterID"] = 2418,
		},
		[408193] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Shadowflame Amalgamation",
			["encounterID"] = 2687,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201934,
		},
		[402050] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[393780] = {
			["npcID"] = 194147,
		},
		[145752] = {
			["npcID"] = 72656,
		},
		[397899] = {
			["npcID"] = 200131,
		},
		[320141] = {
			["encounterName"] = "The Manastorms",
			["encounterID"] = 2394,
			["npcID"] = 164556,
		},
		[395908] = {
			["npcID"] = 192767,
		},
		[340619] = {
			["npcID"] = 172071,
		},
		[334476] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 162689,
		},
		[393859] = {
			["npcID"] = 187689,
		},
		[354080] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[381575] = {
			["npcID"] = 189382,
		},
		[394972] = {
			["npcID"] = 197148,
		},
		[388918] = {
			["encounterName"] = "Broodkeeper Diurna",
			["npcID"] = 190245,
			["encounterID"] = 2614,
		},
		[428674] = {
			["encounterName"] = "Ozumat",
			["source"] = "Neptulon",
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40792,
		},
		[332430] = {
			["npcID"] = 177132,
		},
		[341969] = {
			["npcID"] = 174210,
		},
		[320144] = {
			["encounterName"] = "The Manastorms",
			["encounterID"] = 2394,
			["npcID"] = 164555,
		},
		[401205] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Carcaxas",
			["npcID"] = 202836,
		},
		[340622] = {
			["npcID"] = 173798,
		},
		[395458] = {
			["source"] = "Harkyn Grymstone",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186200,
		},
		[32863] = {
			["npcID"] = 18640,
		},
		[346766] = {
			["encounterName"] = "Hylbrande",
			["npcID"] = 175663,
			["encounterID"] = 2426,
		},
		[340623] = {
			["npcID"] = 173798,
		},
		[424581] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["npcID"] = 209090,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2786,
		},
		[377483] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadeslash Trakken",
			["npcID"] = 193271,
		},
		[352172] = {
			["npcID"] = 178102,
		},
		[197974] = {
			["encounterName"] = "Ilysanna Ravencrest",
			["source"] = "Soul-torn Vanguard",
			["encounterID"] = 1833,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 100485,
		},
		[285335] = {
			["npcID"] = 156159,
		},
		[328338] = {
			["npcID"] = 167493,
		},
		[330386] = {
			["npcID"] = 158976,
		},
		[381580] = {
			["source"] = "Sundered Flame Brawler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203620,
		},
		[391821] = {
			["npcID"] = 189654,
		},
		[410249] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["source"] = "Tyr, the Infinite Keeper",
			["encounterID"] = 2670,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198998,
		},
		[330387] = {
			["npcID"] = 159178,
		},
		[420490] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crustbreaker Conduit",
			["npcID"] = 207038,
		},
		[350865] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 177154,
		},
		[377486] = {
			["npcID"] = 184335,
		},
		[330388] = {
			["npcID"] = 159178,
		},
		[340627] = {
			["npcID"] = 173798,
		},
		[375439] = {
			["encounterName"] = "Magmatusk",
			["npcID"] = 181861,
			["encounterID"] = 2610,
		},
		[352914] = {
			["npcID"] = 177397,
		},
		[210261] = {
			["npcID"] = 104251,
		},
		[373392] = {
			["npcID"] = 192796,
		},
		[334485] = {
			["encounterName"] = "Ventunax",
			["npcID"] = 162058,
			["encounterID"] = 2356,
		},
		[23601] = {
			["npcID"] = 16704,
		},
		[377383] = {
			["npcID"] = 192333,
		},
		[357011] = {
			["npcID"] = 177514,
		},
		[12542] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowmoon Darkcaster",
			["npcID"] = 17694,
		},
		[22121] = {
			["source"] = "Timberstep Archer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194041,
		},
		[330391] = {
			["npcID"] = 159178,
		},
		[382435] = {
			["npcID"] = 186191,
		},
		[374081] = {
			["npcID"] = 190022,
		},
		[377490] = {
			["npcID"] = 191057,
		},
		[387729] = {
			["source"] = "Trudging Devourer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201066,
		},
		[373395] = {
			["npcID"] = 199717,
		},
		[334488] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 162689,
		},
		[279199] = {
			["source"] = "Scarlet Siegemaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211937,
		},
		[389515] = {
			["npcID"] = 185811,
		},
		[205486] = {
			["encounterName"] = "Star Augur Etraeus",
			["encounterID"] = 1863,
			["npcID"] = 103758,
		},
		[395797] = {
			["npcID"] = 198424,
		},
		[228011] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114522,
		},
		[165213] = {
			["npcID"] = 81985,
		},
		[389779] = {
			["npcID"] = 3273,
		},
		[153268] = {
			["npcID"] = 77700,
		},
		[402748] = {
			["source"] = "Molten Crusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205566,
		},
		[387732] = {
			["npcID"] = 4127,
		},
		[420495] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Deceiver Hr'qoth",
			["npcID"] = 206784,
		},
		[375446] = {
			["npcID"] = 187960,
		},
		[418449] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Druid of the Claw",
			["npcID"] = 210684,
		},
		[395924] = {
			["source"] = "Maeleera",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193677,
		},
		[389686] = {
			["npcID"] = 187160,
		},
		[393876] = {
			["npcID"] = 191507,
		},
		[188763] = {
			["npcID"] = 126943,
		},
		[330397] = {
			["npcID"] = 178281,
		},
		[395695] = {
			["npcID"] = 196073,
		},
		[350875] = {
			["encounterName"] = "So'leah",
			["encounterID"] = 2442,
			["npcID"] = 177269,
		},
		[385068] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["npcID"] = 197145,
			["encounterID"] = 2607,
		},
		[399701] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Swooping Flayer",
			["npcID"] = 199809,
		},
		[406165] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["encounterID"] = 2680,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201320,
		},
		[227672] = {
			["encounterName"] = "Moroes",
			["encounterID"] = 1961,
			["npcID"] = 114321,
		},
		[359743] = {
			["npcID"] = 182357,
		},
		[381593] = {
			["npcID"] = 184300,
		},
		[275110] = {
			["source"] = "Bloodbeak the Ravenous",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201535,
		},
		[338591] = {
			["npcID"] = 173066,
		},
		[164192] = {
			["npcID"] = 81236,
		},
		[420501] = {
			["source"] = "Wildfire Primalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209200,
		},
		[365212] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[391833] = {
			["npcID"] = 188710,
		},
		[393881] = {
			["npcID"] = 196535,
		},
		[387684] = {
			["npcID"] = 195348,
		},
		[275112] = {
			["npcID"] = 197353,
		},
		[392926] = {
			["source"] = "Flickering Ember",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197906,
		},
		[377500] = {
			["npcID"] = 184335,
		},
		[390916] = {
			["npcID"] = 194225,
		},
		[373405] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["npcID"] = 187967,
			["encounterID"] = 2592,
		},
		[334498] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168113,
			["encounterID"] = 2417,
		},
		[355646] = {
			["npcID"] = 178191,
		},
		[428695] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["npcID"] = 209090,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2786,
		},
		[340642] = {
			["npcID"] = 172078,
		},
		[330403] = {
			["npcID"] = 168153,
		},
		[377502] = {
			["npcID"] = 187273,
		},
		[196587] = {
			["encounterName"] = "Amalgam of Souls",
			["npcID"] = 98542,
			["encounterID"] = 1832,
		},
		[166242] = {
			["npcID"] = 162874,
		},
		[391837] = {
			["source"] = "Emerald Warden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191252,
		},
		[377503] = {
			["npcID"] = 187155,
		},
		[330405] = {
			["npcID"] = 168525,
		},
		[371358] = {
			["npcID"] = 187154,
		},
		[396600] = {
			["npcID"] = 192759,
		},
		[393803] = {
			["npcID"] = 193783,
		},
		[395934] = {
			["npcID"] = 197119,
		},
		[316072] = {
			["npcID"] = 169476,
		},
		[375457] = {
			["encounterName"] = "Broodkeeper Diurna",
			["npcID"] = 191222,
			["encounterID"] = 2614,
		},
		[320168] = {
			["encounterName"] = "The Manastorms",
			["encounterID"] = 2394,
			["npcID"] = 164555,
		},
		[372279] = {
			["encounterName"] = "The Primal Council",
			["npcID"] = 187768,
			["encounterID"] = 2590,
		},
		[340646] = {
			["npcID"] = 173802,
		},
		[228700] = {
			["npcID"] = 114338,
		},
		[346790] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 169924,
			["encounterID"] = 2412,
		},
		[420509] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flamesworn Infernomancer",
			["npcID"] = 210503,
		},
		[357029] = {
			["npcID"] = 180335,
		},
		[375459] = {
			["npcID"] = 192941,
		},
		[320170] = {
			["encounterName"] = "Amarth, The Harvester",
			["encounterID"] = 2388,
			["npcID"] = 162692,
		},
		[330409] = {
			["npcID"] = 160375,
		},
		[393430] = {
			["npcID"] = 192703,
		},
		[383651] = {
			["npcID"] = 193944,
		},
		[328362] = {
			["npcID"] = 167834,
		},
		[397468] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Flamesworn Herald",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199549,
		},
		[340649] = {
			["npcID"] = 180096,
		},
		[17843] = {
			["npcID"] = 189583,
		},
		[395939] = {
			["npcID"] = 195969,
		},
		[387748] = {
			["npcID"] = 191145,
		},
		[381605] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["npcID"] = 190484,
			["encounterID"] = 2623,
		},
		[326316] = {
			["npcID"] = 160445,
		},
		[226231] = {
			["npcID"] = 111170,
		},
		[173384] = {
			["npcID"] = 83392,
		},
		[221864] = {
			["encounterName"] = "Grand Magistrix Elisande",
			["encounterID"] = 1872,
			["npcID"] = 105299,
		},
		[394876] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Phenran",
			["npcID"] = 193688,
		},
		[336556] = {
			["npcID"] = 164897,
		},
		[338604] = {
			["npcID"] = 173066,
		},
		[393894] = {
			["npcID"] = 196535,
		},
		[334509] = {
			["npcID"] = 177294,
		},
		[147817] = {
			["npcID"] = 72876,
		},
		[331069] = {
			["npcID"] = 179615,
		},
		[30851] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowmoon Summoner",
			["npcID"] = 17395,
		},
		[326319] = {
			["npcID"] = 164921,
		},
		[408228] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Grommash Hellscream",
			["encounterID"] = 2672,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203678,
		},
		[338606] = {
			["npcID"] = 167731,
		},
		[406182] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Corruptor Tentacle",
			["npcID"] = 203338,
		},
		[114872] = {
			["npcID"] = 59613,
		},
		[418469] = {
			["source"] = "Minion of Deathwingurlugull",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205037,
		},
		[265540] = {
			["source"] = "Fetid Maggot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 130909,
		},
		[406183] = {
			["source"] = "Krono Sandtongue",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205622,
		},
		[391849] = {
			["npcID"] = 191406,
		},
		[336560] = {
			["npcID"] = 180627,
		},
		[330417] = {
			["npcID"] = 169696,
		},
		[211299] = {
			["npcID"] = 105715,
		},
		[85692] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Doomguard",
			["npcID"] = 11859,
		},
		[295606] = {
			["encounterName"] = "Abyssal Commander Sivara",
			["source"] = "Abyssal Commander Sivara",
			["encounterID"] = 2298,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151881,
		},
		[346800] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 166970,
			["encounterID"] = 2412,
		},
		[111801] = {
			["encounterName"] = "Instructor Chillheart",
			["npcID"] = 58822,
			["encounterID"] = 1426,
		},
		[424615] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elder Cassaphine",
			["npcID"] = 206818,
		},
		[426663] = {
			["isChanneled"] = true,
			["source"] = "Vicious Snap Dragon",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 212681,
		},
		[395947] = {
			["source"] = "Decay Speaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197124,
		},
		[203109] = {
			["npcID"] = 127596,
		},
		[340655] = {
			["npcID"] = 172077,
		},
		[114873] = {
			["npcID"] = 59613,
		},
		[412330] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Malrogg",
			["npcID"] = 202606,
		},
		[395946] = {
			["npcID"] = 197122,
		},
		[68799] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Apothecary Frye",
			["npcID"] = 36272,
		},
		[250208] = {
			["npcID"] = 168428,
		},
		[152940] = {
			["encounterName"] = "Roltall",
			["npcID"] = 75786,
			["encounterID"] = 1652,
		},
		[373424] = {
			["encounterName"] = "Chargath, Bane of Scales",
			["npcID"] = 189340,
			["encounterID"] = 2613,
		},
		[323544] = {
			["encounterName"] = "Hakkar, the Soulflayer",
			["encounterID"] = 2395,
			["npcID"] = 165905,
		},
		[384993] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Agitated Horned Filcher",
			["npcID"] = 194752,
		},
		[195944] = {
			["npcID"] = 91796,
		},
		[292159] = {
			["encounterName"] = "Blackwater Behemoth",
			["source"] = "Blackwater Behemoth",
			["encounterID"] = 2289,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 150653,
		},
		[391855] = {
			["npcID"] = 183422,
		},
		[418476] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Illidan Stormrage",
			["npcID"] = 205306,
		},
		[330423] = {
			["npcID"] = 168572,
		},
		[340662] = {
			["npcID"] = 172078,
		},
		[391856] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tenmod",
			["npcID"] = 194763,
		},
		[114874] = {
			["npcID"] = 59613,
		},
		[420525] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Urctos",
			["encounterID"] = 2728,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208363,
		},
		[383236] = {
			["npcID"] = 195960,
		},
		[375475] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Juvenile Frost Proto-Dragon",
			["npcID"] = 191222,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[426669] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["npcID"] = 209090,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2786,
		},
		[346807] = {
			["npcID"] = 177852,
		},
		[395941] = {
			["npcID"] = 195969,
		},
		[377488] = {
			["npcID"] = 187155,
		},
		[374451] = {
			["npcID"] = 195919,
		},
		[385383] = {
			["npcID"] = 192699,
		},
		[373429] = {
			["npcID"] = 189878,
		},
		[334522] = {
			["encounterName"] = "Hungering Destroyer",
			["npcID"] = 164261,
			["encounterID"] = 2383,
		},
		[393907] = {
			["npcID"] = 189149,
		},
		[322236] = {
			["encounterName"] = "Stradama Margrave",
			["encounterID"] = 2386,
			["npcID"] = 165430,
		},
		[395351] = {
			["npcID"] = 194210,
		},
		[358307] = {
			["npcID"] = 179913,
		},
		[369335] = {
			["npcID"] = 184107,
		},
		[371383] = {
			["npcID"] = 189229,
		},
		[374192] = {
			["npcID"] = 191696,
		},
		[400052] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Swooping Flayer",
			["npcID"] = 199809,
		},
		[346811] = {
			["npcID"] = 177735,
		},
		[395957] = {
			["npcID"] = 194401,
		},
		[389814] = {
			["npcID"] = 189955,
		},
		[350907] = {
			["npcID"] = 177791,
		},
		[393787] = {
			["npcID"] = 192761,
		},
		[374797] = {
			["npcID"] = 189373,
		},
		[357684] = {
			["npcID"] = 178855,
		},
		[367290] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[388747] = {
			["npcID"] = 193699,
		},
		[346813] = {
			["npcID"] = 152905,
		},
		[345397] = {
			["encounterName"] = "Shriekwing",
			["npcID"] = 164406,
			["encounterID"] = 2398,
		},
		[400055] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scavenging Slicer",
			["npcID"] = 203384,
		},
		[147826] = {
			["npcID"] = 73167,
		},
		[382555] = {
			["npcID"] = 185529,
		},
		[199726] = {
			["npcID"] = 97083,
		},
		[389040] = {
			["npcID"] = 192769,
		},
		[397907] = {
			["npcID"] = 104274,
		},
		[292910] = {
			["npcID"] = 168002,
		},
		[400057] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Volcanic Deepstrider",
			["npcID"] = 200808,
		},
		[359102] = {
			["npcID"] = 176533,
		},
		[377532] = {
			["npcID"] = 191057,
		},
		[392682] = {
			["npcID"] = 188447,
		},
		[225635] = {
			["npcID"] = 120721,
		},
		[375485] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Dragonspawn Flamebender",
			["npcID"] = 191230,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[320196] = {
			["npcID"] = 172604,
		},
		[330435] = {
			["npcID"] = 165830,
		},
		[397014] = {
			["npcID"] = 197146,
		},
		[157043] = {
			["npcID"] = 77130,
		},
		[214692] = {
			["npcID"] = 107435,
		},
		[412346] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Corsair",
			["npcID"] = 126928,
		},
		[324293] = {
			["npcID"] = 165919,
		},
		[398012] = {
			["npcID"] = 191093,
		},
		[382620] = {
			["npcID"] = 185534,
		},
		[388623] = {
			["encounterName"] = "Overgrown Ancient",
			["npcID"] = 196482,
			["encounterID"] = 2563,
		},
		[397043] = {
			["npcID"] = 199029,
		},
		[391870] = {
			["npcID"] = 191696,
		},
		[395855] = {
			["npcID"] = 195974,
		},
		[330438] = {
			["npcID"] = 153174,
		},
		[391871] = {
			["npcID"] = 197820,
		},
		[350916] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 179269,
		},
		[320200] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 162689,
		},
		[395967] = {
			["npcID"] = 197123,
		},
		[340678] = {
			["npcID"] = 172079,
		},
		[400063] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Underlight Queen",
			["npcID"] = 203593,
		},
		[426684] = {
			["source"] = "Naz'jar Ravager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 212673,
		},
		[398634] = {
			["source"] = "Irontide Crackshot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200852,
		},
		[332431] = {
			["npcID"] = 175708,
		},
		[336584] = {
			["npcID"] = 164476,
		},
		[50276] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rowdy Warlock",
			["npcID"] = 199252,
		},
		[154623] = {
			["npcID"] = 77131,
		},
		[227339] = {
			["encounterName"] = "Attumen the Huntsman",
			["encounterID"] = 1960,
			["npcID"] = 114264,
		},
		[350919] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 176563,
		},
		[344776] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 175205,
			["encounterID"] = 2407,
		},
		[404161] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Drakan",
			["npcID"] = 199139,
		},
		[334538] = {
			["npcID"] = 171422,
		},
		[400066] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Preying Dustmoth",
			["npcID"] = 201068,
		},
		[395479] = {
			["npcID"] = 194210,
		},
		[198962] = {
			["npcID"] = 96664,
		},
		[406210] = {
			["source"] = "Sundered Naturalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201746,
		},
		[206641] = {
			["encounterName"] = "Trilliax",
			["encounterID"] = 1867,
			["npcID"] = 104288,
		},
		[340683] = {
			["npcID"] = 172079,
		},
		[200050] = {
			["encounterName"] = "Shade of Xavius",
			["source"] = "Shade of Xavius",
			["encounterID"] = 1839,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 99192,
		},
		[174453] = {
			["npcID"] = 131558,
		},
		[350922] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 179269,
		},
		[46181] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Apoko",
			["npcID"] = 24553,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1895,
		},
		[338636] = {
			["npcID"] = 167731,
		},
		[365257] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["encounterID"] = 2539,
			["npcID"] = 182071,
		},
		[387783] = {
			["npcID"] = 192045,
		},
		[398631] = {
			["source"] = "Irontide Crackshot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200852,
		},
		[338637] = {
			["npcID"] = 173134,
		},
		[376356] = {
			["npcID"] = 190025,
		},
		[334542] = {
			["npcID"] = 171422,
		},
		[320208] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 164578,
		},
		[338638] = {
			["npcID"] = 173134,
		},
		[331550] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["npcID"] = 170197,
			["encounterID"] = 2406,
		},
		[384296] = {
			["npcID"] = 196913,
		},
		[328400] = {
			["npcID"] = 164737,
		},
		[338639] = {
			["npcID"] = 173134,
		},
		[406215] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Un'Gorian Diemetradon",
			["npcID"] = 205856,
		},
		[394891] = {
			["npcID"] = 196855,
		},
		[285388] = {
			["encounterName"] = "Tussle Tonks",
			["encounterID"] = 2257,
			["npcID"] = 145185,
		},
		[152954] = {
			["encounterName"] = "Vigilant Kaathar",
			["npcID"] = 75839,
			["encounterID"] = 1686,
		},
		[29492] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Phantom Guest",
			["npcID"] = 16409,
		},
		[424646] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flametouched Enforcer",
			["npcID"] = 210150,
		},
		[412360] = {
			["source"] = "Spinmarrow",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203480,
		},
		[346832] = {
			["npcID"] = 176262,
		},
		[395214] = {
			["npcID"] = 186859,
		},
		[228278] = {
			["npcID"] = 114633,
		},
		[35943] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Murkblood Healer",
			["npcID"] = 17730,
		},
		[264923] = {
			["encounterName"] = "Raal the Gluttonous",
			["source"] = "Raal the Gluttonous",
			["encounterID"] = 2115,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131863,
		},
		[164218] = {
			["npcID"] = 81407,
		},
		[383693] = {
			["npcID"] = 192794,
		},
		[369359] = {
			["npcID"] = 189515,
		},
		[157051] = {
			["npcID"] = 77889,
		},
		[332500] = {
			["npcID"] = 173582,
		},
		[361169] = {
			["npcID"] = 182466,
		},
		[84165] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Iron Golem",
			["npcID"] = 42008,
		},
		[330453] = {
			["npcID"] = 159575,
		},
		[162171] = {
			["encounterName"] = "Rocketspark and Borka",
			["encounterID"] = 1715,
			["npcID"] = 77803,
		},
		[400077] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Deeplung Glowsplasher",
			["npcID"] = 204013,
		},
		[361170] = {
			["npcID"] = 182523,
		},
		[393731] = {
			["npcID"] = 187505,
		},
		[342741] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 172858,
			["encounterID"] = 2417,
		},
		[400078] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Deeplung Glowsplasher",
			["npcID"] = 204013,
		},
		[290097] = {
			["npcID"] = 144570,
		},
		[200637] = {
			["encounterName"] = "Dargrul the Underking",
			["npcID"] = 91007,
			["encounterID"] = 1793,
		},
		[412366] = {
			["source"] = "Subterrax",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203662,
		},
		[204151] = {
			["encounterName"] = "Tirathon Saltheril",
			["npcID"] = 95885,
			["encounterID"] = 1815,
		},
		[336601] = {
			["npcID"] = 164476,
		},
		[157053] = {
			["npcID"] = 77890,
		},
		[279264] = {
			["npcID"] = 176434,
		},
		[330458] = {
			["npcID"] = 151331,
		},
		[393937] = {
			["npcID"] = 189149,
		},
		[330457] = {
			["npcID"] = 165830,
		},
		[167589] = {
			["encounterName"] = "Nitrogg Thundertower",
			["encounterID"] = 1732,
			["npcID"] = 79548,
		},
		[169341] = {
			["npcID"] = 83765,
		},
		[369365] = {
			["npcID"] = 184132,
		},
		[412368] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Underlight Queen",
			["npcID"] = 203593,
		},
		[395987] = {
			["npcID"] = 199182,
		},
		[264931] = {
			["encounterName"] = "Raal the Gluttonous",
			["source"] = "Raal the Gluttonous",
			["encounterID"] = 2115,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131863,
		},
		[328411] = {
			["npcID"] = 178287,
		},
		[404178] = {
			["source"] = "Veltrax",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200904,
		},
		[384291] = {
			["npcID"] = 196913,
		},
		[89798] = {
			["npcID"] = 49799,
		},
		[406227] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Rionthus",
			["encounterID"] = 2693,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200918,
		},
		[422611] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["encounterID"] = 2731,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208445,
		},
		[357081] = {
			["npcID"] = 176956,
		},
		[357085] = {
			["npcID"] = 176959,
		},
		[328413] = {
			["npcID"] = 161480,
		},
		[412371] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Underlight Queen",
			["npcID"] = 203593,
		},
		[357082] = {
			["npcID"] = 178733,
		},
		[257397] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Bonesaw",
			["npcID"] = 129788,
		},
		[328414] = {
			["npcID"] = 165270,
		},
		[338653] = {
			["npcID"] = 173044,
		},
		[357083] = {
			["npcID"] = 180864,
		},
		[334558] = {
			["npcID"] = 171448,
		},
		[322274] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["encounterID"] = 2390,
			["npcID"] = 164815,
		},
		[395991] = {
			["npcID"] = 197221,
		},
		[357084] = {
			["npcID"] = 180379,
		},
		[391896] = {
			["npcID"] = 196647,
		},
		[361180] = {
			["npcID"] = 182150,
		},
		[391898] = {
			["npcID"] = 193969,
		},
		[406231] = {
			["source"] = "Lingering Wrath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201758,
		},
		[342751] = {
			["npcID"] = 171596,
		},
		[353573] = {
			["npcID"] = 179136,
		},
		[202108] = {
			["npcID"] = 90998,
		},
		[422614] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["encounterID"] = 2731,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208445,
		},
		[342752] = {
			["npcID"] = 173633,
		},
		[229753] = {
			["isChanneled"] = true,
			["source"] = "Felborne Sorcerer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 115273,
		},
		[335143] = {
			["npcID"] = 165222,
		},
		[357087] = {
			["npcID"] = 178731,
		},
		[377338] = {
			["npcID"] = 190406,
		},
		[35945] = {
			["npcID"] = 16704,
		},
		[414425] = {
			["encounterName"] = "Igira the Cruel",
			["source"] = "Igira the Cruel",
			["npcID"] = 200926,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2709,
		},
		[194942] = {
			["encounterName"] = "Glazer",
			["encounterID"] = 1817,
			["npcID"] = 95887,
		},
		[318181] = {
			["npcID"] = 172704,
		},
		[237945] = {
			["encounterName"] = "Fury of the God Queen",
			["encounterID"] = 2059,
			["npcID"] = 116484,
		},
		[412378] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Infinite Timebender",
			["npcID"] = 205337,
		},
		[340707] = {
			["npcID"] = 172084,
		},
		[373194] = {
			["npcID"] = 187432,
		},
		[46184] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Zelfan",
			["npcID"] = 24556,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1895,
		},
		[152964] = {
			["npcID"] = 75652,
		},
		[381663] = {
			["npcID"] = 193291,
		},
		[351912] = {
			["npcID"] = 178366,
		},
		[339801] = {
			["npcID"] = 166046,
		},
		[157348] = {
			["npcID"] = 77942,
		},
		[357091] = {
			["npcID"] = 178731,
		},
		[391903] = {
			["npcID"] = 190171,
		},
		[385046] = {
			["npcID"] = 186242,
		},
		[330471] = {
			["npcID"] = 153174,
		},
		[285995] = {
			["encounterName"] = "Opulence",
			["source"] = "Opulence",
			["encounterID"] = 2271,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 145261,
		},
		[334567] = {
			["npcID"] = 171448,
		},
		[279278] = {
			["npcID"] = 185119,
		},
		[322281] = {
			["npcID"] = 172055,
		},
		[396001] = {
			["npcID"] = 59553,
		},
		[76634] = {
			["source"] = "Tainted Sentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40925,
		},
		[361189] = {
			["npcID"] = 182152,
		},
		[428765] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tindral Sageswift",
			["npcID"] = 209090,
		},
		[340712] = {
			["npcID"] = 162697,
		},
		[412383] = {
			["source"] = "Colossian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204093,
		},
		[387410] = {
			["npcID"] = 186219,
		},
		[35946] = {
			["source"] = "Coilskar Witch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24696,
		},
		[373477] = {
			["npcID"] = 190193,
		},
		[391907] = {
			["npcID"] = 197850,
		},
		[418528] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Illidan Stormrage",
			["npcID"] = 205306,
		},
		[355048] = {
			["npcID"] = 178139,
		},
		[331044] = {
			["npcID"] = 169050,
		},
		[372538] = {
			["npcID"] = 189470,
		},
		[9532] = {
			["npcID"] = 3273,
		},
		[355049] = {
			["npcID"] = 176535,
		},
		[281329] = {
			["encounterName"] = "Council o' Captains",
			["event"] = "SPELL_CAST_START",
			["source"] = "Captain Jolly",
			["npcID"] = 126845,
		},
		[192563] = {
			["npcID"] = 97197,
		},
		[328429] = {
			["npcID"] = 168022,
		},
		[355050] = {
			["npcID"] = 176956,
		},
		[332525] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 171396,
		},
		[391910] = {
			["npcID"] = 187353,
		},
		[418531] = {
			["encounterName"] = "Igira the Cruel",
			["source"] = "Igira the Cruel",
			["npcID"] = 200926,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2709,
		},
		[412388] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Underlight Queen",
			["npcID"] = 203593,
		},
		[332526] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 171396,
		},
		[285428] = {
			["encounterName"] = "Jadefire Masters",
			["source"] = "Anathos Firecaller",
			["encounterID"] = 2285,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 144692,
		},
		[111600] = {
			["encounterName"] = "Raigonn",
			["npcID"] = 56930,
			["encounterID"] = 1419,
		},
		[330479] = {
			["npcID"] = 170417,
		},
		[396007] = {
			["npcID"] = 59553,
		},
		[391912] = {
			["npcID"] = 197853,
		},
		[33643] = {
			["npcID"] = 18969,
		},
		[66254] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Malaka'jin Witch Doctor",
			["npcID"] = 34807,
		},
		[373483] = {
			["npcID"] = 187263,
		},
		[391913] = {
			["npcID"] = 187752,
		},
		[426725] = {
			["encounterName"] = "Smolderon",
			["source"] = "Smolderon",
			["npcID"] = 200927,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2824,
		},
		[113141] = {
			["encounterName"] = "Darkmaster Gandling",
			["npcID"] = 59080,
			["encounterID"] = 1430,
		},
		[357102] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176533,
		},
		[237952] = {
			["encounterName"] = "Fury of the God Queen",
			["encounterID"] = 2059,
			["npcID"] = 116496,
		},
		[320243] = {
			["npcID"] = 166425,
		},
		[355055] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 176929,
		},
		[256382] = {
			["npcID"] = 127807,
		},
		[391915] = {
			["npcID"] = 191661,
		},
		[322936] = {
			["encounterName"] = "Halkias, the Sin-Stained Goliath",
			["encounterID"] = 2401,
			["npcID"] = 165408,
		},
		[317284] = {
			["npcID"] = 162880,
		},
		[365295] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 181954,
		},
		[342770] = {
			["npcID"] = 173604,
		},
		[394948] = {
			["npcID"] = 192344,
		},
		[346866] = {
			["npcID"] = 174175,
		},
		[236537] = {
			["npcID"] = 118065,
		},
		[326389] = {
			["encounterName"] = "Echelon",
			["encounterID"] = 2380,
			["npcID"] = 164185,
		},
		[328437] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[194951] = {
			["source"] = "Scarlet Siegemaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211937,
		},
		[389870] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["npcID"] = 197145,
			["encounterID"] = 2607,
		},
		[382542] = {
			["npcID"] = 186391,
		},
		[355613] = {
			["npcID"] = 178958,
		},
		[338677] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 173161,
			["encounterID"] = 2407,
		},
		[365298] = {
			["npcID"] = 185181,
		},
		[365299] = {
			["npcID"] = 185181,
		},
		[426731] = {
			["source"] = "Naz'jar Oracle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 41096,
		},
		[114516] = {
			["npcID"] = 59527,
		},
		[381681] = {
			["npcID"] = 189382,
		},
		[326392] = {
			["npcID"] = 172041,
		},
		[365851] = {
			["npcID"] = 183404,
		},
		[404207] = {
			["source"] = "Monstrous Magmaclaw Snapper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204214,
		},
		[259732] = {
			["encounterName"] = "Sporecaller Zancha",
			["source"] = "Sporecaller Zancha",
			["encounterID"] = 2112,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131383,
		},
		[387826] = {
			["npcID"] = 195878,
		},
		[410351] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Warlord Kagni",
			["encounterID"] = 2682,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199659,
		},
		[404208] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Duros",
			["npcID"] = 199138,
		},
		[381683] = {
			["npcID"] = 192791,
		},
		[404209] = {
			["source"] = "Veltrax",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200904,
		},
		[365850] = {
			["npcID"] = 181652,
		},
		[396018] = {
			["npcID"] = 59552,
		},
		[389875] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["npcID"] = 189729,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2618,
		},
		[285440] = {
			["encounterName"] = "Machinist's Garden",
			["encounterID"] = 2259,
			["npcID"] = 144248,
		},
		[355063] = {
			["npcID"] = 178623,
		},
		[9053] = {
			["npcID"] = 3269,
		},
		[357112] = {
			["npcID"] = 177831,
		},
		[396019] = {
			["npcID"] = 59545,
		},
		[369399] = {
			["npcID"] = 186420,
		},
		[412402] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flowfy",
			["npcID"] = 203660,
		},
		[199050] = {
			["npcID"] = 95832,
		},
		[369400] = {
			["npcID"] = 184132,
		},
		[361209] = {
			["npcID"] = 182466,
		},
		[338684] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 173162,
			["encounterID"] = 2407,
		},
		[412403] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Eternal Blaze",
			["npcID"] = 201773,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2687,
		},
		[404756] = {
			["source"] = "Sundered Flame Flamespinner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203619,
		},
		[271652] = {
			["npcID"] = 164334,
		},
		[395936] = {
			["npcID"] = 195969,
		},
		[240006] = {
			["npcID"] = 182863,
		},
		[326399] = {
			["npcID"] = 185021,
		},
		[361211] = {
			["npcID"] = 182161,
		},
		[396023] = {
			["encounterName"] = "Eranog",
			["encounterID"] = 2587,
			["npcID"] = 184972,
		},
		[194956] = {
			["encounterName"] = "Amalgam of Souls",
			["npcID"] = 98542,
			["encounterID"] = 1832,
		},
		[355069] = {
			["npcID"] = 178661,
		},
		[377594] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["npcID"] = 189492,
			["encounterID"] = 2607,
		},
		[330496] = {
			["npcID"] = 155250,
		},
		[338686] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 173163,
			["encounterID"] = 2407,
		},
		[375547] = {
			["npcID"] = 191286,
		},
		[426741] = {
			["source"] = "Naz'jar Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40577,
		},
		[355070] = {
			["npcID"] = 178625,
		},
		[404216] = {
			["source"] = "Lieutenant Narlena",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202244,
		},
		[359704] = {
			["npcID"] = 181626,
		},
		[406802] = {
			["source"] = "Cavern Flayer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202307,
		},
		[412408] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Field Despair Bot K156",
			["npcID"] = 205612,
		},
		[153247] = {
			["encounterName"] = "Roltall",
			["npcID"] = 75786,
			["encounterID"] = 1652,
		},
		[337178] = {
			["npcID"] = 170838,
		},
		[387151] = {
			["encounterName"] = "Telash Greywing",
			["npcID"] = 186737,
			["encounterID"] = 2583,
		},
		[355072] = {
			["npcID"] = 178628,
		},
		[340738] = {
			["npcID"] = 167848,
		},
		[414992] = {
			["source"] = "Burning Flamespeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205138,
		},
		[199805] = {
			["npcID"] = 96574,
		},
		[330500] = {
			["npcID"] = 185022,
		},
		[381694] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Gashtooth",
			["encounterID"] = 2570,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186124,
		},
		[372800] = {
			["npcID"] = 187125,
		},
		[343320] = {
			["npcID"] = 173444,
		},
		[355074] = {
			["npcID"] = 178628,
		},
		[198024] = {
			["encounterName"] = "Rokmora",
			["source"] = "Rokmora",
			["npcID"] = 91003,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1790,
		},
		[404220] = {
			["source"] = "Lieutenant Narlena",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202244,
		},
		[369409] = {
			["npcID"] = 184130,
		},
		[384474] = {
			["npcID"] = 187826,
		},
		[357123] = {
			["npcID"] = 180779,
		},
		[87761] = {
			["source"] = "Executor of the Caliph",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45928,
		},
		[198496] = {
			["encounterName"] = "Ularogg Cragshaper",
			["npcID"] = 91004,
			["encounterID"] = 1791,
		},
		[412413] = {
			["source"] = "Skornak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203643,
		},
		[357124] = {
			["npcID"] = 180780,
		},
		[310026] = {
			["npcID"] = 166159,
		},
		[369411] = {
			["npcID"] = 184301,
		},
		[412414] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Professor Gastrinax",
			["npcID"] = 203521,
		},
		[357125] = {
			["npcID"] = 176879,
		},
		[326409] = {
			["npcID"] = 164557,
		},
		[232084] = {
			["npcID"] = 116549,
		},
		[387559] = {
			["encounterName"] = "Primal Tsunami",
			["npcID"] = 189729,
			["encounterID"] = 2618,
		},
		[414463] = {
			["source"] = "MR-7 Tangler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205824,
		},
		[22907] = {
			["npcID"] = 16704,
		},
		[328458] = {
			["npcID"] = 168844,
		},
		[387843] = {
			["npcID"] = 196202,
		},
		[391939] = {
			["npcID"] = 189206,
		},
		[87762] = {
			["source"] = "Minister of Air",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45930,
		},
		[44141] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ellrys Duskhallow",
			["npcID"] = 24558,
		},
		[193938] = {
			["npcID"] = 98425,
		},
		[357128] = {
			["npcID"] = 176879,
		},
		[342794] = {
			["npcID"] = 174070,
		},
		[395859] = {
			["npcID"] = 59555,
		},
		[255371] = {
			["encounterName"] = "Rezan",
			["source"] = "Rezan",
			["encounterID"] = 2086,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122963,
		},
		[414466] = {
			["source"] = "MR-7 Gutcutter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204515,
		},
		[396559] = {
			["npcID"] = 199031,
		},
		[369416] = {
			["npcID"] = 186883,
		},
		[329383] = {
			["npcID"] = 178013,
		},
		[153395] = {
			["npcID"] = 76057,
		},
		[332550] = {
			["npcID"] = 169875,
		},
		[377608] = {
			["npcID"] = 190938,
		},
		[373513] = {
			["npcID"] = 190128,
		},
		[414468] = {
			["source"] = "MR-7 Shadowflipper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205825,
		},
		[340750] = {
			["npcID"] = 167548,
		},
		[377609] = {
			["npcID"] = 185594,
		},
		[343316] = {
			["npcID"] = 173446,
		},
		[324368] = {
			["encounterName"] = "Kin-Tara",
			["npcID"] = 163077,
			["encounterID"] = 2357,
		},
		[391944] = {
			["npcID"] = 197847,
		},
		[387849] = {
			["encounterName"] = "Dathea, Ascended",
			["npcID"] = 189813,
			["encounterID"] = 2635,
		},
		[396040] = {
			["encounterName"] = "Eranog",
			["source"] = "Flamescale Captain",
			["encounterID"] = 2587,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199233,
		},
		[404748] = {
			["source"] = "Navigator Bi-Yun",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201184,
		},
		[200084] = {
			["npcID"] = 98366,
		},
		[344847] = {
			["npcID"] = 178226,
		},
		[193941] = {
			["npcID"] = 98406,
		},
		[389898] = {
			["npcID"] = 196992,
		},
		[255373] = {
			["encounterName"] = "Rezan",
			["source"] = "Rezan",
			["encounterID"] = 2086,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122963,
		},
		[377612] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["npcID"] = 189492,
			["encounterID"] = 2607,
		},
		[164187] = {
			["npcID"] = 81407,
		},
		[357135] = {
			["npcID"] = 180387,
		},
		[310037] = {
			["npcID"] = 172048,
		},
		[194966] = {
			["encounterName"] = "Amalgam of Souls",
			["npcID"] = 98542,
			["encounterID"] = 1832,
		},
		[289560] = {
			["encounterName"] = "Conclave of the Chosen",
			["source"] = "Kimbul's Aspect",
			["encounterID"] = 2268,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 144963,
		},
		[406282] = {
			["source"] = "Sundered Naturalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201746,
		},
		[391948] = {
			["npcID"] = 191682,
		},
		[369423] = {
			["npcID"] = 184303,
		},
		[396044] = {
			["encounterName"] = "Melidrussa Chillworn",
			["npcID"] = 188252,
			["encounterID"] = 2609,
		},
		[371983] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["source"] = "Sennarth",
			["encounterID"] = 2592,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187967,
		},
		[410890] = {
			["source"] = "Infinite Warder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205259,
		},
		[361233] = {
			["npcID"] = 182158,
		},
		[355090] = {
			["npcID"] = 178628,
		},
		[414475] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Greaves",
			["npcID"] = 207278,
		},
		[205862] = {
			["encounterName"] = "Krosus",
			["encounterID"] = 1842,
			["npcID"] = 101002,
		},
		[393998] = {
			["npcID"] = 189149,
		},
		[414473] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Greaves",
			["npcID"] = 207278,
		},
		[414476] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Greaves",
			["npcID"] = 207278,
		},
		[310041] = {
			["npcID"] = 166159,
		},
		[151965] = {
			["npcID"] = 75191,
		},
		[361230] = {
			["npcID"] = 182561,
		},
		[332567] = {
			["npcID"] = 170228,
		},
		[414477] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Greaves",
			["npcID"] = 207278,
		},
		[241043] = {
			["npcID"] = 120808,
		},
		[412430] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gastrite",
			["npcID"] = 205801,
		},
		[340759] = {
			["npcID"] = 167702,
		},
		[400144] = {
			["source"] = "Vraken the Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200584,
		},
		[250258] = {
			["encounterName"] = "Vol'kaal",
			["source"] = "Vol'kaal",
			["encounterID"] = 2085,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122965,
		},
		[377619] = {
			["npcID"] = 46859,
		},
		[332569] = {
			["npcID"] = 156559,
		},
		[331026] = {
			["npcID"] = 160185,
		},
		[336666] = {
			["npcID"] = 166012,
		},
		[273185] = {
			["npcID"] = 150251,
		},
		[357143] = {
			["npcID"] = 178646,
		},
		[257426] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Enforcer",
			["npcID"] = 129602,
		},
		[385812] = {
			["encounterName"] = "Dathea, Ascended",
			["npcID"] = 192934,
			["encounterID"] = 2635,
		},
		[177564] = {
			["npcID"] = 177586,
		},
		[373526] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brightail Monarch",
			["npcID"] = 191458,
		},
		[426768] = {
			["source"] = "Naz'jar Tempest Witch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40634,
		},
		[221591] = {
			["npcID"] = 111164,
		},
		[406792] = {
			["source"] = "Monstrous Magmaclaw Snapper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204214,
		},
		[193585] = {
			["npcID"] = 102232,
		},
		[375575] = {
			["encounterName"] = "Broodkeeper Diurna",
			["npcID"] = 191230,
			["encounterID"] = 2614,
		},
		[418578] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Illidan Stormrage",
			["npcID"] = 205306,
		},
		[355910] = {
			["npcID"] = 178666,
		},
		[357146] = {
			["npcID"] = 177938,
		},
		[391958] = {
			["npcID"] = 194159,
		},
		[294165] = {
			["npcID"] = 150958,
		},
		[354250] = {
			["npcID"] = 179434,
		},
		[237947] = {
			["encounterName"] = "Fury of the God Queen",
			["encounterID"] = 2059,
			["npcID"] = 116499,
		},
		[391959] = {
			["npcID"] = 195846,
		},
		[357144] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["npcID"] = 180323,
			["encounterID"] = 2431,
		},
		[111813] = {
			["npcID"] = 58822,
		},
		[381721] = {
			["npcID"] = 3269,
		},
		[365835] = {
			["npcID"] = 183407,
		},
		[215433] = {
			["npcID"] = 95834,
		},
		[32011] = {
			["npcID"] = 45618,
		},
		[256405] = {
			["encounterName"] = "Ring of Booty",
			["source"] = "Trothak",
			["npcID"] = 126969,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2095,
		},
		[375579] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Acolyte",
			["npcID"] = 190716,
		},
		[376073] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190245,
		},
		[322232] = {
			["encounterName"] = "Stradama Margrave",
			["encounterID"] = 2386,
			["npcID"] = 164267,
		},
		[334625] = {
			["encounterName"] = "Devos, Paragon of Loyalty",
			["npcID"] = 162061,
			["encounterID"] = 2359,
		},
		[318243] = {
			["npcID"] = 166357,
		},
		[375580] = {
			["encounterName"] = "Dathea, Ascended",
			["npcID"] = 189813,
			["encounterID"] = 2635,
		},
		[265002] = {
			["encounterName"] = "Raal the Gluttonous",
			["source"] = "Raal the Gluttonous",
			["npcID"] = 131863,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2115,
		},
		[324387] = {
			["npcID"] = 165197,
		},
		[320171] = {
			["encounterName"] = "Amarth, The Harvester",
			["encounterID"] = 2388,
			["npcID"] = 163157,
		},
		[396659] = {
			["npcID"] = 192534,
		},
		[428823] = {
			["encounterName"] = "Yalnu",
			["source"] = "Yalnu",
			["encounterID"] = 1756,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83846,
		},
		[72922] = {
			["npcID"] = 38940,
		},
		[293670] = {
			["npcID"] = 144299,
		},
		[320293] = {
			["encounterName"] = "An Affront of Challengers",
			["encounterID"] = 2391,
			["npcID"] = 164461,
		},
		[330532] = {
			["npcID"] = 164510,
		},
		[207261] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["npcID"] = 104215,
			["encounterID"] = 1868,
		},
		[241049] = {
			["npcID"] = 120808,
		},
		[374361] = {
			["encounterName"] = "Echo of Doragosa",
			["npcID"] = 190609,
			["encounterID"] = 2565,
		},
		[193951] = {
			["npcID"] = 97677,
		},
		[183378] = {
			["npcID"] = 127596,
		},
		[393439] = {
			["npcID"] = 193790,
		},
		[339717] = {
			["npcID"] = 159496,
		},
		[412444] = {
			["source"] = "Brullo the Strong",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203621,
		},
		[422683] = {
			["source"] = "Oxis of Fire",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210319,
		},
		[359203] = {
			["npcID"] = 184059,
		},
		[369442] = {
			["npcID"] = 193258,
		},
		[352223] = {
			["npcID"] = 176578,
		},
		[196242] = {
			["npcID"] = 99649,
		},
		[365831] = {
			["npcID"] = 182357,
		},
		[147878] = {
			["npcID"] = 72888,
		},
		[385757] = {
			["npcID"] = 195303,
		},
		[422685] = {
			["source"] = "Oxis of Fire",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210319,
		},
		[326441] = {
			["npcID"] = 164557,
		},
		[335473] = {
			["encounterName"] = "Sludgefist",
			["npcID"] = 164407,
			["encounterID"] = 2399,
		},
		[400642] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["source"] = "Tyr, the Infinite Keeper",
			["encounterID"] = 2670,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198998,
		},
		[324394] = {
			["npcID"] = 165197,
		},
		[418591] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Pip",
			["encounterID"] = 2728,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208367,
		},
		[34930] = {
			["npcID"] = 18331,
		},
		[412448] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Deepflayer Broodmatron",
			["npcID"] = 200115,
		},
		[364447] = {
			["encounterName"] = "Vigilant Guardian",
			["encounterID"] = 2512,
			["npcID"] = 184522,
		},
		[426783] = {
			["source"] = "Faceless Seer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 212775,
		},
		[320300] = {
			["encounterName"] = "An Affront of Challengers",
			["encounterID"] = 2391,
			["npcID"] = 164461,
		},
		[375587] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Acolyte",
			["npcID"] = 190716,
		},
		[374020] = {
			["npcID"] = 190342,
		},
		[323640] = {
			["npcID"] = 165473,
		},
		[147880] = {
			["npcID"] = 72888,
		},
		[404259] = {
			["source"] = "Pyrachniss",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200978,
		},
		[381408] = {
			["npcID"] = 192591,
		},
		[375591] = {
			["npcID"] = 191313,
		},
		[344875] = {
			["npcID"] = 171317,
		},
		[396069] = {
			["npcID"] = 191095,
		},
		[318255] = {
			["npcID"] = 166576,
		},
		[400165] = {
			["source"] = "Infinite Twilight Magus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201223,
		},
		[147881] = {
			["npcID"] = 72888,
		},
		[414974] = {
			["source"] = "Blazing Overseer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205140,
		},
		[422691] = {
			["encounterName"] = "Smolderon",
			["source"] = "Smolderon",
			["npcID"] = 200927,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2824,
		},
		[200099] = {
			["isChanneled"] = true,
			["source"] = "Ghostly Protector",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 98368,
		},
		[201123] = {
			["source"] = "Vilethorn Blossom",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 99360,
		},
		[396071] = {
			["npcID"] = 197142,
		},
		[260508] = {
			["encounterName"] = "Soulbound Goliath",
			["npcID"] = 131667,
			["encounterID"] = 2114,
		},
		[408358] = {
			["encounterName"] = "Magmorax",
			["source"] = "Magmorax",
			["encounterID"] = 2683,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201579,
		},
		[412455] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Alcanon",
			["npcID"] = 203515,
		},
		[265016] = {
			["source"] = "Chosen Blood Matron",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131436,
		},
		[422693] = {
			["source"] = "Oxis of Fire",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210319,
		},
		[420647] = {
			["source"] = "Ashendir Hartwood",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211258,
		},
		[303924] = {
			["npcID"] = 155911,
		},
		[355118] = {
			["npcID"] = 178133,
		},
		[316212] = {
			["npcID"] = 170953,
		},
		[326450] = {
			["npcID"] = 164562,
		},
		[34931] = {
			["npcID"] = 18331,
		},
		[173480] = {
			["npcID"] = 83389,
		},
		[373549] = {
			["npcID"] = 189614,
		},
		[377559] = {
			["encounterName"] = "Treemouth",
			["encounterID"] = 2568,
			["npcID"] = 186120,
		},
		[124072] = {
			["npcID"] = 63592,
		},
		[265019] = {
			["npcID"] = 131436,
		},
		[422696] = {
			["source"] = "Avius Flamebeak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210305,
		},
		[250505] = {
			["npcID"] = 193154,
		},
		[356139] = {
			["npcID"] = 178043,
		},
		[301075] = {
			["npcID"] = 165167,
		},
		[414506] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Verdant Dream Raven",
			["npcID"] = 211372,
		},
		[81008] = {
			["npcID"] = 185126,
		},
		[369921] = {
			["npcID"] = 195448,
		},
		[322358] = {
			["encounterName"] = "Doctor Ickus",
			["encounterID"] = 2384,
			["npcID"] = 164967,
		},
		[381519] = {
			["npcID"] = 191047,
		},
		[391982] = {
			["npcID"] = 189538,
		},
		[221604] = {
			["npcID"] = 111164,
		},
		[355123] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["npcID"] = 175729,
			["encounterID"] = 2432,
		},
		[422699] = {
			["source"] = "Phebis of the Burning Sea",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210306,
		},
		[326455] = {
			["encounterName"] = "Sun King's Salvation",
			["npcID"] = 165805,
			["encounterID"] = 2402,
		},
		[308026] = {
			["npcID"] = 157634,
		},
		[289596] = {
			["source"] = "7th Legion Cavalier",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 147828,
		},
		[357172] = {
			["npcID"] = 178575,
		},
		[227736] = {
			["encounterName"] = "Moroes",
			["encounterID"] = 1961,
			["npcID"] = 114312,
		},
		[418605] = {
			["source"] = "Future Self",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208887,
		},
		[115418] = {
			["npcID"] = 59801,
		},
		[316218] = {
			["npcID"] = 169476,
		},
		[271628] = {
			["npcID"] = 164334,
		},
		[376063] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Smoldering Hellion",
			["encounterID"] = 2605,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191510,
		},
		[330553] = {
			["npcID"] = 178979,
		},
		[365365] = {
			["npcID"] = 185312,
		},
		[400177] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Zaqali Flamewalker",
			["npcID"] = 199826,
		},
		[359222] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 176561,
		},
		[355127] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 176929,
			["encounterID"] = 2422,
		},
		[412922] = {
			["source"] = "Spurlok, Timesworn Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205158,
		},
		[200105] = {
			["npcID"] = 98368,
		},
		[352348] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
		},
		[379406] = {
			["npcID"] = 189472,
		},
		[130265] = {
			["npcID"] = 66291,
		},
		[228637] = {
			["npcID"] = 114802,
		},
		[264150] = {
			["npcID"] = 131858,
		},
		[396084] = {
			["npcID"] = 190933,
		},
		[320772] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["encounterID"] = 2390,
			["npcID"] = 162693,
		},
		[9613] = {
			["npcID"] = 116409,
		},
		[394037] = {
			["npcID"] = 187036,
		},
		[303159] = {
			["npcID"] = 155435,
		},
		[332605] = {
			["npcID"] = 170572,
		},
		[334653] = {
			["npcID"] = 165076,
		},
		[369465] = {
			["npcID"] = 186420,
		},
		[370615] = {
			["encounterName"] = "Eranog",
			["encounterID"] = 2587,
			["npcID"] = 184972,
		},
		[161150] = {
			["npcID"] = 80936,
		},
		[326463] = {
			["npcID"] = 179405,
		},
		[262983] = {
			["source"] = "Azsh'ari Stormbinder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 155629,
		},
		[355132] = {
			["npcID"] = 178141,
		},
		[130266] = {
			["npcID"] = 66200,
		},
		[326464] = {
			["npcID"] = 179405,
		},
		[377658] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["npcID"] = 189492,
			["encounterID"] = 2607,
		},
		[381582] = {
			["npcID"] = 184453,
		},
		[324417] = {
			["npcID"] = 162133,
		},
		[271174] = {
			["source"] = "Pallid Gorger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 137830,
		},
		[153234] = {
			["encounterName"] = "Azzakel, Vanguard of the Legion",
			["npcID"] = 75927,
			["encounterID"] = 1678,
		},
		[322370] = {
			["npcID"] = 156473,
		},
		[357086] = {
			["npcID"] = 176959,
		},
		[372701] = {
			["encounterName"] = "Sentinel Talondras",
			["encounterID"] = 2557,
			["npcID"] = 184124,
		},
		[389947] = {
			["npcID"] = 185907,
		},
		[330562] = {
			["npcID"] = 164506,
		},
		[357183] = {
			["npcID"] = 177938,
		},
		[224682] = {
			["source"] = "Scarlet Houndsmaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211882,
		},
		[377661] = {
			["npcID"] = 190216,
		},
		[363772] = {
			["encounterName"] = "The Jailer",
			["npcID"] = 180990,
			["encounterID"] = 2537,
		},
		[389948] = {
			["npcID"] = 191145,
		},
		[427252] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["encounterID"] = 2731,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208445,
		},
		[387504] = {
			["encounterName"] = "Primal Tsunami",
			["npcID"] = 189729,
			["encounterID"] = 2618,
		},
		[228334] = {
			["encounterName"] = "Shade of Medivh",
			["npcID"] = 114350,
			["encounterID"] = 1965,
		},
		[389949] = {
			["npcID"] = 187201,
		},
		[359233] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["encounterID"] = 2529,
			["npcID"] = 181047,
		},
		[394045] = {
			["npcID"] = 195764,
		},
		[346947] = {
			["encounterName"] = "Mailroom Mayhem",
			["encounterID"] = 2424,
			["npcID"] = 175646,
		},
		[149941] = {
			["encounterName"] = "Magmolatus",
			["npcID"] = 74570,
			["encounterID"] = 1655,
		},
		[391998] = {
			["npcID"] = 191403,
		},
		[193164] = {
			["npcID"] = 96657,
		},
		[281420] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bilge Rat Brinescale",
			["npcID"] = 129600,
		},
		[389951] = {
			["source"] = "Strunraan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193534,
		},
		[391999] = {
			["npcID"] = 185445,
		},
		[392451] = {
			["npcID"] = 197985,
		},
		[324425] = {
			["npcID"] = 177211,
		},
		[357188] = {
			["encounterName"] = "So'azmi",
			["encounterID"] = 2437,
			["npcID"] = 175806,
		},
		[359236] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["encounterID"] = 2529,
			["npcID"] = 180906,
		},
		[418621] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aqir Fanatic",
			["npcID"] = 207896,
		},
		[367428] = {
			["npcID"] = 184962,
		},
		[422717] = {
			["source"] = "Phebis of the Burning Sea",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210306,
		},
		[334664] = {
			["npcID"] = 171341,
		},
		[418622] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aqir Scarab",
			["npcID"] = 207910,
		},
		[404288] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[324427] = {
			["encounterName"] = "Oryphrion",
			["npcID"] = 162060,
			["encounterID"] = 2358,
		},
		[351047] = {
			["npcID"] = 178392,
		},
		[34934] = {
			["npcID"] = 18394,
		},
		[420671] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Aerwynn",
			["encounterID"] = 2728,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208365,
		},
		[373573] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sprite Dreamer",
			["npcID"] = 207617,
		},
		[222156] = {
			["npcID"] = 111554,
		},
		[418624] = {
			["source"] = "Klaxxi Assassin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207915,
		},
		[357192] = {
			["npcID"] = 178576,
		},
		[381765] = {
			["npcID"] = 191654,
		},
		[330573] = {
			["npcID"] = 185021,
		},
		[162231] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bladespire Sorcerer",
			["npcID"] = 80071,
		},
		[19645] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wailing Banshee",
			["npcID"] = 10464,
		},
		[199090] = {
			["npcID"] = 96611,
		},
		[424771] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Harbinger of Incineration",
			["npcID"] = 210147,
		},
		[303952] = {
			["npcID"] = 155910,
		},
		[387910] = {
			["npcID"] = 196200,
		},
		[365385] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 184622,
		},
		[392006] = {
			["npcID"] = 186668,
		},
		[412914] = {
			["source"] = "Fragment of Shadow",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205968,
		},
		[330574] = {
			["npcID"] = 161395,
		},
		[398150] = {
			["npcID"] = 76446,
		},
		[87779] = {
			["source"] = "Temple Adept",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45935,
		},
		[201139] = {
			["npcID"] = 98810,
		},
		[346957] = {
			["encounterName"] = "Hylbrande",
			["npcID"] = 175667,
			["encounterID"] = 2426,
		},
		[357196] = {
			["npcID"] = 180336,
		},
		[333423] = {
			["npcID"] = 165175,
		},
		[357197] = {
			["npcID"] = 180336,
		},
		[428868] = {
			["encounterName"] = "Ozumat",
			["source"] = "Ink of Ozumat",
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 213770,
		},
		[381770] = {
			["encounterName"] = "Treemouth",
			["encounterID"] = 2568,
			["npcID"] = 192481,
		},
		[342863] = {
			["encounterName"] = "Shriekwing",
			["npcID"] = 164406,
			["encounterID"] = 2398,
		},
		[406344] = {
			["source"] = "Zaqali Firecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200454,
		},
		[388340] = {
			["npcID"] = 196439,
		},
		[414535] = {
			["encounterName"] = "Iridikron",
			["source"] = "Iridikron",
			["encounterID"] = 2669,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198933,
		},
		[289623] = {
			["source"] = "7th Legion Medic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 147825,
		},
		[398154] = {
			["npcID"] = 75451,
		},
		[412488] = {
			["source"] = "Crawling Goo",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205820,
		},
		[316244] = {
			["npcID"] = 162056,
		},
		[351057] = {
			["encounterName"] = "So'leah",
			["encounterID"] = 2442,
			["npcID"] = 177269,
		},
		[201141] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Wrathguard Bladelord",
			["npcID"] = 98810,
		},
		[396107] = {
			["npcID"] = 194878,
		},
		[340818] = {
			["npcID"] = 165404,
		},
		[375630] = {
			["encounterName"] = "Broodkeeper Diurna",
			["npcID"] = 191232,
			["encounterID"] = 2614,
		},
		[394060] = {
			["npcID"] = 193809,
		},
		[157355] = {
			["npcID"] = 81711,
		},
		[322943] = {
			["encounterName"] = "Halkias, the Sin-Stained Goliath",
			["encounterID"] = 2401,
			["npcID"] = 165408,
		},
		[392013] = {
			["npcID"] = 187036,
		},
		[328533] = {
			["npcID"] = 163862,
		},
		[157652] = {
			["npcID"] = 77694,
		},
		[354367] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["npcID"] = 175730,
			["encounterID"] = 2431,
		},
		[392014] = {
			["npcID"] = 194458,
		},
		[154527] = {
			["npcID"] = 77812,
		},
		[412492] = {
			["source"] = "Brullo the Strong",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203621,
		},
		[383823] = {
			["npcID"] = 192796,
		},
		[342869] = {
			["npcID"] = 168934,
		},
		[358353] = {
			["npcID"] = 179760,
		},
		[147289] = {
			["npcID"] = 72841,
		},
		[329396] = {
			["npcID"] = 178287,
		},
		[361300] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 181546,
		},
		[418637] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["encounterID"] = 2731,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208445,
		},
		[331274] = {
			["npcID"] = 167923,
		},
		[236163] = {
			["npcID"] = 115640,
		},
		[218148] = {
			["encounterName"] = "High Botanist Tel'arn",
			["encounterID"] = 1886,
			["npcID"] = 109038,
		},
		[419052] = {
			["source"] = "Future Self",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208959,
		},
		[340631] = {
			["npcID"] = 173800,
		},
		[204611] = {
			["encounterName"] = "Oakheart",
			["npcID"] = 103344,
			["encounterID"] = 1837,
		},
		[388335] = {
			["npcID"] = 186354,
		},
		[198073] = {
			["encounterName"] = "Smashspite the Hateful",
			["npcID"] = 98949,
			["encounterID"] = 1834,
		},
		[330586] = {
			["npcID"] = 169927,
		},
		[257458] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Harlan Sweete",
			["npcID"] = 126983,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[342873] = {
			["npcID"] = 177589,
		},
		[310969] = {
			["npcID"] = 159011,
		},
		[144832] = {
			["encounterName"] = "Sha of Pride",
			["encounterID"] = 1604,
			["npcID"] = 71734,
		},
		[365399] = {
			["npcID"] = 184804,
		},
		[274968] = {
			["npcID"] = 170414,
		},
		[361304] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 183421,
		},
		[342875] = {
			["npcID"] = 167827,
		},
		[365400] = {
			["npcID"] = 184413,
		},
		[392021] = {
			["source"] = "Mantai",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195286,
		},
		[124085] = {
			["npcID"] = 63593,
		},
		[289635] = {
			["source"] = "7th Legion Medic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 147825,
		},
		[68841] = {
			["source"] = "Apothecary Frye",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36272,
		},
		[196027] = {
			["npcID"] = 97171,
		},
		[361306] = {
			["npcID"] = 182152,
		},
		[346972] = {
			["npcID"] = 179283,
		},
		[324447] = {
			["npcID"] = 177211,
		},
		[334686] = {
			["npcID"] = 162096,
		},
		[168383] = {
			["encounterName"] = "Ancient Protectors",
			["npcID"] = 83894,
			["encounterID"] = 1757,
		},
		[184371] = {
			["npcID"] = 157149,
		},
		[406358] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Neldris",
			["encounterID"] = 2693,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200912,
		},
		[196028] = {
			["npcID"] = 97171,
		},
		[180670] = {
			["npcID"] = 90215,
		},
		[165715] = {
			["npcID"] = 82016,
		},
		[323552] = {
			["encounterName"] = "High Adjudicator Aleez",
			["encounterID"] = 2403,
			["npcID"] = 165410,
		},
		[330593] = {
			["npcID"] = 168724,
		},
		[369500] = {
			["npcID"] = 180906,
		},
		[355166] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["encounterID"] = 2432,
			["npcID"] = 177289,
		},
		[218755] = {
			["isChanneled"] = true,
			["source"] = "Festerhide Grizzly",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 95779,
		},
		[374699] = {
			["npcID"] = 190368,
		},
		[385883] = {
			["npcID"] = 192703,
		},
		[198077] = {
			["encounterName"] = "Odyn",
			["encounterID"] = 1809,
			["npcID"] = 95676,
		},
		[385419] = {
			["npcID"] = 192703,
		},
		[218954] = {
			["npcID"] = 165094,
		},
		[361313] = {
			["npcID"] = 182666,
		},
		[412505] = {
			["source"] = "Tyr's Vanguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205151,
		},
		[398171] = {
			["source"] = "Senegos",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199923,
		},
		[351073] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["npcID"] = 175729,
			["encounterID"] = 2432,
		},
		[198079] = {
			["encounterName"] = "Smashspite the Hateful",
			["source"] = "Smashspite the Hateful",
			["encounterID"] = 1834,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 98949,
		},
		[371551] = {
			["npcID"] = 187551,
		},
		[398172] = {
			["source"] = "Stellagosa",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200099,
		},
		[359265] = {
			["npcID"] = 185415,
		},
		[320358] = {
			["encounterName"] = "Stichflesh",
			["npcID"] = 162689,
			["encounterID"] = 2389,
		},
		[330597] = {
			["npcID"] = 178820,
		},
		[357218] = {
			["npcID"] = 176957,
		},
		[351075] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 177154,
		},
		[86249] = {
			["npcID"] = 90211,
		},
		[297834] = {
			["encounterName"] = "Gunker",
			["npcID"] = 150222,
			["encounterID"] = 2292,
		},
		[357219] = {
			["npcID"] = 176957,
		},
		[318312] = {
			["npcID"] = 166427,
		},
		[353124] = {
			["npcID"] = 178957,
		},
		[297835] = {
			["encounterName"] = "Gunker",
			["npcID"] = 150222,
			["encounterID"] = 2292,
		},
		[406366] = {
			["source"] = "Primal Nightflame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200931,
		},
		[428889] = {
			["encounterName"] = "Ozumat",
			["source"] = "Ink of Ozumat",
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 213770,
		},
		[406760] = {
			["source"] = "Memory of a Master",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200827,
		},
		[289645] = {
			["source"] = "7th Legion Battlemage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 147787,
		},
		[349030] = {
			["encounterName"] = "The Eye of the Jailer",
			["npcID"] = 175725,
			["encounterID"] = 2433,
		},
		[341623] = {
			["encounterName"] = "Lady Inerva Darkvein",
			["npcID"] = 165521,
			["encounterID"] = 2406,
		},
		[426845] = {
			["source"] = "Infested Icecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84989,
		},
		[362568] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
			["encounterID"] = 2422,
		},
		[332650] = {
			["npcID"] = 172601,
		},
		[375652] = {
			["npcID"] = 196115,
		},
		[344936] = {
			["npcID"] = 168975,
		},
		[406369] = {
			["source"] = "Primal Nightflame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200931,
		},
		[166341] = {
			["npcID"] = 82579,
		},
		[375653] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Drakonid Stormbringer",
			["npcID"] = 191232,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[295791] = {
			["encounterName"] = "Abyssal Commander Sivara",
			["source"] = "Abyssal Commander Sivara",
			["encounterID"] = 2298,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151881,
		},
		[346985] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[277060] = {
			["npcID"] = 154020,
		},
		[204225] = {
			["npcID"] = 115164,
		},
		[362184] = {
			["encounterName"] = "Rygelon",
			["encounterID"] = 2549,
			["npcID"] = 182777,
		},
		[330604] = {
			["npcID"] = 159460,
		},
		[224378] = {
			["npcID"] = 112655,
		},
		[383846] = {
			["npcID"] = 196168,
		},
		[362494] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 175559,
			["encounterID"] = 2422,
		},
		[365847] = {
			["npcID"] = 183229,
		},
		[357226] = {
			["npcID"] = 180429,
		},
		[360451] = {
			["encounterName"] = "Skolex, the Insatiable Ravener",
			["encounterID"] = 2542,
			["npcID"] = 181395,
		},
		[328558] = {
			["npcID"] = 159027,
		},
		[408805] = {
			["source"] = "Incorporeal Being",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204560,
		},
		[365418] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["npcID"] = 181224,
			["encounterID"] = 2540,
		},
		[338800] = {
			["npcID"] = 173202,
		},
		[344941] = {
			["npcID"] = 162845,
		},
		[165511] = {
			["npcID"] = 82017,
		},
		[227776] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114251,
		},
		[408422] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[361324] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["encounterID"] = 2529,
			["npcID"] = 180906,
		},
		[255421] = {
			["encounterName"] = "Rezan",
			["source"] = "Rezan",
			["encounterID"] = 2086,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 122963,
		},
		[357229] = {
			["npcID"] = 180348,
		},
		[191941] = {
			["encounterName"] = "Tirathon Saltheril",
			["encounterID"] = 1815,
			["npcID"] = 95885,
		},
		[394470] = {
			["npcID"] = 186367,
		},
		[265081] = {
			["npcID"] = 131436,
		},
		[227777] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114260,
		},
		[228991] = {
			["encounterName"] = "Shade of Medivh",
			["npcID"] = 114675,
			["encounterID"] = 1965,
		},
		[338802] = {
			["npcID"] = 173202,
		},
		[371565] = {
			["npcID"] = 191244,
		},
		[357232] = {
			["npcID"] = 179108,
		},
		[342897] = {
			["npcID"] = 174130,
		},
		[426855] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Nymue",
			["encounterID"] = 2708,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206172,
		},
		[202181] = {
			["npcID"] = 91006,
		},
		[406378] = {
			["source"] = "Remnants of Sindragosa",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201089,
		},
		[342898] = {
			["npcID"] = 162123,
		},
		[351090] = {
			["npcID"] = 176574,
		},
		[338803] = {
			["npcID"] = 173202,
		},
		[357233] = {
			["npcID"] = 178462,
		},
		[334708] = {
			["encounterName"] = "Huntsman Altimor",
			["npcID"] = 171557,
			["encounterID"] = 2418,
		},
		[265084] = {
			["npcID"] = 131492,
		},
		[169418] = {
			["npcID"] = 84767,
		},
		[227779] = {
			["encounterName"] = "Shade of Medivh",
			["npcID"] = 114350,
			["encounterID"] = 1965,
		},
		[351091] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 177787,
		},
		[389999] = {
			["npcID"] = 189955,
		},
		[330614] = {
			["npcID"] = 163086,
		},
		[365426] = {
			["npcID"] = 184413,
		},
		[203552] = {
			["encounterName"] = "Nythendra",
			["npcID"] = 102672,
			["encounterID"] = 1853,
		},
		[225732] = {
			["npcID"] = 98538,
		},
		[337131] = {
			["npcID"] = 162872,
		},
		[373618] = {
			["npcID"] = 190174,
		},
		[111775] = {
			["npcID"] = 58722,
		},
		[381438] = {
			["npcID"] = 182455,
		},
		[265088] = {
			["encounterName"] = "Council o' Captains",
			["event"] = "SPELL_CAST_START",
			["source"] = "Rummy Mancomb",
			["npcID"] = 133219,
		},
		[321520] = {
			["npcID"] = 166926,
		},
		[376292] = {
			["encounterName"] = "Chrono-Lord Deios",
			["encounterID"] = 2559,
			["npcID"] = 184125,
		},
		[289662] = {
			["source"] = "7th Legion Battlemage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 147787,
		},
		[265089] = {
			["npcID"] = 131492,
		},
		[357238] = {
			["npcID"] = 180429,
		},
		[212423] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 99541,
		},
		[387955] = {
			["npcID"] = 196203,
		},
		[347000] = {
			["npcID"] = 172639,
		},
		[357239] = {
			["npcID"] = 180407,
		},
		[351096] = {
			["encounterName"] = "So'leah",
			["encounterID"] = 2442,
			["npcID"] = 177269,
		},
		[41448] = {
			["npcID"] = 177637,
		},
		[265091] = {
			["source"] = "Devout Blood Priest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131492,
		},
		[410848] = {
			["source"] = "Neltharion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201668,
		},
		[300525] = {
			["npcID"] = 150142,
		},
		[336763] = {
			["npcID"] = 169780,
		},
		[322429] = {
			["npcID"] = 162057,
		},
		[227965] = {
			["npcID"] = 114544,
		},
		[334716] = {
			["npcID"] = 162096,
		},
		[168398] = {
			["encounterName"] = "Skulloc, Son of Gruul",
			["npcID"] = 84215,
			["encounterID"] = 1754,
		},
		[284219] = {
			["npcID"] = 150297,
		},
		[414579] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fuzani Sprite",
			["npcID"] = 205858,
		},
		[367481] = {
			["npcID"] = 185508,
		},
		[344956] = {
			["npcID"] = 162829,
		},
		[357735] = {
			["encounterName"] = "Painsmith Raznal",
			["encounterID"] = 2430,
			["npcID"] = 179847,
		},
		[357243] = {
			["npcID"] = 180433,
		},
		[383864] = {
			["npcID"] = 191403,
		},
		[394102] = {
			["npcID"] = 193171,
		},
		[387960] = {
			["npcID"] = 187919,
		},
		[332671] = {
			["npcID"] = 170480,
		},
		[383866] = {
			["npcID"] = 194526,
		},
		[342911] = {
			["npcID"] = 162123,
		},
		[322433] = {
			["npcID"] = 162057,
		},
		[357245] = {
			["npcID"] = 176953,
		},
		[367484] = {
			["npcID"] = 185508,
		},
		[106823] = {
			["encounterName"] = "Liu Flameheart",
			["encounterID"] = 1416,
			["npcID"] = 56732,
		},
		[321247] = {
			["encounterName"] = "Amarth, The Harvester",
			["encounterID"] = 2388,
			["npcID"] = 163157,
		},
		[329425] = {
			["npcID"] = 157824,
		},
		[372828] = {
			["npcID"] = 186679,
		},
		[351589] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 177893,
		},
		[361343] = {
			["npcID"] = 178963,
		},
		[324483] = {
			["npcID"] = 177211,
		},
		[257478] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Mastiff",
			["npcID"] = 128551,
		},
		[385916] = {
			["encounterName"] = "Granyth",
			["encounterID"] = 2637,
			["npcID"] = 186616,
		},
		[352347] = {
			["encounterName"] = "Hylbrande",
			["npcID"] = 176551,
			["encounterID"] = 2426,
		},
		[422776] = {
			["encounterName"] = "Igira the Cruel",
			["source"] = "Igira the Cruel",
			["npcID"] = 200926,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2709,
		},
		[343322] = {
			["npcID"] = 168337,
		},
		[338688] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 173164,
			["encounterID"] = 2407,
		},
		[387965] = {
			["npcID"] = 187232,
		},
		[392414] = {
			["npcID"] = 195417,
		},
		[424825] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sylvanesh the Ascended",
			["npcID"] = 207107,
		},
		[242733] = {
			["npcID"] = 117230,
		},
		[371584] = {
			["npcID"] = 4127,
		},
		[260551] = {
			["encounterName"] = "Soulbound Goliath",
			["npcID"] = 131667,
			["encounterID"] = 2114,
		},
		[123429] = {
			["npcID"] = 60195,
		},
		[340869] = {
			["npcID"] = 164477,
		},
		[40317] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Murkblood Spearman",
			["npcID"] = 17729,
		},
		[111854] = {
			["npcID"] = 58633,
		},
		[383872] = {
			["npcID"] = 196168,
		},
		[418684] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Alliance Destroyer",
			["npcID"] = 208208,
		},
		[396159] = {
			["npcID"] = 186836,
		},
		[211406] = {
			["npcID"] = 104295,
		},
		[351109] = {
			["encounterName"] = "Sylvannas Windrunner",
			["npcID"] = 177787,
		},
		[229698] = {
			["npcID"] = 115417,
		},
		[363396] = {
			["npcID"] = 181572,
		},
		[406399] = {
			["source"] = "Sundered Arcanist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201736,
		},
		[361052] = {
			["npcID"] = 179006,
		},
		[284506] = {
			["npcID"] = 150740,
		},
		[351067] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["npcID"] = 175729,
			["encounterID"] = 2432,
		},
		[227789] = {
			["encounterName"] = "Maiden of Virtue",
			["encounterID"] = 1954,
			["npcID"] = 113971,
		},
		[191823] = {
			["encounterName"] = "Tirathon Saltheril",
			["encounterID"] = 1815,
			["npcID"] = 95885,
		},
		[394114] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "S.A.V.I.O.R.",
			["npcID"] = 195328,
		},
		[428926] = {
			["source"] = "Faceless Watcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40936,
		},
		[149975] = {
			["encounterName"] = "Magmolatus",
			["npcID"] = 74571,
			["encounterID"] = 1655,
		},
		[388316] = {
			["npcID"] = 184444,
		},
		[268801] = {
			["npcID"] = 121017,
		},
		[340874] = {
			["npcID"] = 162657,
		},
		[332683] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 169835,
			["encounterID"] = 2417,
		},
		[386546] = {
			["npcID"] = 186741,
		},
		[330978] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 166971,
			["encounterID"] = 2412,
		},
		[363400] = {
			["npcID"] = 178229,
		},
		[375687] = {
			["npcID"] = 190426,
		},
		[367496] = {
			["npcID"] = 185537,
		},
		[350847] = {
			["encounterName"] = "The Eye of the Jailer",
			["npcID"] = 175725,
			["encounterID"] = 2433,
		},
		[259531] = {
			["encounterName"] = "Vol'kaal",
			["source"] = "Reanimation Totem",
			["encounterID"] = 2085,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 125977,
		},
		[406404] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Calibrating Scent Matrix",
			["npcID"] = 203606,
		},
		[340375] = {
			["npcID"] = 168148,
		},
		[369193] = {
			["npcID"] = 186638,
		},
		[204243] = {
			["isChanneled"] = true,
			["source"] = "Nightmare Dweller",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 101991,
		},
		[357259] = {
			["npcID"] = 180392,
		},
		[357260] = {
			["npcID"] = 180431,
		},
		[351117] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 177889,
		},
		[355212] = {
			["npcID"] = 178630,
		},
		[406406] = {
			["source"] = "Calibrating Scent Matrix",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203606,
		},
		[424836] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sylvanesh the Ascended",
			["npcID"] = 207107,
		},
		[404695] = {
			["source"] = "First Mate Ovdah",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201182,
		},
		[314053] = {
			["npcID"] = 161261,
		},
		[381834] = {
			["encounterName"] = "Hackclaw's War-Band",
			["encounterID"] = 2570,
			["npcID"] = 186122,
		},
		[367500] = {
			["npcID"] = 185529,
		},
		[256871] = {
			["npcID"] = 169175,
		},
		[355214] = {
			["npcID"] = 178630,
		},
		[360845] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 181551,
		},
		[351119] = {
			["encounterName"] = "So'leah",
			["encounterID"] = 2442,
			["npcID"] = 177716,
		},
		[20801] = {
			["npcID"] = 18641,
		},
		[366287] = {
			["npcID"] = 185032,
		},
		[392075] = {
			["source"] = "Arkhuu",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195300,
		},
		[167385] = {
			["npcID"] = 154585,
		},
		[88308] = {
			["encounterName"] = "Altairus",
			["source"] = "Altairus",
			["encounterID"] = 1041,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43873,
		},
		[357953] = {
			["npcID"] = 180013,
		},
		[375694] = {
			["npcID"] = 181310,
		},
		[367503] = {
			["npcID"] = 186191,
		},
		[332272] = {
			["npcID"] = 180028,
		},
		[387950] = {
			["npcID"] = 187919,
		},
		[420746] = {
			["source"] = "Kaldorei Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207117,
		},
		[359313] = {
			["npcID"] = 181958,
		},
		[388310] = {
			["npcID"] = 192694,
		},
		[404364] = {
			["encounterName"] = "Morchie",
			["source"] = "Morchie",
			["encounterID"] = 2671,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202789,
		},
		[194682] = {
			["npcID"] = 98963,
		},
		[367505] = {
			["npcID"] = 181059,
		},
		[339966] = {
			["npcID"] = 164861,
		},
		[240009] = {
			["npcID"] = 158314,
		},
		[365458] = {
			["npcID"] = 184651,
		},
		[351124] = {
			["encounterName"] = "So'leah",
			["encounterID"] = 2442,
			["npcID"] = 177269,
		},
		[331811] = {
			["npcID"] = 165687,
		},
		[342496] = {
			["npcID"] = 168961,
		},
		[33507] = {
			["npcID"] = 18634,
		},
		[392080] = {
			["npcID"] = 188704,
		},
		[329569] = {
			["npcID"] = 173966,
		},
		[214486] = {
			["encounterName"] = "Star Augur Etraeus",
			["encounterID"] = 1863,
			["npcID"] = 103758,
		},
		[270543] = {
			["npcID"] = 164515,
		},
		[350202] = {
			["encounterName"] = "The Nine",
			["npcID"] = 177095,
			["encounterID"] = 2429,
		},
		[192985] = {
			["encounterName"] = "Wrath of Azshara",
			["npcID"] = 96028,
			["encounterID"] = 1814,
		},
		[366629] = {
			["npcID"] = 185155,
		},
		[283551] = {
			["encounterName"] = "King Mechagon",
			["encounterID"] = 2260,
			["npcID"] = 144249,
		},
		[406737] = {
			["source"] = "Memory of a Betrayer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200828,
		},
		[106740] = {
			["source"] = "Kirin Tor Invoker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 110715,
		},
		[387987] = {
			["npcID"] = 190778,
		},
		[386259] = {
			["npcID"] = 193535,
		},
		[79607] = {
			["npcID"] = 3127,
		},
		[200154] = {
			["encounterName"] = "Dargrul the Underking",
			["npcID"] = 101476,
			["encounterID"] = 1793,
		},
		[355224] = {
			["npcID"] = 168005,
		},
		[414609] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Pureblooded Cloud Serpent",
			["npcID"] = 205680,
		},
		[334747] = {
			["npcID"] = 166302,
		},
		[344986] = {
			["npcID"] = 158314,
		},
		[396180] = {
			["npcID"] = 186836,
		},
		[342939] = {
			["npcID"] = 169410,
		},
		[334748] = {
			["npcID"] = 166302,
		},
		[355542] = {
			["npcID"] = 177917,
		},
		[355226] = {
			["npcID"] = 151818,
		},
		[355230] = {
			["npcID"] = 151818,
		},
		[195037] = {
			["npcID"] = 95861,
		},
		[410516] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Warlord Kagni",
			["encounterID"] = 2682,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199659,
		},
		[214489] = {
			["npcID"] = 110418,
		},
		[8364] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Skeletal Guardian",
			["npcID"] = 10390,
		},
		[392087] = {
			["npcID"] = 190998,
		},
		[40064] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowmoon Technician",
			["npcID"] = 17414,
		},
		[338846] = {
			["npcID"] = 167525,
		},
		[227800] = {
			["encounterName"] = "Maiden of Virtue",
			["encounterID"] = 1954,
			["npcID"] = 113971,
		},
		[400279] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Ritualist",
			["npcID"] = 199971,
		},
		[369563] = {
			["encounterName"] = "The Lost Dwarves",
			["encounterID"] = 2555,
			["npcID"] = 184581,
		},
		[338847] = {
			["npcID"] = 167525,
		},
		[324513] = {
			["source"] = "Experimental Misstep",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199859,
		},
		[330968] = {
			["npcID"] = 174842,
		},
		[396189] = {
			["npcID"] = 197129,
		},
		[338848] = {
			["npcID"] = 167525,
		},
		[349087] = {
			["npcID"] = 176705,
		},
		[326562] = {
			["npcID"] = 172040,
		},
		[338852] = {
			["npcID"] = 167527,
		},
		[336804] = {
			["npcID"] = 177295,
		},
		[332706] = {
			["npcID"] = 170490,
		},
		[322470] = {
			["npcID"] = 177912,
		},
		[258672] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Crackshot",
			["npcID"] = 126918,
		},
		[371618] = {
			["npcID"] = 198382,
		},
		[357280] = {
			["npcID"] = 180387,
		},
		[400283] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Preserver",
			["npcID"] = 199972,
		},
		[336803] = {
			["npcID"] = 160785,
		},
		[338851] = {
			["npcID"] = 167525,
		},
		[357281] = {
			["npcID"] = 180432,
		},
		[367521] = {
			["npcID"] = 185534,
		},
		[426905] = {
			["source"] = "Minion of Ghur'sha",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 212778,
		},
		[355234] = {
			["npcID"] = 178142,
		},
		[388000] = {
			["source"] = "Bertinuat",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196288,
		},
		[334757] = {
			["encounterName"] = "Huntsman Altimor",
			["npcID"] = 169457,
			["encounterID"] = 2418,
		},
		[338855] = {
			["npcID"] = 167527,
		},
		[338853] = {
			["npcID"] = 167527,
		},
		[338856] = {
			["npcID"] = 167527,
		},
		[367522] = {
			["npcID"] = 181059,
		},
		[365477] = {
			["npcID"] = 181797,
		},
		[347045] = {
			["npcID"] = 176131,
		},
		[357284] = {
			["npcID"] = 180432,
		},
		[388302] = {
			["encounterName"] = "Dathea, Ascended",
			["npcID"] = 189813,
			["encounterID"] = 2635,
		},
		[385955] = {
			["npcID"] = 195354,
		},
		[388001] = {
			["source"] = "Bertinuat",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196288,
		},
		[422813] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Guardian Ordan",
			["npcID"] = 208727,
		},
		[400288] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unstable Pain",
			["npcID"] = 201290,
		},
		[231901] = {
			["encounterName"] = "The Crown Chemical Co.",
			["event"] = "SPELL_CAST_START",
			["source"] = "Overspritzed Guard",
			["npcID"] = 116285,
		},
		[388002] = {
			["source"] = "Bertinuat",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196288,
		},
		[357286] = {
			["npcID"] = 180392,
		},
		[359334] = {
			["npcID"] = 181862,
		},
		[369573] = {
			["encounterName"] = "The Lost Dwarves",
			["npcID"] = 184581,
			["encounterID"] = 2555,
		},
		[338857] = {
			["npcID"] = 167527,
		},
		[422815] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Guardian Ordan",
			["npcID"] = 208727,
		},
		[169445] = {
			["npcID"] = 84767,
		},
		[377765] = {
			["npcID"] = 189205,
		},
		[338858] = {
			["npcID"] = 167526,
		},
		[388301] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadeslash Trakken",
			["npcID"] = 193271,
		},
		[229705] = {
			["npcID"] = 115418,
		},
		[345002] = {
			["npcID"] = 168977,
		},
		[375719] = {
			["npcID"] = 190700,
		},
		[326574] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 162689,
		},
		[359337] = {
			["npcID"] = 181967,
		},
		[385958] = {
			["encounterName"] = "Vexamus",
			["npcID"] = 194181,
			["encounterID"] = 2562,
		},
		[404388] = {
			["source"] = "Hatching Egg",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202897,
		},
		[332717] = {
			["npcID"] = 166178,
		},
		[334765] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168112,
			["encounterID"] = 2417,
		},
		[345004] = {
			["npcID"] = 175347,
		},
		[361387] = {
			["npcID"] = 182466,
		},
		[324527] = {
			["encounterName"] = "Globgrog",
			["encounterID"] = 2382,
			["npcID"] = 164255,
		},
		[388008] = {
			["encounterName"] = "Telash Greywing",
			["npcID"] = 186737,
			["encounterID"] = 2583,
		},
		[209378] = {
			["encounterName"] = "Talixae Flamewreath",
			["npcID"] = 104275,
			["encounterID"] = 1869,
		},
		[338862] = {
			["npcID"] = 158197,
		},
		[275382] = {
			["npcID"] = 140787,
		},
		[201488] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["encounterID"] = 1850,
			["npcID"] = 99657,
		},
		[392105] = {
			["source"] = "Haleh",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199370,
		},
		[338863] = {
			["npcID"] = 167526,
		},
		[57984] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 95061,
		},
		[400296] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Preserver",
			["npcID"] = 199972,
		},
		[227809] = {
			["encounterName"] = "Maiden of Virtue",
			["encounterID"] = 1954,
			["npcID"] = 113971,
		},
		[428965] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Dark Colossus",
			["encounterID"] = 2677,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 214012,
		},
		[275384] = {
			["npcID"] = 140789,
		},
		[290411] = {
			["npcID"] = 144536,
		},
		[206685] = {
			["npcID"] = 104493,
		},
		[338865] = {
			["npcID"] = 173191,
		},
		[211571] = {
			["npcID"] = 105617,
		},
		[300650] = {
			["npcID"] = 150169,
		},
		[410537] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scalecommander Sarkareth",
			["npcID"] = 199984,
		},
		[153067] = {
			["encounterName"] = "Nhallish",
			["npcID"] = 75829,
			["encounterID"] = 1688,
		},
		[373678] = {
			["encounterName"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["encounterID"] = 2605,
		},
		[195046] = {
			["npcID"] = 95861,
		},
		[338867] = {
			["npcID"] = 167526,
		},
		[330676] = {
			["npcID"] = 168862,
		},
		[375727] = {
			["encounterName"] = "Chrono-Lord Deios",
			["encounterID"] = 2559,
			["npcID"] = 184125,
		},
		[342963] = {
			["npcID"] = 158259,
		},
		[338868] = {
			["npcID"] = 167526,
		},
		[404396] = {
			["source"] = "Pyrachniss",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200978,
		},
		[361676] = {
			["encounterName"] = "Halondrus the Reclaimer",
			["encounterID"] = 2529,
			["npcID"] = 180906,
		},
		[368528] = {
			["npcID"] = 183764,
		},
		[336451] = {
			["npcID"] = 163862,
		},
		[396206] = {
			["npcID"] = 200948,
		},
		[199143] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["npcID"] = 98970,
			["encounterID"] = 1835,
		},
		[392111] = {
			["npcID"] = 185814,
		},
		[299438] = {
			["npcID"] = 150249,
		},
		[349805] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 176973,
		},
		[236003] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Banshee",
			["npcID"] = 119058,
		},
		[107045] = {
			["encounterName"] = "Liu Flameheart",
			["npcID"] = 56762,
			["encounterID"] = 1416,
		},
		[83710] = {
			["encounterName"] = "Halfus Wyrmbreaker",
			["npcID"] = 44600,
			["encounterID"] = 1030,
		},
		[396208] = {
			["npcID"] = 197126,
		},
		[166380] = {
			["npcID"] = 82597,
		},
		[408495] = {
			["source"] = "Elder Magma Serpent",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203846,
		},
		[412868] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Karokta",
			["npcID"] = 203625,
		},
		[404400] = {
			["source"] = "Pyrachniss",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200978,
		},
		[40248] = {
			["npcID"] = 17670,
		},
		[338872] = {
			["npcID"] = 167526,
		},
		[373960] = {
			["encounterName"] = "Decatriarch Wratheye",
			["encounterID"] = 2569,
			["npcID"] = 186121,
		},
		[322491] = {
			["encounterName"] = "Stradama Margrave",
			["encounterID"] = 2386,
			["npcID"] = 164267,
		},
		[304479] = {
			["npcID"] = 156015,
		},
		[44163] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ellrys Duskhallow",
			["npcID"] = 24558,
		},
		[8995] = {
			["source"] = "Twilight Rifleman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 42155,
		},
		[355256] = {
			["npcID"] = 178631,
		},
		[428963] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Burning Colossus",
			["npcID"] = 207796,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[374563] = {
			["npcID"] = 190362,
		},
		[188907] = {
			["npcID"] = 92789,
		},
		[404403] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[199146] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gildedfur Stag",
			["npcID"] = 96609,
		},
		[237657] = {
			["npcID"] = 117764,
		},
		[385974] = {
			["encounterName"] = "Vexamus",
			["npcID"] = 189668,
			["encounterID"] = 2562,
		},
		[317559] = {
			["npcID"] = 153964,
		},
		[372562] = {
			["npcID"] = 186516,
		},
		[228603] = {
			["npcID"] = 114804,
		},
		[84836] = {
			["npcID"] = 45264,
		},
		[152183] = {
			["npcID"] = 75406,
		},
		[351835] = {
			["npcID"] = 179894,
		},
		[28099] = {
			["source"] = "Tesla Coil",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16218,
		},
		[394167] = {
			["npcID"] = 185660,
		},
		[385145] = {
			["npcID"] = 187256,
		},
		[293827] = {
			["npcID"] = 144294,
		},
		[408502] = {
			["source"] = "Grrrmrrsh Hrrnglscrrrm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204412,
		},
		[338053] = {
			["npcID"] = 157405,
		},
		[385075] = {
			["encounterName"] = "Umbrelskul",
			["npcID"] = 186738,
			["encounterID"] = 2584,
		},
		[422837] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[227616] = {
			["encounterName"] = "Moroes",
			["encounterID"] = 1961,
			["npcID"] = 114319,
		},
		[250342] = {
			["npcID"] = 126088,
		},
		[373692] = {
			["npcID"] = 190034,
		},
		[227817] = {
			["encounterName"] = "Maiden of Virtue",
			["encounterID"] = 1954,
			["npcID"] = 113971,
		},
		[343470] = {
			["npcID"] = 165919,
		},
		[384194] = {
			["npcID"] = 190207,
		},
		[157170] = {
			["npcID"] = 77812,
		},
		[373693] = {
			["npcID"] = 190034,
		},
		[385980] = {
			["source"] = "Strunraan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193534,
		},
		[44164] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Fizzle",
			["npcID"] = 24656,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1895,
		},
		[428983] = {
			["isChanneled"] = true,
			["source"] = "Pip",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 214075,
		},
		[320999] = {
			["npcID"] = 164852,
		},
		[196078] = {
			["encounterName"] = "Amalgam of Souls",
			["npcID"] = 98542,
			["encounterID"] = 1832,
		},
		[256099] = {
			["npcID"] = 166032,
		},
		[253545] = {
			["npcID"] = 127703,
		},
		[231914] = {
			["npcID"] = 116295,
		},
		[318406] = {
			["encounterName"] = "Gorechop",
			["encounterID"] = 2365,
			["npcID"] = 162317,
		},
		[283422] = {
			["encounterName"] = "Tussle Tonks",
			["encounterID"] = 2257,
			["npcID"] = 145185,
		},
		[346980] = {
			["encounterName"] = "Hylbrande",
			["npcID"] = 176551,
			["encounterID"] = 2426,
		},
		[296454] = {
			["npcID"] = 152656,
		},
		[330452] = {
			["npcID"] = 158930,
		},
		[408509] = {
			["source"] = "Elder Magma Serpent",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203846,
		},
		[271310] = {
			["source"] = "Pathfinder Tacha",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200263,
		},
		[199151] = {
			["npcID"] = 96611,
		},
		[367554] = {
			["npcID"] = 183416,
		},
		[336838] = {
			["npcID"] = 175851,
		},
		[404415] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Overseer Xymra",
			["npcID"] = 200186,
		},
		[373698] = {
			["source"] = "Brackenhide Shaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186220,
		},
		[265168] = {
			["encounterName"] = "Council o' Captains",
			["event"] = "SPELL_CAST_START",
			["source"] = "Rummy Mancomb",
			["npcID"] = 133219,
		},
		[304075] = {
			["npcID"] = 155908,
		},
		[157173] = {
			["npcID"] = 79507,
		},
		[256489] = {
			["encounterName"] = "Ring of Booty",
			["source"] = "Trothak",
			["npcID"] = 126969,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2095,
		},
		[334792] = {
			["encounterName"] = "Huntsman Altimor",
			["npcID"] = 165066,
			["encounterID"] = 2418,
		},
		[392130] = {
			["npcID"] = 189668,
		},
		[330697] = {
			["npcID"] = 170690,
		},
		[308172] = {
			["npcID"] = 158177,
		},
		[326602] = {
			["npcID"] = 170767,
		},
		[197105] = {
			["npcID"] = 97171,
		},
		[289743] = {
			["source"] = "Eternal Enforcer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 149556,
		},
		[270248] = {
			["npcID"] = 154129,
		},
		[217583] = {
			["npcID"] = 111620,
		},
		[328651] = {
			["npcID"] = 167493,
		},
		[342931] = {
			["npcID"] = 169410,
		},
		[358638] = {
			["npcID"] = 178997,
		},
		[392132] = {
			["npcID"] = 194225,
		},
		[255591] = {
			["encounterName"] = "Priestess Alun'za",
			["source"] = "Priestess Alun'za",
			["encounterID"] = 2084,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 122967,
		},
		[325506] = {
			["encounterName"] = "Sun King's Salvation",
			["npcID"] = 165764,
			["encounterID"] = 2402,
		},
		[398276] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Glakis, Winter's Wrath",
			["npcID"] = 199502,
		},
		[367807] = {
			["npcID"] = 185626,
		},
		[320462] = {
			["npcID"] = 163128,
		},
		[157762] = {
			["npcID"] = 77696,
		},
		[227823] = {
			["encounterName"] = "Maiden of Virtue",
			["encounterID"] = 1954,
			["npcID"] = 113971,
		},
		[367561] = {
			["encounterName"] = "Vigilant Guardian",
			["npcID"] = 180773,
			["encounterID"] = 2512,
		},
		[320463] = {
			["npcID"] = 177140,
		},
		[396475] = {
			["npcID"] = 191705,
		},
		[334797] = {
			["encounterName"] = "Huntsman Altimor",
			["npcID"] = 169457,
			["encounterID"] = 2418,
		},
		[326607] = {
			["npcID"] = 167612,
		},
		[404423] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elemental Projection",
			["npcID"] = 201615,
		},
		[330703] = {
			["npcID"] = 174210,
		},
		[170487] = {
			["npcID"] = 167726,
		},
		[204275] = {
			["encounterName"] = "Skorpyron",
			["encounterID"] = 1849,
			["npcID"] = 102263,
		},
		[320465] = {
			["npcID"] = 177140,
		},
		[412614] = {
			["source"] = "Viridian King",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201029,
		},
		[321188] = {
			["npcID"] = 150238,
		},
		[175607] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Night-Twisted Shadowsworn",
			["npcID"] = 82733,
		},
		[365921] = {
			["npcID"] = 183416,
		},
		[369853] = {
			["npcID"] = 184019,
		},
		[327130] = {
			["npcID"] = 165872,
		},
		[359374] = {
			["npcID"] = 182364,
		},
		[325361] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[396774] = {
			["npcID"] = 191105,
		},
		[256494] = {
			["encounterName"] = "Ring of Booty",
			["source"] = "Trothak",
			["npcID"] = 126969,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2095,
		},
		[356897] = {
			["npcID"] = 177294,
		},
		[392924] = {
			["npcID"] = 197535,
		},
		[315076] = {
			["npcID"] = 161388,
		},
		[414665] = {
			["source"] = "Murloc Gillbeater",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205823,
		},
		[408767] = {
			["source"] = "Ritualmaster Skarna",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202274,
		},
		[168040] = {
			["encounterName"] = "Ancient Protectors",
			["npcID"] = 83893,
			["encounterID"] = 1757,
		},
		[347090] = {
			["npcID"] = 178263,
		},
		[392141] = {
			["source"] = "Gamgus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194240,
		},
		[15587] = {
			["npcID"] = 16594,
		},
		[388046] = {
			["npcID"] = 187033,
		},
		[347091] = {
			["npcID"] = 164047,
		},
		[360228] = {
			["npcID"] = 181839,
		},
		[400333] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cliffkeeper Bouldani",
			["npcID"] = 202612,
		},
		[345044] = {
			["npcID"] = 170028,
		},
		[326952] = {
			["npcID"] = 168058,
		},
		[302274] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["npcID"] = 150295,
			["encounterID"] = 2291,
		},
		[175610] = {
			["npcID"] = 82733,
		},
		[364617] = {
			["npcID"] = 181057,
		},
		[330711] = {
			["encounterName"] = "Shriekwing",
			["npcID"] = 164406,
			["encounterID"] = 2398,
		},
		[383953] = {
			["npcID"] = 194255,
		},
		[400335] = {
			["source"] = "Vraken the Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200584,
		},
		[374038] = {
			["encounterName"] = "The Primal Council",
			["npcID"] = 187767,
			["encounterID"] = 2590,
		},
		[347094] = {
			["encounterName"] = "Hylbrande",
			["npcID"] = 175663,
			["encounterID"] = 2426,
		},
		[173563] = {
			["encounterName"] = "Yalnu",
			["npcID"] = 86684,
			["encounterID"] = 1756,
		},
		[271329] = {
			["source"] = "Pathfinder Tacha",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200263,
		},
		[166397] = {
			["npcID"] = 82590,
		},
		[347095] = {
			["npcID"] = 178263,
		},
		[200185] = {
			["encounterName"] = "Shade of Xavius",
			["npcID"] = 99192,
			["encounterID"] = 1839,
		},
		[293854] = {
			["npcID"] = 144294,
		},
		[304093] = {
			["npcID"] = 155908,
		},
		[193018] = {
			["encounterName"] = "King Deepbeard",
			["npcID"] = 91797,
			["encounterID"] = 1812,
		},
		[406481] = {
			["encounterName"] = "Morchie",
			["source"] = "Morchie",
			["encounterID"] = 2671,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198999,
		},
		[326619] = {
			["source"] = "Forsworn Researcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 166873,
		},
		[328667] = {
			["npcID"] = 163126,
		},
		[412626] = {
			["source"] = "General Zskorro",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203592,
		},
		[357336] = {
			["npcID"] = 180355,
		},
		[330716] = {
			["npcID"] = 167998,
		},
		[336859] = {
			["npcID"] = 162873,
		},
		[420817] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Priestess of the Moon",
			["npcID"] = 211076,
		},
		[228852] = {
			["encounterName"] = "Attumen the Huntsman",
			["encounterID"] = 1960,
			["npcID"] = 114262,
		},
		[391825] = {
			["npcID"] = 190900,
		},
		[320478] = {
			["npcID"] = 180379,
		},
		[328331] = {
			["npcID"] = 168717,
		},
		[147652] = {
			["npcID"] = 72805,
		},
		[285148] = {
			["npcID"] = 144578,
		},
		[357115] = {
			["npcID"] = 177915,
		},
		[404437] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elemental Projection",
			["npcID"] = 201615,
		},
		[369049] = {
			["encounterName"] = "Emberon",
			["encounterID"] = 2558,
			["npcID"] = 186107,
		},
		[343005] = {
			["encounterName"] = "Shriekwing",
			["npcID"] = 164406,
			["encounterID"] = 2398,
		},
		[264024] = {
			["npcID"] = 131812,
		},
		[259572] = {
			["encounterName"] = "Vol'kaal",
			["source"] = "Vol'kaal",
			["encounterID"] = 2085,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 122965,
		},
		[323825] = {
			["encounterName"] = "Mordretha",
			["encounterID"] = 2404,
			["npcID"] = 165994,
		},
		[375770] = {
			["npcID"] = 190718,
		},
		[375988] = {
			["npcID"] = 191051,
		},
		[398296] = {
			["npcID"] = 200387,
		},
		[33417] = {
			["npcID"] = 18949,
		},
		[293861] = {
			["npcID"] = 151613,
		},
		[390788] = {
			["npcID"] = 186678,
		},
		[355294] = {
			["encounterName"] = "The Nine",
			["npcID"] = 175726,
			["encounterID"] = 2429,
		},
		[75529] = {
			["source"] = "Snowfrolic Fox",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 49565,
		},
		[227463] = {
			["encounterName"] = "Moroes",
			["encounterID"] = 1961,
			["npcID"] = 114320,
		},
		[338914] = {
			["npcID"] = 177628,
		},
		[404442] = {
			["source"] = "Vraken the Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200584,
		},
		[357343] = {
			["npcID"] = 180427,
		},
		[277481] = {
			["npcID"] = 154011,
		},
		[386012] = {
			["npcID"] = 194317,
		},
		[388060] = {
			["npcID"] = 187033,
		},
		[209404] = {
			["npcID"] = 104247,
		},
		[331526] = {
			["npcID"] = 160956,
		},
		[188927] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Darkfiend Defiler",
			["npcID"] = 93111,
		},
		[222499] = {
			["npcID"] = 162829,
		},
		[398300] = {
			["npcID"] = 200387,
		},
		[332610] = {
			["npcID"] = 156333,
		},
		[336868] = {
			["npcID"] = 184606,
		},
		[355299] = {
			["npcID"] = 178661,
		},
		[408749] = {
			["source"] = "Grrrmrrsh Hrrnglscrrrm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204412,
		},
		[390111] = {
			["encounterName"] = "Khajin the Unyielding",
			["encounterID"] = 2617,
			["npcID"] = 189727,
		},
		[386015] = {
			["npcID"] = 194894,
		},
		[222716] = {
			["npcID"] = 111354,
		},
		[283628] = {
			["source"] = "Rezani Disciple",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 147895,
		},
		[328288] = {
			["npcID"] = 168718,
		},
		[295231] = {
			["npcID"] = 165167,
		},
		[185857] = {
			["source"] = "Scarlet Scout",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210973,
		},
		[373729] = {
			["npcID"] = 190128,
		},
		[260703] = {
			["encounterName"] = "Heartsbane Triad",
			["source"] = "Sister Malady",
			["encounterID"] = 2113,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131823,
		},
		[37668] = {
			["npcID"] = 18312,
		},
		[191595] = {
			["npcID"] = 96587,
		},
		[337761] = {
			["npcID"] = 163213,
		},
		[351206] = {
			["npcID"] = 176575,
		},
		[340070] = {
			["npcID"] = 166503,
		},
		[429021] = {
			["source"] = "Faceless Watcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40936,
		},
		[297966] = {
			["npcID"] = 153382,
		},
		[390115] = {
			["npcID"] = 190161,
		},
		[164357] = {
			["encounterName"] = "Witherbark",
			["npcID"] = 81522,
			["encounterID"] = 1746,
		},
		[338921] = {
			["npcID"] = 163186,
		},
		[150023] = {
			["encounterName"] = "Magmolatus",
			["npcID"] = 74475,
			["encounterID"] = 1655,
		},
		[418784] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Supreme General Pa'valak",
			["npcID"] = 208211,
		},
		[361447] = {
			["npcID"] = 182425,
		},
		[373733] = {
			["encounterName"] = "Chargath, Bane of Scales",
			["npcID"] = 189340,
			["encounterID"] = 2613,
		},
		[283634] = {
			["npcID"] = 150748,
		},
		[163334] = {
			["encounterName"] = "Grimrail Enforcers",
			["npcID"] = 80808,
			["encounterID"] = 1748,
		},
		[361448] = {
			["npcID"] = 182368,
		},
		[273395] = {
			["npcID"] = 138863,
		},
		[324589] = {
			["encounterName"] = "Mordretha",
			["encounterID"] = 2404,
			["npcID"] = 166524,
		},
		[192003] = {
			["encounterName"] = "Serpentrix",
			["npcID"] = 97259,
			["encounterID"] = 1813,
		},
		[323166] = {
			["encounterName"] = "Hakkar, the Soulflayer",
			["encounterID"] = 2395,
			["npcID"] = 164558,
		},
		[355306] = {
			["npcID"] = 179778,
		},
		[357354] = {
			["npcID"] = 180427,
		},
		[383975] = {
			["source"] = "Raging Windlord",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200390,
		},
		[209410] = {
			["npcID"] = 104247,
		},
		[404453] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elemental Projection",
			["npcID"] = 201615,
		},
		[324591] = {
			["npcID"] = 166554,
		},
		[328687] = {
			["npcID"] = 166079,
		},
		[386024] = {
			["npcID"] = 194894,
		},
		[291613] = {
			["encounterName"] = "King Mechagon",
			["encounterID"] = 2260,
			["npcID"] = 150396,
		},
		[357356] = {
			["npcID"] = 178369,
		},
		[340975] = {
			["npcID"] = 163363,
		},
		[361452] = {
			["npcID"] = 179006,
		},
		[192005] = {
			["encounterName"] = "Serpentrix",
			["npcID"] = 97260,
			["encounterID"] = 1813,
		},
		[199172] = {
			["npcID"] = 99728,
		},
		[408551] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crystalline Walker",
			["npcID"] = 201063,
		},
		[386026] = {
			["npcID"] = 194895,
		},
		[404456] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[373932] = {
			["encounterName"] = "Azureblade",
			["npcID"] = 190187,
			["encounterID"] = 2585,
		},
		[416743] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hungering Ghoul",
			["npcID"] = 206016,
		},
		[418791] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Supreme General Pa'valak",
			["npcID"] = 208211,
		},
		[331414] = {
			["npcID"] = 157754,
		},
		[295698] = {
			["npcID"] = 154041,
		},
		[343025] = {
			["encounterName"] = "Sun King's Salvation",
			["npcID"] = 165805,
			["encounterID"] = 2402,
		},
		[386028] = {
			["encounterName"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["npcID"] = 195696,
		},
		[285878] = {
			["encounterName"] = "Conclave of the Chosen",
			["source"] = "Akunda's Aspect",
			["encounterID"] = 2268,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 144941,
		},
		[373742] = {
			["encounterName"] = "Chargath, Bane of Scales",
			["npcID"] = 189340,
			["encounterID"] = 2613,
		},
		[383981] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rising Tempest",
			["npcID"] = 194575,
		},
		[330037] = {
			["npcID"] = 168361,
		},
		[295929] = {
			["npcID"] = 154030,
		},
		[332788] = {
			["npcID"] = 165566,
		},
		[328880] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[209413] = {
			["npcID"] = 104270,
		},
		[322550] = {
			["encounterName"] = "Tred'ova",
			["encounterID"] = 2393,
			["npcID"] = 164517,
		},
		[325877] = {
			["encounterName"] = "Sun King's Salvation",
			["npcID"] = 165805,
			["encounterID"] = 2402,
		},
		[375296] = {
			["npcID"] = 187131,
		},
		[393539] = {
			["npcID"] = 186592,
		},
		[338933] = {
			["npcID"] = 172401,
		},
		[418796] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Supreme General Pa'valak",
			["npcID"] = 208211,
		},
		[269310] = {
			["encounterName"] = "Unbound Abomination",
			["npcID"] = 134419,
			["encounterID"] = 2123,
		},
		[345077] = {
			["npcID"] = 170044,
		},
		[390760] = {
			["npcID"] = 186678,
		},
		[357364] = {
			["npcID"] = 178294,
		},
		[199176] = {
			["encounterName"] = "Naraxas",
			["encounterID"] = 1792,
			["npcID"] = 91005,
		},
		[295932] = {
			["npcID"] = 151329,
		},
		[396454] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Insatiable Hornswog",
			["npcID"] = 185715,
		},
		[332792] = {
			["npcID"] = 165566,
		},
		[336888] = {
			["npcID"] = 168233,
		},
		[345079] = {
			["npcID"] = 170031,
		},
		[429037] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Erunak Stonespeaker",
			["encounterID"] = 1046,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40825,
		},
		[338936] = {
			["npcID"] = 172390,
		},
		[260699] = {
			["encounterName"] = "Heartsbane Triad",
			["npcID"] = 131824,
			["encounterID"] = 2113,
		},
		[377844] = {
			["encounterName"] = "Hackclaw's War-Band",
			["encounterID"] = 2570,
			["npcID"] = 186122,
		},
		[404465] = {
			["source"] = "Galakhad",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200717,
		},
		[322554] = {
			["encounterName"] = "Executor Tarvold",
			["npcID"] = 162103,
			["encounterID"] = 2361,
		},
		[332509] = {
			["npcID"] = 164555,
		},
		[200913] = {
			["npcID"] = 98792,
		},
		[341163] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 171396,
		},
		[211464] = {
			["npcID"] = 104278,
		},
		[255579] = {
			["encounterName"] = "Priestess Alun'za",
			["source"] = "Priestess Alun'za",
			["encounterID"] = 2084,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122967,
		},
		[150032] = {
			["encounterName"] = "Magmolatus",
			["npcID"] = 74475,
			["encounterID"] = 1655,
		},
		[322557] = {
			["npcID"] = 164920,
		},
		[357369] = {
			["npcID"] = 178294,
		},
		[351226] = {
			["npcID"] = 178071,
		},
		[201226] = {
			["npcID"] = 100531,
		},
		[294064] = {
			["npcID"] = 151658,
		},
		[406516] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["encounterID"] = 2688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201261,
		},
		[260698] = {
			["encounterName"] = "Heartsbane Triad",
			["npcID"] = 131824,
			["encounterID"] = 2113,
		},
		[336893] = {
			["npcID"] = 162873,
		},
		[344924] = {
			["npcID"] = 170302,
		},
		[328365] = {
			["npcID"] = 167493,
		},
		[200289] = {
			["encounterName"] = "Shade of Xavius",
			["npcID"] = 99192,
			["encounterID"] = 1839,
		},
		[320512] = {
			["npcID"] = 163892,
		},
		[412661] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Invoq",
			["npcID"] = 203627,
		},
		[324608] = {
			["encounterName"] = "Oryphrion",
			["npcID"] = 162060,
			["encounterID"] = 2358,
		},
		[169094] = {
			["encounterName"] = "Yalnu",
			["npcID"] = 84358,
			["encounterID"] = 1756,
		},
		[10277] = {
			["npcID"] = 18970,
		},
		[366326] = {
			["npcID"] = 183497,
		},
		[324609] = {
			["npcID"] = 166396,
		},
		[338939] = {
			["npcID"] = 167055,
		},
		[361469] = {
			["npcID"] = 185800,
		},
		[404472] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Neldris",
			["encounterID"] = 2693,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200912,
		},
		[232153] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114328,
		},
		[343040] = {
			["npcID"] = 165869,
		},
		[295942] = {
			["npcID"] = 162845,
		},
		[404473] = {
			["source"] = "Galakhad",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200717,
		},
		[260697] = {
			["encounterName"] = "Heartsbane Triad",
			["npcID"] = 131825,
			["encounterID"] = 2113,
		},
		[200205] = {
			["npcID"] = 101462,
		},
		[328707] = {
			["npcID"] = 168992,
		},
		[420856] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Aerwynn",
			["encounterID"] = 2728,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208365,
		},
		[111752] = {
			["npcID"] = 58823,
		},
		[212492] = {
			["encounterName"] = "Spellblade Aluriel",
			["encounterID"] = 1871,
			["npcID"] = 104881,
		},
		[271371] = {
			["npcID"] = 156986,
		},
		[328002] = {
			["npcID"] = 168574,
		},
		[342854] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[334852] = {
			["encounterName"] = "Huntsman Altimor",
			["npcID"] = 169458,
			["encounterID"] = 2418,
		},
		[320517] = {
			["npcID"] = 163894,
		},
		[255577] = {
			["encounterName"] = "Priestess Alun'za",
			["source"] = "Priestess Alun'za",
			["encounterID"] = 2084,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122967,
		},
		[227851] = {
			["encounterName"] = "Moroes",
			["encounterID"] = 1961,
			["npcID"] = 114312,
		},
		[196111] = {
			["encounterName"] = "Serpentrix",
			["npcID"] = 91793,
			["encounterID"] = 1813,
		},
		[279564] = {
			["npcID"] = 167154,
		},
		[106807] = {
			["encounterName"] = "Ook-Ook",
			["npcID"] = 56637,
			["encounterID"] = 1412,
		},
		[384161] = {
			["npcID"] = 189464,
		},
		[277517] = {
			["npcID"] = 177862,
		},
		[260696] = {
			["encounterName"] = "Heartsbane Triad",
			["source"] = "Sister Malady",
			["encounterID"] = 2113,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131823,
		},
		[412669] = {
			["source"] = "Klakatak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203618,
		},
		[211470] = {
			["npcID"] = 104300,
		},
		[392192] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Blazing Fiend",
			["npcID"] = 190688,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[421020] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Urctos",
			["encounterID"] = 2728,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208363,
		},
		[363524] = {
			["npcID"] = 181572,
		},
		[150038] = {
			["encounterName"] = "Magmolatus",
			["npcID"] = 74475,
			["encounterID"] = 1655,
		},
		[20296] = {
			["source"] = "Scarlet Technician",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211884,
		},
		[279567] = {
			["npcID"] = 167154,
		},
		[404480] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ebon Lieutenant",
			["npcID"] = 201383,
		},
		[425115] = {
			["source"] = "Fruitface",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209913,
		},
		[392194] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["npcID"] = 190245,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[197137] = {
			["npcID"] = 100216,
		},
		[342317] = {
			["npcID"] = 181005,
		},
		[365572] = {
			["npcID"] = 184733,
		},
		[192018] = {
			["encounterName"] = "Hyrja",
			["encounterID"] = 1806,
			["npcID"] = 95833,
		},
		[410625] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2685,
		},
		[207642] = {
			["npcID"] = 178409,
		},
		[206351] = {
			["encounterName"] = "Krosus",
			["encounterID"] = 1842,
			["npcID"] = 104262,
		},
		[363525] = {
			["npcID"] = 183652,
		},
		[243289] = {
			["npcID"] = 121399,
		},
		[338955] = {
			["npcID"] = 166179,
		},
		[353603] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["npcID"] = 175730,
			["encounterID"] = 2431,
		},
		[319906] = {
			["npcID"] = 167022,
		},
		[211473] = {
			["npcID"] = 104300,
		},
		[169494] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gnarlroot",
			["npcID"] = 81984,
		},
		[390150] = {
			["npcID"] = 186612,
		},
		[343046] = {
			["npcID"] = 169041,
		},
		[394450] = {
			["npcID"] = 191972,
		},
		[338957] = {
			["npcID"] = 165998,
		},
		[390151] = {
			["npcID"] = 189955,
		},
		[410629] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scalecommander Sarkareth",
			["npcID"] = 199984,
		},
		[336910] = {
			["npcID"] = 162872,
		},
		[347149] = {
			["encounterName"] = "Timecap'n Hooktail",
			["npcID"] = 175546,
			["encounterID"] = 2419,
		},
		[332646] = {
			["npcID"] = 162872,
		},
		[42382] = {
			["npcID"] = 17299,
		},
		[336911] = {
			["npcID"] = 178820,
		},
		[338959] = {
			["npcID"] = 168697,
		},
		[267288] = {
			["npcID"] = 135671,
		},
		[343055] = {
			["npcID"] = 178988,
		},
		[363533] = {
			["encounterName"] = "Rygelon",
			["encounterID"] = 2549,
			["npcID"] = 182777,
		},
		[259597] = {
			["npcID"] = 158110,
		},
		[219913] = {
			["npcID"] = 95916,
		},
		[343056] = {
			["npcID"] = 172025,
		},
		[386059] = {
			["npcID"] = 193535,
		},
		[320529] = {
			["npcID"] = 168886,
		},
		[369675] = {
			["npcID"] = 184022,
		},
		[343057] = {
			["npcID"] = 178988,
		},
		[378012] = {
			["npcID"] = 186823,
		},
		[347153] = {
			["npcID"] = 171849,
		},
		[391380] = {
			["npcID"] = 192226,
		},
		[343058] = {
			["npcID"] = 178988,
		},
		[325162] = {
			["npcID"] = 166544,
		},
		[172567] = {
			["npcID"] = 81368,
		},
		[291865] = {
			["encounterName"] = "King Mechagon",
			["encounterID"] = 2260,
			["npcID"] = 150396,
		},
		[384014] = {
			["encounterName"] = "Watcher Irideus",
			["npcID"] = 189719,
			["encounterID"] = 2615,
		},
		[356817] = {
			["npcID"] = 178578,
		},
		[397112] = {
			["npcID"] = 192717,
		},
		[211477] = {
			["npcID"] = 104277,
		},
		[343060] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168113,
			["encounterID"] = 2417,
		},
		[386063] = {
			["encounterName"] = "Teera and Maruuk",
			["encounterID"] = 2581,
			["npcID"] = 186338,
		},
		[79858] = {
			["npcID"] = 82005,
		},
		[335047] = {
			["npcID"] = 172040,
		},
		[408576] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Rionthus",
			["encounterID"] = 2693,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200918,
		},
		[46427] = {
			["npcID"] = 25373,
		},
		[406678] = {
			["encounterName"] = "The Vigilant Steward, Zskarn",
			["source"] = "Zskarn",
			["encounterID"] = 2689,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202375,
		},
		[357396] = {
			["npcID"] = 180070,
		},
		[343062] = {
			["npcID"] = 169042,
		},
		[197144] = {
			["npcID"] = 100216,
		},
		[355349] = {
			["npcID"] = 177646,
		},
		[107120] = {
			["encounterName"] = "Commander Ri'mok",
			["npcID"] = 56636,
			["encounterID"] = 1406,
		},
		[369818] = {
			["npcID"] = 184020,
		},
		[161222] = {
			["npcID"] = 88579,
		},
		[404496] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ebon Lieutenant",
			["npcID"] = 201383,
		},
		[210150] = {
			["encounterName"] = "Naraxas",
			["npcID"] = 91005,
			["encounterID"] = 1792,
		},
		[228606] = {
			["npcID"] = 114803,
		},
		[17883] = {
			["npcID"] = 18312,
		},
		[344922] = {
			["npcID"] = 168148,
		},
		[199193] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["npcID"] = 98970,
			["encounterID"] = 1835,
		},
		[356942] = {
			["npcID"] = 179837,
		},
		[355352] = {
			["encounterName"] = "Guardian of the First Ones",
			["npcID"] = 175731,
			["encounterID"] = 2436,
		},
		[194074] = {
			["npcID"] = 115638,
		},
		[341742] = {
			["npcID"] = 174070,
		},
		[210931] = {
			["encounterName"] = "Il'gynoth, The Heart of Corruption",
			["encounterID"] = 1873,
			["npcID"] = 105906,
		},
		[317792] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 163366,
		},
		[420881] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Ashwarden",
			["npcID"] = 208659,
		},
		[360295] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 181549,
		},
		[200218] = {
			["npcID"] = 101462,
		},
		[9574] = {
			["npcID"] = 18794,
		},
		[347163] = {
			["npcID"] = 176198,
		},
		[357402] = {
			["npcID"] = 180070,
		},
		[295291] = {
			["npcID"] = 154033,
		},
		[394262] = {
			["npcID"] = 185660,
		},
		[330782] = {
			["npcID"] = 174385,
		},
		[398483] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nimbulatus, Storm's Wrath",
			["npcID"] = 199667,
		},
		[343069] = {
			["npcID"] = 178478,
		},
		[386072] = {
			["npcID"] = 195354,
		},
		[412693] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Dreamcrusher",
			["npcID"] = 211057,
		},
		[324323] = {
			["npcID"] = 165919,
		},
		[375834] = {
			["encounterName"] = "Broodkeeper Diurna",
			["npcID"] = 190245,
			["encounterID"] = 2614,
		},
		[148002] = {
			["npcID"] = 72897,
		},
		[330784] = {
			["npcID"] = 174197,
		},
		[390169] = {
			["npcID"] = 187218,
		},
		[365596] = {
			["npcID"] = 180917,
		},
		[330786] = {
			["npcID"] = 169861,
		},
		[396313] = {
			["npcID"] = 189542,
		},
		[291878] = {
			["encounterName"] = "King Mechagon",
			["encounterID"] = 2260,
			["npcID"] = 150396,
		},
		[343072] = {
			["npcID"] = 172025,
		},
		[271401] = {
			["npcID"] = 161456,
		},
		[396314] = {
			["npcID"] = 197122,
		},
		[253068] = {
			["npcID"] = 127096,
		},
		[17618] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scholomance Dark Summoner",
			["npcID"] = 11582,
		},
		[353312] = {
			["encounterName"] = "Hylbrande",
			["npcID"] = 175663,
			["encounterID"] = 2426,
		},
		[396315] = {
			["source"] = "Stormcaller Narkena",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201539,
		},
		[396825] = {
			["npcID"] = 195836,
		},
		[172578] = {
			["isChanneled"] = true,
			["source"] = "Melded Berserker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 86372,
		},
		[328740] = {
			["npcID"] = 168992,
		},
		[396316] = {
			["npcID"] = 185353,
		},
		[332836] = {
			["npcID"] = 169927,
		},
		[334884] = {
			["encounterName"] = "Huntsman Altimor",
			["npcID"] = 171577,
			["encounterID"] = 2418,
		},
		[386078] = {
			["npcID"] = 187124,
		},
		[298025] = {
			["npcID"] = 166319,
		},
		[365717] = {
			["npcID"] = 183432,
		},
		[196127] = {
			["encounterName"] = "Serpentrix",
			["npcID"] = 91790,
			["encounterID"] = 1813,
		},
		[47248] = {
			["npcID"] = 25363,
		},
		[412700] = {
			["source"] = "Olphis the Molten",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181875,
		},
		[359458] = {
			["encounterName"] = "Kel'Thuzad",
			["npcID"] = 176973,
			["encounterID"] = 2422,
		},
		[408605] = {
			["source"] = "Sundered Devastator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198869,
		},
		[271406] = {
			["source"] = "Maw of Shul-Nagruth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 128610,
		},
		[378003] = {
			["npcID"] = 192680,
		},
		[392337] = {
			["npcID"] = 186853,
		},
		[341143] = {
			["npcID"] = 164476,
		},
		[265376] = {
			["npcID"] = 133663,
		},
		[16587] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vile Tutor",
			["npcID"] = 8548,
		},
		[369811] = {
			["npcID"] = 184020,
		},
		[384032] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Amethyzar the Glittering",
			["npcID"] = 193132,
		},
		[365715] = {
			["npcID"] = 184659,
		},
		[330793] = {
			["npcID"] = 179911,
		},
		[365905] = {
			["npcID"] = 184860,
		},
		[343080] = {
			["npcID"] = 169042,
		},
		[172677] = {
			["npcID"] = 109577,
		},
		[420895] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aurostor",
			["npcID"] = 209574,
		},
		[398370] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Calcifying Crawler",
			["npcID"] = 203342,
		},
		[147650] = {
			["npcID"] = 172071,
		},
		[394275] = {
			["npcID"] = 185660,
		},
		[162407] = {
			["encounterName"] = "Rocketspark and Borka",
			["encounterID"] = 1715,
			["npcID"] = 77803,
		},
		[396430] = {
			["npcID"] = 198343,
		},
		[410776] = {
			["source"] = "Infinite Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204658,
		},
		[369703] = {
			["encounterName"] = "Bromach",
			["encounterID"] = 2556,
			["npcID"] = 184018,
		},
		[147879] = {
			["npcID"] = 73175,
		},
		[336567] = {
			["npcID"] = 165976,
		},
		[343083] = {
			["npcID"] = 166156,
		},
		[295985] = {
			["npcID"] = 159755,
		},
		[396325] = {
			["source"] = "Disease Slasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197138,
		},
		[357418] = {
			["npcID"] = 178443,
		},
		[348071] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[363999] = {
			["npcID"] = 183747,
		},
		[404517] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vakan",
			["npcID"] = 199855,
		},
		[195108] = {
			["npcID"] = 91783,
		},
		[343086] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168112,
			["encounterID"] = 2417,
		},
		[234015] = {
			["encounterName"] = "Demonic Inquisition",
			["npcID"] = 116691,
			["encounterID"] = 2048,
		},
		[396327] = {
			["npcID"] = 199028,
		},
		[406566] = {
			["source"] = "Primal Lava Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202264,
		},
		[408614] = {
			["source"] = "Sundered Devastator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198869,
		},
		[265372] = {
			["npcID"] = 131585,
		},
		[365745] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 184792,
			["encounterID"] = 2553,
		},
		[324657] = {
			["npcID"] = 166551,
		},
		[424997] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Fiery Treant",
			["encounterID"] = 2731,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 208459,
		},
		[357550] = {
			["npcID"] = 176940,
		},
		[330565] = {
			["npcID"] = 164506,
		},
		[195109] = {
			["npcID"] = 91783,
		},
		[373803] = {
			["encounterName"] = "Melidrussa Chillworn",
			["npcID"] = 189893,
			["encounterID"] = 2609,
		},
		[377900] = {
			["npcID"] = 191833,
		},
		[396330] = {
			["npcID"] = 185357,
		},
		[357423] = {
			["npcID"] = 178443,
		},
		[326707] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 167406,
			["encounterID"] = 2407,
		},
		[295991] = {
			["npcID"] = 151331,
		},
		[336947] = {
			["npcID"] = 162853,
		},
		[300087] = {
			["npcID"] = 150251,
		},
		[334899] = {
			["npcID"] = 174802,
		},
		[328756] = {
			["encounterName"] = "Ingra Maloch",
			["encounterID"] = 2397,
			["npcID"] = 164567,
		},
		[353328] = {
			["npcID"] = 178964,
		},
		[398380] = {
			["source"] = "Seismodor, Earth's Wrath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199664,
		},
		[358728] = {
			["npcID"] = 176940,
		},
		[355479] = {
			["npcID"] = 179821,
		},
		[322614] = {
			["encounterName"] = "Tred'ova",
			["encounterID"] = 2393,
			["npcID"] = 164517,
		},
		[196787] = {
			["npcID"] = 99956,
		},
		[408620] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Obsidian Guard",
			["encounterID"] = 2682,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200836,
		},
		[16102] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowmoon Summoner",
			["npcID"] = 17395,
		},
		[420907] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Nymue",
			["encounterID"] = 2708,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206172,
		},
		[32330] = {
			["npcID"] = 17732,
		},
		[392239] = {
			["npcID"] = 187960,
		},
		[386096] = {
			["npcID"] = 183954,
		},
		[335019] = {
			["npcID"] = 156434,
		},
		[326712] = {
			["npcID"] = 167956,
		},
		[351285] = {
			["npcID"] = 178006,
		},
		[382002] = {
			["npcID"] = 193291,
		},
		[355381] = {
			["npcID"] = 177646,
		},
		[357429] = {
			["npcID"] = 178824,
		},
		[256589] = {
			["encounterName"] = "Council o' Captains",
			["event"] = "SPELL_CAST_START",
			["source"] = "Captain Raoul",
			["npcID"] = 126847,
		},
		[265368] = {
			["source"] = "Bewitched Captain",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131587,
		},
		[49309] = {
			["source"] = "Warsong Shaman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 27678,
		},
		[390194] = {
			["npcID"] = 191103,
		},
		[320571] = {
			["npcID"] = 163128,
		},
		[172588] = {
			["npcID"] = 86372,
		},
		[357516] = {
			["npcID"] = 177137,
		},
		[324667] = {
			["encounterName"] = "Globgrog",
			["encounterID"] = 2382,
			["npcID"] = 164255,
		},
		[43667] = {
			["encounterName"] = "Prince Keleseth",
			["npcID"] = 23953,
			["encounterID"] = 2026,
		},
		[354933] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176533,
		},
		[347151] = {
			["encounterName"] = "Timecap'n Hooktail",
			["npcID"] = 175546,
			["encounterID"] = 2419,
		},
		[341133] = {
			["npcID"] = 174090,
		},
		[322767] = {
			["npcID"] = 164921,
		},
		[386101] = {
			["npcID"] = 187124,
		},
		[422961] = {
			["encounterName"] = "Igira the Cruel",
			["source"] = "Igira the Cruel",
			["npcID"] = 200926,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2709,
		},
		[199210] = {
			["npcID"] = 96640,
		},
		[324776] = {
			["npcID"] = 166275,
		},
		[336958] = {
			["npcID"] = 162853,
		},
		[429108] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Cycle Warden",
			["encounterID"] = 2708,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209800,
		},
		[201298] = {
			["npcID"] = 100532,
		},
		[384134] = {
			["npcID"] = 192791,
		},
		[377912] = {
			["npcID"] = 192680,
		},
		[230951] = {
			["encounterName"] = "Spellblade Aluriel",
			["encounterID"] = 1871,
			["npcID"] = 115905,
		},
		[406581] = {
			["source"] = "Primal Lava Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202264,
		},
		[359483] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["encounterID"] = 2540,
			["npcID"] = 181224,
		},
		[320576] = {
			["npcID"] = 168886,
		},
		[339006] = {
			["npcID"] = 185121,
		},
		[365627] = {
			["npcID"] = 183396,
		},
		[163376] = {
			["encounterName"] = "Grimrail Enforcers",
			["encounterID"] = 1748,
			["npcID"] = 80808,
		},
		[330816] = {
			["npcID"] = 169861,
		},
		[355389] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 176703,
		},
		[398392] = {
			["source"] = "Sulfira Wanderling",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205808,
		},
		[398394] = {
			["source"] = "Deep Krolusk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205810,
		},
		[193069] = {
			["npcID"] = 96587,
		},
		[339008] = {
			["npcID"] = 161704,
		},
		[422966] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nolaki",
			["npcID"] = 208706,
		},
		[343104] = {
			["npcID"] = 170208,
		},
		[386107] = {
			["npcID"] = 183995,
		},
		[396346] = {
			["npcID"] = 190932,
		},
		[300102] = {
			["npcID"] = 152009,
		},
		[343105] = {
			["npcID"] = 170208,
		},
		[394294] = {
			["npcID"] = 191308,
		},
		[339010] = {
			["npcID"] = 185121,
		},
		[375870] = {
			["encounterName"] = "Broodkeeper Diurna",
			["npcID"] = 190245,
			["encounterID"] = 2614,
		},
		[400443] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Crumbling Scoria",
			["npcID"] = 201339,
		},
		[328772] = {
			["npcID"] = 159460,
		},
		[396348] = {
			["npcID"] = 197134,
		},
		[357441] = {
			["npcID"] = 177980,
		},
		[200238] = {
			["encounterName"] = "Shade of Xavius",
			["source"] = "Shade of Xavius",
			["encounterID"] = 1839,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 99192,
		},
		[328773] = {
			["npcID"] = 159460,
		},
		[396349] = {
			["npcID"] = 197133,
		},
		[398397] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magmaclaw Supplicant",
			["npcID"] = 203933,
		},
		[163379] = {
			["encounterName"] = "Grimrail Enforcers",
			["npcID"] = 80875,
			["encounterID"] = 1748,
		},
		[386111] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Screechflight Butcher",
			["npcID"] = 187650,
		},
		[330822] = {
			["npcID"] = 169859,
		},
		[365632] = {
			["npcID"] = 184742,
		},
		[334918] = {
			["npcID"] = 162047,
		},
		[347273] = {
			["npcID"] = 169041,
		},
		[396351] = {
			["encounterName"] = "Terros",
			["source"] = "Terros",
			["encounterID"] = 2639,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190496,
		},
		[422972] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valunei",
			["npcID"] = 208709,
		},
		[384065] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Amethyzar the Glittering",
			["npcID"] = 193132,
		},
		[258634] = {
			["npcID"] = 154129,
		},
		[420925] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aurostor",
			["npcID"] = 209574,
		},
		[398400] = {
			["source"] = "Seismodor, Earth's Wrath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199664,
		},
		[392257] = {
			["npcID"] = 195261,
		},
		[377923] = {
			["npcID"] = 186570,
		},
		[398399] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Chittering Acidclaw",
			["npcID"] = 201093,
		},
		[390210] = {
			["npcID"] = 199346,
		},
		[343112] = {
			["npcID"] = 166156,
		},
		[256551] = {
			["encounterName"] = "Ring of Booty",
			["source"] = "Sawtooth Shark",
			["npcID"] = 129359,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2095,
		},
		[354801] = {
			["npcID"] = 179580,
		},
		[345224] = {
			["npcID"] = 170039,
		},
		[192050] = {
			["encounterName"] = "Serpentrix",
			["npcID"] = 91808,
			["encounterID"] = 1813,
		},
		[334534] = {
			["npcID"] = 171805,
		},
		[396355] = {
			["npcID"] = 184461,
		},
		[398403] = {
			["source"] = "Furious Earth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200431,
		},
		[332937] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 170710,
			["encounterID"] = 2407,
		},
		[205361] = {
			["encounterName"] = "Krosus",
			["encounterID"] = 1842,
			["npcID"] = 101002,
		},
		[429116] = {
			["isChanneled"] = true,
			["source"] = "Inquisitor Fairbell",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 211930,
		},
		[331574] = {
			["npcID"] = 170217,
		},
		[330919] = {
			["npcID"] = 169912,
		},
		[377927] = {
			["npcID"] = 192690,
		},
		[398464] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Carcaxas",
			["npcID"] = 202836,
		},
		[429180] = {
			["source"] = "Cycle Warden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210518,
		},
		[351307] = {
			["npcID"] = 176572,
		},
		[86307] = {
			["encounterName"] = "Conclave of Wind",
			["source"] = "Anshal",
			["encounterID"] = 1035,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45870,
		},
		[396350] = {
			["npcID"] = 197133,
		},
		[360949] = {
			["npcID"] = 184268,
		},
		[334926] = {
			["npcID"] = 168878,
		},
		[160312] = {
			["npcID"] = 77134,
		},
		[398463] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magma Burster",
			["npcID"] = 200801,
		},
		[420933] = {
			["encounterName"] = "Volcoross",
			["source"] = "Volcoross",
			["npcID"] = 208478,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2737,
		},
		[212530] = {
			["encounterName"] = "Spellblade Aluriel",
			["encounterID"] = 1871,
			["npcID"] = 104881,
		},
		[377930] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Smoldering Feather",
			["npcID"] = 192692,
		},
		[157241] = {
			["npcID"] = 82220,
		},
		[339009] = {
			["npcID"] = 161704,
		},
		[355473] = {
			["npcID"] = 179821,
		},
		[328117] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 167406,
			["encounterID"] = 2407,
		},
		[328857] = {
			["encounterName"] = "Shriekwing",
			["npcID"] = 164406,
			["encounterID"] = 2398,
		},
		[425030] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Juggernaut",
			["npcID"] = 210172,
		},
		[334929] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168112,
			["encounterID"] = 2417,
		},
		[14887] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scholomance Necromancer",
			["npcID"] = 10477,
		},
		[206388] = {
			["encounterName"] = "Star Augur Etraeus",
			["encounterID"] = 1863,
			["npcID"] = 103758,
		},
		[365646] = {
			["npcID"] = 184651,
		},
		[302166] = {
			["npcID"] = 150190,
		},
		[320596] = {
			["encounterName"] = "Blightbone",
			["encounterID"] = 2387,
			["npcID"] = 162691,
		},
		[324666] = {
			["npcID"] = 166551,
		},
		[291928] = {
			["encounterName"] = "King Mechagon",
			["encounterID"] = 2260,
			["npcID"] = 150396,
		},
		[355477] = {
			["npcID"] = 179842,
		},
		[354242] = {
			["npcID"] = 179434,
		},
		[224488] = {
			["npcID"] = 112676,
		},
		[319831] = {
			["npcID"] = 172390,
		},
		[425033] = {
			["source"] = "Ignit the Firebranded",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209620,
		},
		[328789] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 169062,
			["encounterID"] = 2405,
		},
		[298073] = {
			["npcID"] = 156241,
		},
		[365649] = {
			["npcID"] = 184734,
		},
		[384079] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Amethyzar the Glittering",
			["npcID"] = 193132,
		},
		[202295] = {
			["npcID"] = 120698,
		},
		[396366] = {
			["source"] = "Tikarr Frostclaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201542,
		},
		[390223] = {
			["npcID"] = 187089,
		},
		[425035] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ancient Core Hound",
			["npcID"] = 210288,
		},
		[320600] = {
			["npcID"] = 162965,
		},
		[396367] = {
			["npcID"] = 197142,
		},
		[429176] = {
			["source"] = "Gilgoblin Aquamage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40943,
		},
		[392272] = {
			["npcID"] = 194439,
		},
		[361556] = {
			["npcID"] = 181685,
		},
		[386173] = {
			["encounterName"] = "Vexamus",
			["npcID"] = 194181,
			["encounterID"] = 2562,
		},
		[321894] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["encounterID"] = 2390,
			["npcID"] = 162693,
		},
		[200248] = {
			["npcID"] = 98280,
		},
		[336984] = {
			["npcID"] = 170302,
		},
		[157049] = {
			["npcID"] = 77889,
		},
		[270613] = {
			["npcID"] = 179079,
		},
		[204344] = {
			["npcID"] = 186634,
		},
		[225845] = {
			["encounterName"] = "High Botanist Tel'arn",
			["npcID"] = 112973,
			["encounterID"] = 1886,
		},
		[396370] = {
			["npcID"] = 195836,
		},
		[390290] = {
			["npcID"] = 190405,
		},
		[377991] = {
			["npcID"] = 192680,
		},
		[369750] = {
			["npcID"] = 188708,
		},
		[363607] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["encounterID"] = 2540,
			["npcID"] = 181244,
		},
		[154175] = {
			["encounterName"] = "Bonemaw",
			["npcID"] = 75452,
			["encounterID"] = 1679,
		},
		[163390] = {
			["encounterName"] = "Grimrail Enforcers",
			["npcID"] = 80808,
			["encounterID"] = 1748,
		},
		[369751] = {
			["npcID"] = 188296,
		},
		[365707] = {
			["npcID"] = 183429,
		},
		[394362] = {
			["npcID"] = 193232,
		},
		[392279] = {
			["npcID"] = 194089,
		},
		[225847] = {
			["encounterName"] = "High Botanist Tel'arn",
			["npcID"] = 112973,
			["encounterID"] = 1886,
		},
		[355418] = {
			["npcID"] = 178527,
		},
		[300129] = {
			["npcID"] = 152009,
		},
		[343132] = {
			["npcID"] = 169042,
		},
		[205370] = {
			["encounterName"] = "Krosus",
			["encounterID"] = 1842,
			["npcID"] = 101002,
		},
		[420947] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Urctos",
			["encounterID"] = 2728,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208363,
		},
		[369754] = {
			["encounterName"] = "Bromach",
			["npcID"] = 184018,
			["encounterID"] = 2556,
		},
		[334942] = {
			["encounterName"] = "Huntsman Altimor",
			["encounterID"] = 2418,
			["npcID"] = 165067,
		},
		[328799] = {
			["npcID"] = 177795,
		},
		[316511] = {
			["npcID"] = 170985,
		},
		[369788] = {
			["npcID"] = 188296,
		},
		[392280] = {
			["npcID"] = 197835,
		},
		[392281] = {
			["source"] = "Crystalus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193645,
		},
		[291973] = {
			["encounterName"] = "K.U.-J.0.",
			["encounterID"] = 2258,
			["npcID"] = 144246,
		},
		[390233] = {
			["npcID"] = 196971,
		},
		[425045] = {
			["source"] = "Splinterlimb",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209365,
		},
		[320610] = {
			["npcID"] = 165909,
		},
		[265352] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blight Toad",
			["npcID"] = 135052,
		},
		[365661] = {
			["npcID"] = 184651,
		},
		[196157] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["npcID"] = 99645,
			["encounterID"] = 1850,
		},
		[166464] = {
			["encounterName"] = "Archmage Sol",
			["npcID"] = 82682,
			["encounterID"] = 1751,
		},
		[351459] = {
			["npcID"] = 176572,
		},
		[166465] = {
			["encounterName"] = "Archmage Sol",
			["npcID"] = 82682,
			["encounterID"] = 1751,
		},
		[384092] = {
			["npcID"] = 193042,
		},
		[396360] = {
			["npcID"] = 184461,
		},
		[412761] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[343138] = {
			["npcID"] = 173575,
		},
		[392284] = {
			["npcID"] = 194091,
		},
		[361568] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 181546,
		},
		[377950] = {
			["encounterName"] = "Hackclaw's War-Band",
			["encounterID"] = 2570,
			["npcID"] = 186125,
		},
		[343165] = {
			["npcID"] = 169041,
		},
		[392285] = {
			["npcID"] = 193658,
		},
		[336996] = {
			["npcID"] = 162744,
		},
		[319775] = {
			["npcID"] = 162636,
		},
		[291946] = {
			["encounterName"] = "K.U.-J.0.",
			["encounterID"] = 2258,
			["npcID"] = 144246,
		},
		[384095] = {
			["npcID"] = 194254,
		},
		[394334] = {
			["npcID"] = 184847,
		},
		[212541] = {
			["encounterName"] = "Tirathon Saltheril",
			["npcID"] = 107101,
			["encounterID"] = 1815,
		},
		[320614] = {
			["encounterName"] = "Blightbone",
			["encounterID"] = 2387,
			["npcID"] = 164702,
		},
		[339046] = {
			["npcID"] = 175830,
		},
		[48280] = {
			["npcID"] = 77789,
		},
		[194112] = {
			["encounterName"] = "God-King Skovald",
			["encounterID"] = 1808,
			["npcID"] = 95675,
		},
		[38556] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Darkspear Spear Thrower",
			["npcID"] = 27560,
		},
		[312428] = {
			["npcID"] = 160399,
		},
		[394336] = {
			["npcID"] = 187353,
		},
		[355429] = {
			["npcID"] = 178165,
		},
		[357479] = {
			["npcID"] = 178653,
		},
		[200256] = {
			["npcID"] = 101549,
		},
		[386146] = {
			["npcID"] = 195354,
		},
		[371812] = {
			["npcID"] = 6527,
		},
		[275568] = {
			["npcID"] = 168442,
		},
		[425054] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Magister",
			["npcID"] = 208948,
		},
		[279664] = {
			["npcID"] = 143520,
		},
		[396386] = {
			["npcID"] = 188226,
		},
		[275569] = {
			["npcID"] = 160606,
		},
		[406644] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Response Team Watcher",
			["npcID"] = 202318,
		},
		[357497] = {
			["npcID"] = 179070,
		},
		[324716] = {
			["npcID"] = 166553,
		},
		[275570] = {
			["npcID"] = 166027,
		},
		[345210] = {
			["npcID"] = 170016,
		},
		[351353] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 177891,
		},
		[396388] = {
			["npcID"] = 199028,
		},
		[390245] = {
			["npcID"] = 188725,
		},
		[359547] = {
			["npcID"] = 181943,
		},
		[260666] = {
			["source"] = "Gilded Priestess",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 132126,
		},
		[377962] = {
			["npcID"] = 192914,
		},
		[423010] = {
			["source"] = "Dionaessa",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210813,
		},
		[47001] = {
			["npcID"] = 25368,
		},
		[361581] = {
			["npcID"] = 182822,
		},
		[265337] = {
			["source"] = "Gorestained Piglet",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135048,
		},
		[425062] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Steelshaper",
			["npcID"] = 210173,
		},
		[408677] = {
			["source"] = "Sundered Scaleguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198871,
		},
		[193092] = {
			["encounterName"] = "Hymdall",
			["encounterID"] = 1805,
			["npcID"] = 94960,
		},
		[369781] = {
			["encounterName"] = "The Lost Dwarves",
			["encounterID"] = 2555,
			["npcID"] = 184582,
		},
		[410728] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sabellian",
			["npcID"] = 201411,
		},
		[365678] = {
			["npcID"] = 184734,
		},
		[394344] = {
			["npcID"] = 190985,
		},
		[396392] = {
			["npcID"] = 199377,
		},
		[365676] = {
			["npcID"] = 184734,
		},
		[343155] = {
			["npcID"] = 173444,
		},
		[193093] = {
			["encounterName"] = "King Deepbeard",
			["npcID"] = 91797,
			["encounterID"] = 1812,
		},
		[355438] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 176563,
		},
		[341104] = {
			["npcID"] = 164477,
		},
		[212547] = {
			["encounterName"] = "Tirathon Saltheril",
			["encounterID"] = 1815,
			["npcID"] = 107101,
		},
		[304245] = {
			["source"] = "Abyssal Spearhunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 155271,
		},
		[377971] = {
			["npcID"] = 194342,
		},
		[373869] = {
			["npcID"] = 190205,
		},
		[200261] = {
			["npcID"] = 98243,
		},
		[400492] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Shrineguard",
			["npcID"] = 202803,
		},
		[347249] = {
			["encounterName"] = "So'azmi",
			["encounterID"] = 2437,
			["npcID"] = 175806,
		},
		[371824] = {
			["npcID"] = 46859,
		},
		[310392] = {
			["npcID"] = 159190,
		},
		[394348] = {
			["npcID"] = 187353,
		},
		[330868] = {
			["npcID"] = 160495,
		},
		[182856] = {
			["npcID"] = 161785,
		},
		[375919] = {
			["npcID"] = 182008,
		},
		[209477] = {
			["npcID"] = 105703,
		},
		[289914] = {
			["source"] = "Vessel of Bwonsamdi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 148673,
		},
		[373872] = {
			["source"] = "Monstrous Decay",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186227,
		},
		[359538] = {
			["npcID"] = 184058,
		},
		[320631] = {
			["encounterName"] = "Blightbone",
			["encounterID"] = 2387,
			["npcID"] = 164702,
		},
		[164426] = {
			["encounterName"] = "Fleshrender Nok'gar",
			["npcID"] = 81305,
			["encounterID"] = 1749,
		},
		[365682] = {
			["encounterName"] = "Artificer Xy'mox",
			["encounterID"] = 2553,
			["npcID"] = 184140,
		},
		[320637] = {
			["encounterName"] = "Blightbone",
			["encounterID"] = 2387,
			["npcID"] = 162691,
		},
		[398447] = {
			["source"] = "Seismodor, Earth's Wrath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199664,
		},
		[390256] = {
			["npcID"] = 190680,
		},
		[300155] = {
			["npcID"] = 164929,
		},
		[334967] = {
			["npcID"] = 171343,
		},
		[271487] = {
			["source"] = "Tentacle of Shul-Nagruth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 128609,
		},
		[396400] = {
			["npcID"] = 199028,
		},
		[406639] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Response Team Watcher",
			["npcID"] = 202318,
		},
		[343159] = {
			["npcID"] = 173444,
		},
		[353398] = {
			["encounterName"] = "Fatescribe Roh-Kalo",
			["npcID"] = 179010,
			["encounterID"] = 2431,
		},
		[76590] = {
			["source"] = "Faceless Watcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40936,
		},
		[283775] = {
			["npcID"] = 150744,
		},
		[375924] = {
			["encounterName"] = "The Lost Dwarves",
			["encounterID"] = 2555,
			["npcID"] = 184581,
		},
		[304253] = {
			["source"] = "Blackwater Oracle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 155272,
		},
		[388211] = {
			["npcID"] = 188122,
		},
		[365686] = {
			["npcID"] = 184533,
		},
		[294015] = {
			["npcID"] = 151476,
		},
		[394355] = {
			["npcID"] = 193063,
		},
		[330875] = {
			["npcID"] = 169893,
		},
		[300159] = {
			["npcID"] = 150276,
		},
		[334971] = {
			["encounterName"] = "Huntsman Altimor",
			["npcID"] = 165067,
			["encounterID"] = 2418,
		},
		[213576] = {
			["encounterName"] = "Cordana Felsong",
			["npcID"] = 95888,
			["encounterID"] = 1818,
		},
		[356853] = {
			["npcID"] = 179254,
		},
		[166478] = {
			["npcID"] = 82647,
		},
		[394337] = {
			["npcID"] = 187306,
		},
		[394357] = {
			["npcID"] = 197657,
		},
		[355450] = {
			["npcID"] = 178528,
		},
		[308352] = {
			["npcID"] = 156318,
		},
		[177731] = {
			["encounterName"] = "Witherbark",
			["npcID"] = 88862,
			["encounterID"] = 1746,
		},
		[209471] = {
			["encounterName"] = "Il'gynoth, The Heart of Corruption",
			["encounterID"] = 1873,
			["npcID"] = 105721,
		},
		[357510] = {
			["npcID"] = 177330,
		},
		[357499] = {
			["npcID"] = 177980,
		},
		[375929] = {
			["encounterName"] = "Balakar Khan",
			["encounterID"] = 2580,
			["npcID"] = 186151,
		},
		[382101] = {
			["npcID"] = 190259,
		},
		[357508] = {
			["npcID"] = 180495,
		},
		[13878] = {
			["npcID"] = 45569,
		},
		[392283] = {
			["npcID"] = 191413,
		},
		[106797] = {
			["encounterName"] = "Liu Flameheart",
			["npcID"] = 56732,
			["encounterID"] = 1416,
		},
		[429172] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Mindbender Ghur'sha",
			["encounterID"] = 1046,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40788,
		},
		[308355] = {
			["npcID"] = 156321,
		},
		[345225] = {
			["npcID"] = 170033,
		},
		[410743] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Ignited Plume",
			["encounterID"] = 2682,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205167,
		},
		[375943] = {
			["encounterName"] = "Balakar Khan",
			["encounterID"] = 2580,
			["npcID"] = 186151,
		},
		[227913] = {
			["source"] = "Felspite Dominator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 102788,
		},
		[293986] = {
			["npcID"] = 151476,
		},
		[304261] = {
			["source"] = "Blackwater Oracle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 155272,
		},
		[341084] = {
			["npcID"] = 179401,
		},
		[328791] = {
			["encounterName"] = "Lord Chamberlain",
			["encounterID"] = 2381,
			["npcID"] = 164218,
		},
		[366336] = {
			["npcID"] = 183927,
		},
		[320644] = {
			["encounterName"] = "Xav the Unfallen",
			["encounterID"] = 2366,
			["npcID"] = 162329,
		},
		[355456] = {
			["npcID"] = 178958,
		},
		[162066] = {
			["encounterName"] = "Skylord Tovra",
			["encounterID"] = 1736,
			["npcID"] = 80005,
		},
		[326745] = {
			["npcID"] = 170016,
		},
		[369791] = {
			["encounterName"] = "The Lost Dwarves",
			["encounterID"] = 2555,
			["npcID"] = 184582,
		},
		[330884] = {
			["npcID"] = 168244,
		},
		[425037] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ancient Core Hound",
			["npcID"] = 210288,
		},
		[343121] = {
			["npcID"] = 169043,
		},
		[209485] = {
			["npcID"] = 105704,
		},
		[359587] = {
			["npcID"] = 180052,
		},
		[38557] = {
			["source"] = "Frostmane Scout",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 41175,
		},
		[392318] = {
			["npcID"] = 193985,
		},
		[211501] = {
			["npcID"] = 105876,
		},
		[298122] = {
			["encounterName"] = "Abyssal Commander Sivara",
			["source"] = "Abyssal Commander Sivara",
			["encounterID"] = 2298,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 151881,
		},
		[414844] = {
			["encounterName"] = "The Headless Horseman",
			["source"] = "Headless Horseman",
			["npcID"] = 207438,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2725,
		},
		[375937] = {
			["encounterName"] = "Balakar Khan",
			["encounterID"] = 2580,
			["npcID"] = 186151,
		},
		[394367] = {
			["npcID"] = 187306,
		},
		[396415] = {
			["npcID"] = 187211,
		},
		[300171] = {
			["npcID"] = 150276,
		},
		[296019] = {
			["npcID"] = 151128,
		},
		[333612] = {
			["npcID"] = 164623,
		},
		[388225] = {
			["npcID"] = 192030,
		},
		[341127] = {
			["npcID"] = 158259,
		},
		[328781] = {
			["npcID"] = 159460,
		},
		[345223] = {
			["npcID"] = 170026,
		},
		[361088] = {
			["npcID"] = 181027,
		},
		[227917] = {
			["npcID"] = 114526,
		},
		[326794] = {
			["npcID"] = 167876,
		},
		[213583] = {
			["encounterName"] = "Cordana Felsong",
			["npcID"] = 95888,
			["encounterID"] = 1818,
		},
		[196144] = {
			["encounterName"] = "Serpentrix",
			["npcID"] = 91790,
			["encounterID"] = 1813,
		},
		[207278] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["npcID"] = 104215,
			["encounterID"] = 1868,
		},
		[384132] = {
			["encounterName"] = "Azureblade",
			["npcID"] = 186739,
			["encounterID"] = 2585,
		},
		[44189] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["source"] = "Kael'thas Sunstrider",
			["encounterID"] = 1894,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24664,
		},
		[355464] = {
			["npcID"] = 178165,
		},
		[357512] = {
			["npcID"] = 180495,
		},
		[375871] = {
			["encounterName"] = "Broodkeeper Diurna",
			["npcID"] = 190245,
			["encounterID"] = 2614,
		},
		[353417] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[357439] = {
			["npcID"] = 178653,
		},
		[341131] = {
			["npcID"] = 174194,
		},
		[334988] = {
			["npcID"] = 171596,
		},
		[353418] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[422964] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aurostor",
			["npcID"] = 209574,
		},
		[300177] = {
			["npcID"] = 150276,
		},
		[398479] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hibernating Worm",
			["npcID"] = 204742,
		},
		[320655] = {
			["encounterName"] = "Blightbone",
			["encounterID"] = 2387,
			["npcID"] = 162691,
		},
		[215204] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["npcID"] = 104918,
			["encounterID"] = 1868,
		},
		[373897] = {
			["source"] = "Decayed Elder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189531,
		},
		[375945] = {
			["npcID"] = 188292,
		},
		[112944] = {
			["encounterName"] = "Hoptallus",
			["npcID"] = 56717,
			["encounterID"] = 1413,
		},
		[396423] = {
			["npcID"] = 187211,
		},
		[398471] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nimbulatus, Storm's Wrath",
			["npcID"] = 199667,
		},
		[253517] = {
			["source"] = "Dazar'ai Confessor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122973,
		},
		[320657] = {
			["npcID"] = 170228,
		},
		[412806] = {
			["source"] = "Risen Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205804,
		},
		[365708] = {
			["npcID"] = 183432,
		},
		[398385] = {
			["source"] = "Ignit the Firebranded",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209620,
		},
		[196206] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["npcID"] = 99704,
			["encounterID"] = 1850,
		},
		[114864] = {
			["npcID"] = 59614,
		},
		[400430] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["encounterID"] = 2688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201261,
		},
		[359235] = {
			["npcID"] = 180906,
		},
		[410760] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wild Vortex",
			["npcID"] = 45912,
		},
		[207228] = {
			["encounterName"] = "Chronomatic Anomaly",
			["encounterID"] = 1865,
			["npcID"] = 104676,
		},
		[228625] = {
			["npcID"] = 183425,
		},
		[367656] = {
			["npcID"] = 185037,
		},
		[369806] = {
			["npcID"] = 184020,
		},
		[265371] = {
			["source"] = "Enthralled Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131585,
		},
		[375605] = {
			["npcID"] = 185272,
		},
		[375950] = {
			["npcID"] = 190377,
		},
		[362572] = {
			["npcID"] = 182728,
		},
		[255567] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "T'lonja",
			["npcID"] = 128455,
		},
		[361513] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["encounterID"] = 2540,
			["npcID"] = 181224,
		},
		[348566] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 180159,
		},
		[394381] = {
			["npcID"] = 185326,
		},
		[347283] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[15785] = {
			["npcID"] = 19306,
		},
		[196249] = {
			["npcID"] = 99649,
		},
		[345236] = {
			["npcID"] = 170157,
		},
		[322711] = {
			["encounterName"] = "Halkias, the Sin-Stained Goliath",
			["encounterID"] = 2401,
			["npcID"] = 165408,
		},
		[33506] = {
			["npcID"] = 18634,
		},
		[357871] = {
			["npcID"] = 177903,
		},
		[359459] = {
			["npcID"] = 184060,
		},
		[334051] = {
			["npcID"] = 168942,
		},
		[236115] = {
			["encounterName"] = "Sisters of the Moon",
			["npcID"] = 118374,
			["encounterID"] = 2050,
		},
		[392336] = {
			["npcID"] = 181775,
		},
		[328856] = {
			["npcID"] = 162528,
		},
		[396432] = {
			["npcID"] = 196380,
		},
		[300188] = {
			["npcID"] = 150253,
		},
		[167516] = {
			["npcID"] = 86809,
		},
		[209495] = {
			["npcID"] = 104270,
		},
		[265377] = {
			["npcID"] = 133663,
		},
		[227925] = {
			["npcID"] = 114526,
		},
		[396317] = {
			["npcID"] = 199030,
		},
		[369813] = {
			["npcID"] = 193288,
		},
		[412816] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Malygos",
			["npcID"] = 198974,
		},
		[341145] = {
			["npcID"] = 174090,
		},
		[148003] = {
			["npcID"] = 72896,
		},
		[213531] = {
			["encounterName"] = "Tichondrius",
			["encounterID"] = 1862,
			["npcID"] = 103685,
		},
		[273570] = {
			["source"] = "Ringtail Bandicoon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 139166,
		},
		[341146] = {
			["npcID"] = 174194,
		},
		[325223] = {
			["npcID"] = 166304,
		},
		[328860] = {
			["npcID"] = 162528,
		},
		[366566] = {
			["npcID"] = 184910,
		},
		[382102] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rebel Conjurer",
			["npcID"] = 195063,
		},
		[337063] = {
			["npcID"] = 166576,
		},
		[221521] = {
			["npcID"] = 111166,
		},
		[347291] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[373912] = {
			["encounterName"] = "Decatriarch Wratheye",
			["encounterID"] = 2569,
			["npcID"] = 186121,
		},
		[372808] = {
			["encounterName"] = "Melidrussa Chillworn",
			["npcID"] = 188252,
			["encounterID"] = 2609,
		},
		[344925] = {
			["npcID"] = 170302,
		},
		[338962] = {
			["npcID"] = 166499,
		},
		[336277] = {
			["npcID"] = 172265,
		},
		[358598] = {
			["npcID"] = 178897,
		},
		[394391] = {
			["npcID"] = 197409,
		},
		[396304] = {
			["source"] = "Vile Rothexer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197135,
		},
		[365723] = {
			["npcID"] = 183438,
		},
		[367771] = {
			["encounterName"] = "Anduin Wrynn",
			["npcID"] = 185607,
			["encounterID"] = 2546,
		},
		[394392] = {
			["npcID"] = 190259,
		},
		[421013] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Gnarlroot",
			["npcID"] = 209333,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2820,
		},
		[197141] = {
			["npcID"] = 100216,
		},
		[330631] = {
			["npcID"] = 180013,
		},
		[369677] = {
			["encounterName"] = "The Lost Dwarves",
			["encounterID"] = 2555,
			["npcID"] = 184580,
		},
		[412823] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Neltharion",
			["npcID"] = 198968,
		},
		[381701] = {
			["npcID"] = 190933,
		},
		[253526] = {
			["source"] = "Dazar'ai Confessor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122973,
		},
		[361630] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["encounterID"] = 2540,
			["npcID"] = 181224,
		},
		[168929] = {
			["encounterName"] = "Skulloc, Son of Gruul",
			["npcID"] = 83612,
			["encounterID"] = 1754,
		},
		[196916] = {
			["npcID"] = 98538,
		},
		[412678] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Klakatak",
			["npcID"] = 203618,
		},
		[229558] = {
			["npcID"] = 115402,
		},
		[340749] = {
			["npcID"] = 167548,
		},
		[252503] = {
			["npcID"] = 127189,
		},
		[369674] = {
			["npcID"] = 184022,
		},
		[369823] = {
			["npcID"] = 184023,
		},
		[340746] = {
			["npcID"] = 167848,
		},
		[347668] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[396078] = {
			["npcID"] = 193288,
		},
		[328869] = {
			["npcID"] = 157122,
		},
		[404636] = {
			["source"] = "Lieutenant Narlena",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202244,
		},
		[377854] = {
			["npcID"] = 190761,
		},
		[335013] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 166644,
			["encounterID"] = 2405,
		},
		[353443] = {
			["npcID"] = 179080,
		},
		[323137] = {
			["encounterName"] = "Ingra Maloch",
			["encounterID"] = 2397,
			["npcID"] = 164804,
		},
		[398494] = {
			["source"] = "Ember Shalewing",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204381,
		},
		[400542] = {
			["npcID"] = 193460,
		},
		[429051] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Erunak Stonespeaker",
			["encounterID"] = 1046,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40825,
		},
		[396447] = {
			["npcID"] = 192717,
		},
		[406686] = {
			["source"] = "Djaradin Magmashaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202257,
		},
		[326824] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 167999,
			["encounterID"] = 2407,
		},
		[263344] = {
			["npcID"] = 157094,
		},
		[371875] = {
			["npcID"] = 189266,
		},
		[390305] = {
			["npcID"] = 196971,
		},
		[394426] = {
			["npcID"] = 198503,
		},
		[369828] = {
			["npcID"] = 184023,
		},
		[330755] = {
			["npcID"] = 169859,
		},
		[398497] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Quartzite Sporebat",
			["npcID"] = 201306,
		},
		[294180] = {
			["npcID"] = 151773,
		},
		[205408] = {
			["encounterName"] = "Star Augur Etraeus",
			["encounterID"] = 1863,
			["npcID"] = 103758,
		},
		[363686] = {
			["npcID"] = 179043,
		},
		[295939] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["npcID"] = 150190,
			["encounterID"] = 2291,
		},
		[326827] = {
			["npcID"] = 162040,
		},
		[357370] = {
			["npcID"] = 178294,
		},
		[421024] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Pip",
			["encounterID"] = 2728,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208367,
		},
		[300207] = {
			["npcID"] = 150253,
		},
		[196194] = {
			["source"] = "Steeljaw Grizzly",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96677,
		},
		[420846] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Nymue",
			["encounterID"] = 2708,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206172,
		},
		[298160] = {
			["npcID"] = 185016,
		},
		[398500] = {
			["source"] = "Conflagrated Rock Cobra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203328,
		},
		[326829] = {
			["npcID"] = 167876,
		},
		[396476] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Piskato",
			["npcID"] = 195973,
		},
		[412835] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nozdormu",
			["npcID"] = 198971,
		},
		[398501] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hunting Rock Viper",
			["npcID"] = 203783,
		},
		[326830] = {
			["npcID"] = 163316,
		},
		[86331] = {
			["encounterName"] = "Grand Vizier Ertan",
			["source"] = "Grand Vizier Ertan",
			["encounterID"] = 1043,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43878,
		},
		[330926] = {
			["npcID"] = 174376,
		},
		[345078] = {
			["npcID"] = 170026,
		},
		[200291] = {
			["npcID"] = 98691,
		},
		[147674] = {
			["npcID"] = 72892,
		},
		[322736] = {
			["encounterName"] = "Hakkar, the Soulflayer",
			["encounterID"] = 2395,
			["npcID"] = 164558,
		},
		[260700] = {
			["encounterName"] = "Heartsbane Triad",
			["npcID"] = 131823,
			["encounterID"] = 2113,
		},
		[396269] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["npcID"] = 190245,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[361644] = {
			["encounterName"] = "Dausegne, the Fallen Oracle",
			["encounterID"] = 2540,
			["npcID"] = 181224,
		},
		[421029] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Pip",
			["encounterID"] = 2728,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208367,
		},
		[398504] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sulfurous Viper",
			["npcID"] = 205814,
		},
		[257629] = {
			["source"] = "Unfinished Stone Golem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201586,
		},
		[166335] = {
			["npcID"] = 82579,
		},
		[243295] = {
			["npcID"] = 121400,
		},
		[260701] = {
			["encounterName"] = "Heartsbane Triad",
			["npcID"] = 131825,
			["encounterID"] = 2113,
		},
		[239736] = {
			["npcID"] = 117042,
		},
		[329172] = {
			["encounterName"] = "Lord Chamberlain",
			["encounterID"] = 2381,
			["npcID"] = 165737,
		},
		[198245] = {
			["encounterName"] = "Smashspite the Hateful",
			["source"] = "Smashspite the Hateful",
			["encounterID"] = 1834,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98949,
		},
		[233983] = {
			["encounterName"] = "Demonic Inquisition",
			["npcID"] = 116691,
			["encounterID"] = 2048,
		},
		[382277] = {
			["npcID"] = 193457,
		},
		[378029] = {
			["encounterName"] = "Hackclaw's War-Band",
			["encounterID"] = 2570,
			["npcID"] = 186124,
		},
		[339122] = {
			["npcID"] = 167525,
		},
		[106612] = {
			["encounterName"] = "Wise Mari",
			["npcID"] = 56448,
			["encounterID"] = 1418,
		},
		[326836] = {
			["npcID"] = 162039,
		},
		[172649] = {
			["npcID"] = 81432,
		},
		[426974] = {
			["source"] = "Addled Arcanomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84990,
		},
		[365744] = {
			["npcID"] = 184651,
		},
		[326837] = {
			["npcID"] = 162040,
		},
		[328885] = {
			["encounterName"] = "Sun King's Salvation",
			["npcID"] = 168973,
			["encounterID"] = 2402,
		},
		[359768] = {
			["npcID"] = 181344,
		},
		[373936] = {
			["source"] = "Wilted Oak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186229,
		},
		[392366] = {
			["npcID"] = 197793,
		},
		[386223] = {
			["npcID"] = 194896,
		},
		[322743] = {
			["npcID"] = 177540,
		},
		[406493] = {
			["source"] = "Spinmarrow",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203480,
		},
		[335030] = {
			["npcID"] = 156779,
		},
		[320696] = {
			["npcID"] = 163121,
		},
		[265407] = {
			["source"] = "Banquet Steward",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131586,
		},
		[154221] = {
			["npcID"] = 78734,
		},
		[351413] = {
			["encounterName"] = "The Eye of the Jailer",
			["npcID"] = 175725,
			["encounterID"] = 2433,
		},
		[394416] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Flamewrought Eradicator",
			["npcID"] = 198311,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[322745] = {
			["npcID"] = 170206,
		},
		[373939] = {
			["encounterName"] = "Decatriarch Wratheye",
			["encounterID"] = 2569,
			["npcID"] = 190381,
		},
		[392369] = {
			["npcID"] = 190173,
		},
		[333299] = {
			["npcID"] = 169893,
		},
		[185854] = {
			["npcID"] = 92792,
		},
		[341176] = {
			["npcID"] = 166317,
		},
		[343224] = {
			["npcID"] = 175792,
		},
		[7279] = {
			["npcID"] = 6518,
		},
		[229567] = {
			["npcID"] = 115407,
		},
		[390323] = {
			["npcID"] = 189933,
		},
		[367798] = {
			["npcID"] = 181249,
		},
		[320069] = {
			["encounterName"] = "An Affront of Challengers",
			["encounterID"] = 2391,
			["npcID"] = 164451,
		},
		[374022] = {
			["encounterName"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["encounterID"] = 2605,
		},
		[373942] = {
			["encounterName"] = "Decatriarch Wratheye",
			["encounterID"] = 2569,
			["npcID"] = 186121,
		},
		[285889] = {
			["encounterName"] = "Conclave of the Chosen",
			["source"] = "Gonk's Aspect",
			["encounterID"] = 2268,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 144767,
		},
		[299475] = {
			["npcID"] = 150254,
		},
		[330940] = {
			["npcID"] = 168244,
		},
		[373943] = {
			["source"] = "Wilted Oak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186229,
		},
		[302272] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["npcID"] = 150190,
			["encounterID"] = 2291,
		},
		[62625] = {
			["source"] = "Ulduar Colossus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 33237,
		},
		[210537] = {
			["npcID"] = 159106,
		},
		[406708] = {
			["source"] = "Sindragosa",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201094,
		},
		[354117] = {
			["npcID"] = 179234,
		},
		[12058] = {
			["npcID"] = 125996,
		},
		[360859] = {
			["npcID"] = 181047,
		},
		[421059] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aurostor",
			["npcID"] = 209574,
		},
		[326847] = {
			["npcID"] = 167876,
		},
		[394423] = {
			["npcID"] = 187598,
		},
		[31516] = {
			["npcID"] = 16594,
		},
		[203371] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hill Ettin",
			["npcID"] = 102886,
		},
		[326848] = {
			["npcID"] = 163992,
		},
		[348953] = {
			["encounterName"] = "Kel'Thuzad",
			["encounterID"] = 2422,
			["npcID"] = 175559,
		},
		[334720] = {
			["npcID"] = 162096,
		},
		[373947] = {
			["npcID"] = 192949,
		},
		[356929] = {
			["npcID"] = 179837,
		},
		[333975] = {
			["npcID"] = 165998,
		},
		[173514] = {
			["npcID"] = 83389,
		},
		[151697] = {
			["npcID"] = 75426,
		},
		[400569] = {
			["source"] = "Haleh",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199370,
		},
		[205420] = {
			["encounterName"] = "Krosus",
			["encounterID"] = 1842,
			["npcID"] = 101002,
		},
		[388283] = {
			["encounterName"] = "Granyth",
			["encounterID"] = 2637,
			["npcID"] = 186616,
		},
		[15472] = {
			["npcID"] = 127103,
		},
		[326851] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 167406,
			["encounterID"] = 2407,
		},
		[278935] = {
			["npcID"] = 170737,
		},
		[322756] = {
			["npcID"] = 165137,
		},
		[203373] = {
			["npcID"] = 107449,
		},
		[302279] = {
			["encounterName"] = "HK-8 Aerial Oppression Unit",
			["npcID"] = 150295,
			["encounterID"] = 2291,
		},
		[201176] = {
			["npcID"] = 98792,
		},
		[363712] = {
			["npcID"] = 185434,
		},
		[171044] = {
			["npcID"] = 88512,
		},
		[314823] = {
			["npcID"] = 161436,
		},
		[394429] = {
			["npcID"] = 197650,
		},
		[362710] = {
			["npcID"] = 183229,
		},
		[382143] = {
			["npcID"] = 191536,
		},
		[253544] = {
			["source"] = "Dazar'ai Confessor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122973,
		},
		[394430] = {
			["npcID"] = 190579,
		},
		[322759] = {
			["encounterName"] = "Hakkar, the Soulflayer",
			["encounterID"] = 2395,
			["npcID"] = 164558,
		},
		[414652] = {
			["encounterName"] = "Iridikron",
			["source"] = "Iridikron",
			["npcID"] = 198933,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2669,
		},
		[257640] = {
			["source"] = "Unfinished Stone Golem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201586,
		},
		[111599] = {
			["npcID"] = 58757,
		},
		[272272] = {
			["npcID"] = 161692,
		},
		[347073] = {
			["npcID"] = 177187,
		},
		[196208] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["npcID"] = 99704,
			["encounterID"] = 1850,
		},
		[115006] = {
			["npcID"] = 58943,
		},
		[355525] = {
			["encounterName"] = "Painsmith Raznal",
			["npcID"] = 176523,
			["encounterID"] = 2430,
		},
		[336834] = {
			["npcID"] = 177295,
		},
		[425149] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Juggernaut",
			["npcID"] = 210172,
		},
		[295320] = {
			["npcID"] = 154033,
		},
		[330953] = {
			["npcID"] = 174385,
		},
		[6358] = {
			["npcID"] = 120526,
		},
		[201959] = {
			["npcID"] = 113536,
		},
		[211401] = {
			["npcID"] = 104295,
		},
		[157165] = {
			["npcID"] = 77132,
		},
		[333002] = {
			["encounterName"] = "Sun King's Salvation",
			["encounterID"] = 2402,
			["npcID"] = 165763,
		},
		[335694] = {
			["npcID"] = 157810,
		},
		[320716] = {
			["npcID"] = 177210,
		},
		[319994] = {
			["npcID"] = 174455,
		},
		[339706] = {
			["encounterName"] = "Mordretha",
			["encounterID"] = 2404,
			["npcID"] = 173549,
		},
		[359975] = {
			["encounterName"] = "Skolex, the Insatiable Ravener",
			["encounterID"] = 2542,
			["npcID"] = 181395,
		},
		[394436] = {
			["npcID"] = 189822,
		},
		[30481] = {
			["npcID"] = 16704,
		},
		[304063] = {
			["npcID"] = 155909,
		},
		[345772] = {
			["npcID"] = 175579,
		},
		[398254] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Winterpelt Defender",
			["npcID"] = 200362,
		},
		[391840] = {
			["npcID"] = 188711,
		},
		[195187] = {
			["encounterName"] = "Ash'Golm",
			["npcID"] = 99233,
			["encounterID"] = 1816,
		},
		[253548] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dazar'ai Augur",
			["npcID"] = 122972,
		},
		[369865] = {
			["npcID"] = 191611,
		},
		[330958] = {
			["npcID"] = 177418,
		},
		[423107] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hymdall",
			["npcID"] = 206644,
		},
		[324490] = {
			["encounterName"] = "Globgrog",
			["encounterID"] = 2382,
			["npcID"] = 164255,
		},
		[111772] = {
			["npcID"] = 58757,
		},
		[388296] = {
			["npcID"] = 192626,
		},
		[294884] = {
			["npcID"] = 152009,
		},
		[297166] = {
			["npcID"] = 152875,
		},
		[394440] = {
			["npcID"] = 192020,
		},
		[322486] = {
			["npcID"] = 164929,
		},
		[341199] = {
			["npcID"] = 173189,
		},
		[359629] = {
			["npcID"] = 178935,
		},
		[336810] = {
			["npcID"] = 160785,
		},
		[265433] = {
			["encounterName"] = "Sporecaller Zancha",
			["source"] = "Bloodsworn Defiler",
			["encounterID"] = 2112,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133912,
		},
		[341200] = {
			["npcID"] = 174100,
		},
		[392394] = {
			["npcID"] = 197697,
		},
		[350280] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 175611,
		},
		[338864] = {
			["npcID"] = 167526,
		},
		[431302] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Darkflame Shade",
			["npcID"] = 212422,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[392395] = {
			["npcID"] = 197698,
		},
		[394443] = {
			["npcID"] = 190579,
		},
		[11985] = {
			["npcID"] = 46914,
		},
		[385959] = {
			["npcID"] = 193244,
		},
		[335059] = {
			["npcID"] = 171696,
		},
		[408483] = {
			["source"] = "Elder Magma Serpent",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203846,
		},
		[396492] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Piskato",
			["npcID"] = 195973,
		},
		[385558] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["npcID"] = 190485,
			["encounterID"] = 2623,
		},
		[336809] = {
			["npcID"] = 162873,
		},
		[392098] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[330965] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 166971,
			["encounterID"] = 2412,
		},
		[357586] = {
			["npcID"] = 178653,
		},
		[392398] = {
			["npcID"] = 197509,
		},
		[375716] = {
			["encounterName"] = "Broodkeeper Diurna",
			["npcID"] = 191206,
			["encounterID"] = 2614,
		},
		[198263] = {
			["encounterName"] = "Odyn",
			["encounterID"] = 1809,
			["npcID"] = 95676,
		},
		[408476] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Erratic Remnant",
			["encounterID"] = 2693,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202824,
		},
		[294107] = {
			["npcID"] = 151773,
		},
		[337110] = {
			["encounterName"] = "The Council of Blood",
			["npcID"] = 166969,
			["encounterID"] = 2412,
		},
		[355540] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[385950] = {
			["npcID"] = 195314,
		},
		[332708] = {
			["npcID"] = 167532,
		},
		[320729] = {
			["encounterName"] = "Xav the Unfallen",
			["encounterID"] = 2366,
			["npcID"] = 162329,
		},
		[388305] = {
			["npcID"] = 193075,
		},
		[423117] = {
			["encounterName"] = "Volcoross",
			["source"] = "Volcoross",
			["npcID"] = 208478,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2737,
		},
		[332705] = {
			["npcID"] = 170490,
		},
		[355228] = {
			["npcID"] = 178631,
		},
		[330969] = {
			["npcID"] = 177437,
		},
		[341208] = {
			["npcID"] = 166317,
		},
		[355225] = {
			["npcID"] = 178142,
		},
		[34984] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fen Ray",
			["npcID"] = 17731,
		},
		[330970] = {
			["npcID"] = 177437,
		},
		[357591] = {
			["npcID"] = 177984,
		},
		[408466] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Drogbar Crystal-collector",
			["npcID"] = 204407,
		},
		[374735] = {
			["npcID"] = 190368,
		},
		[322780] = {
			["npcID"] = 156560,
		},
		[332612] = {
			["npcID"] = 170572,
		},
		[338003] = {
			["npcID"] = 165414,
		},
		[328940] = {
			["npcID"] = 170969,
		},
		[213238] = {
			["encounterName"] = "Tichondrius",
			["encounterID"] = 1862,
			["npcID"] = 103685,
		},
		[389446] = {
			["encounterName"] = "Watcher Irideus",
			["npcID"] = 196712,
			["encounterID"] = 2615,
		},
		[362841] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 183663,
			["encounterID"] = 2553,
		},
		[365272] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 181551,
		},
		[265445] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sigilback",
			["npcID"] = 161527,
		},
		[15585] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Murkblood Healer",
			["npcID"] = 17730,
		},
		[392406] = {
			["npcID"] = 197982,
		},
		[200732] = {
			["encounterName"] = "Dargrul the Underking",
			["npcID"] = 91007,
			["encounterID"] = 1793,
		},
		[412884] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ysera",
			["npcID"] = 198970,
		},
		[367502] = {
			["npcID"] = 181059,
		},
		[294115] = {
			["npcID"] = 151684,
		},
		[410837] = {
			["source"] = "Ritualmaster Skarna",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202274,
		},
		[396503] = {
			["npcID"] = 199030,
		},
		[89415] = {
			["npcID"] = 57783,
		},
		[323748] = {
			["npcID"] = 158642,
		},
		[406407] = {
			["source"] = "Calibrating Scent Matrix",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203606,
		},
		[206459] = {
			["encounterName"] = "Cordana Felsong",
			["encounterID"] = 1818,
			["npcID"] = 104293,
		},
		[390361] = {
			["npcID"] = 190070,
		},
		[207980] = {
			["encounterName"] = "Talixae Flamewreath",
			["npcID"] = 104274,
			["encounterID"] = 1869,
		},
		[293729] = {
			["npcID"] = 144295,
		},
		[374892] = {
			["npcID"] = 180705,
		},
		[389430] = {
			["npcID"] = 195846,
		},
		[337903] = {
			["npcID"] = 162874,
		},
		[420737] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elder Cassaphine",
			["npcID"] = 206818,
		},
		[412888] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ysera",
			["npcID"] = 198970,
		},
		[285232] = {
			["npcID"] = 144578,
		},
		[392411] = {
			["npcID"] = 195417,
		},
		[427223] = {
			["isChanneled"] = true,
			["source"] = "Putrid Pyromancer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 84957,
		},
		[412889] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zakajz",
			["npcID"] = 198953,
		},
		[377732] = {
			["npcID"] = 184319,
		},
		[373636] = {
			["npcID"] = 194544,
		},
		[172673] = {
			["npcID"] = 155197,
		},
		[191524] = {
			["npcID"] = 96657,
		},
		[38618] = {
			["npcID"] = 182155,
		},
		[398206] = {
			["npcID"] = 75979,
		},
		[334493] = {
			["npcID"] = 164862,
		},
		[391118] = {
			["encounterName"] = "Azureblade",
			["npcID"] = 191739,
			["encounterID"] = 2585,
		},
		[329904] = {
			["npcID"] = 157118,
		},
		[384223] = {
			["encounterName"] = "Azureblade",
			["npcID"] = 186739,
			["encounterID"] = 2585,
		},
		[238648] = {
			["encounterName"] = "Fury of the God Queen",
			["npcID"] = 120707,
		},
		[325312] = {
			["npcID"] = 177214,
		},
		[423131] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wrathion",
			["npcID"] = 210077,
		},
		[257656] = {
			["source"] = "Unfinished Stone Golem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201586,
		},
		[193152] = {
			["encounterName"] = "King Deepbeard",
			["npcID"] = 91797,
			["encounterID"] = 1812,
		},
		[375671] = {
			["npcID"] = 190900,
		},
		[376426] = {
			["npcID"] = 181840,
		},
		[15232] = {
			["npcID"] = 17694,
		},
		[394464] = {
			["npcID"] = 186511,
		},
		[355914] = {
			["encounterName"] = "The Eye of the Jailer",
			["npcID"] = 175725,
			["encounterID"] = 2433,
		},
		[152427] = {
			["npcID"] = 75211,
		},
		[355057] = {
			["npcID"] = 178139,
		},
		[225917] = {
			["source"] = "Rook Spiderling",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98677,
		},
		[227783] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114260,
		},
		[382179] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Senior Researcher Alydrus",
			["npcID"] = 208734,
		},
		[253562] = {
			["source"] = "Dazar'ai Augur",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122972,
		},
		[394466] = {
			["npcID"] = 189039,
		},
		[355963] = {
			["npcID"] = 152594,
		},
		[365798] = {
			["npcID"] = 183439,
		},
		[316779] = {
			["npcID"] = 178043,
		},
		[211777] = {
			["npcID"] = 106757,
		},
		[356021] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 177891,
		},
		[227966] = {
			["npcID"] = 114544,
		},
		[320376] = {
			["encounterName"] = "Stichflesh",
			["encounterID"] = 2389,
			["npcID"] = 164578,
		},
		[197250] = {
			["encounterName"] = "Cordana Felsong",
			["npcID"] = 95888,
			["encounterID"] = 1818,
		},
		[339179] = {
			["npcID"] = 166393,
		},
		[329310] = {
			["npcID"] = 158813,
		},
		[359282] = {
			["npcID"] = 184357,
		},
		[208697] = {
			["encounterName"] = "Il'gynoth, The Heart of Corruption",
			["encounterID"] = 1873,
			["npcID"] = 105322,
		},
		[373614] = {
			["npcID"] = 190034,
		},
		[349419] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[343276] = {
			["npcID"] = 173178,
		},
		[197251] = {
			["encounterName"] = "Cordana Felsong",
			["npcID"] = 95888,
			["encounterID"] = 1818,
		},
		[412900] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zakajz",
			["npcID"] = 198953,
		},
		[332657] = {
			["npcID"] = 164587,
		},
		[416996] = {
			["encounterName"] = "Igira the Cruel",
			["source"] = "Igira the Cruel",
			["npcID"] = 200926,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2709,
		},
		[162248] = {
			["npcID"] = 88579,
		},
		[396617] = {
			["npcID"] = 192534,
		},
		[393864] = {
			["npcID"] = 186516,
		},
		[367851] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[371984] = {
			["npcID"] = 188067,
		},
		[396520] = {
			["npcID"] = 196386,
		},
		[389804] = {
			["npcID"] = 187154,
		},
		[274792] = {
			["npcID"] = 140149,
		},
		[34083] = {
			["npcID"] = 21811,
		},
		[322802] = {
			["npcID"] = 161971,
		},
		[365805] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 181954,
		},
		[416999] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Paladin of the Silver Hand",
			["npcID"] = 208193,
		},
		[369901] = {
			["npcID"] = 186965,
		},
		[404713] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Neldris",
			["encounterID"] = 2693,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200912,
		},
		[389981] = {
			["npcID"] = 189955,
		},
		[357217] = {
			["npcID"] = 180389,
		},
		[46564] = {
			["npcID"] = 25371,
		},
		[388332] = {
			["npcID"] = 196439,
		},
		[334324] = {
			["npcID"] = 171376,
		},
		[266201] = {
			["npcID"] = 133836,
		},
		[340581] = {
			["npcID"] = 166263,
		},
		[329808] = {
			["encounterName"] = "Stone Legion Generals",
			["npcID"] = 168113,
			["encounterID"] = 2417,
		},
		[406357] = {
			["source"] = "Remnants of Sindragosa",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201089,
		},
		[408811] = {
			["source"] = "Sundered Siegemaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198874,
		},
		[351066] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["npcID"] = 175729,
			["encounterID"] = 2432,
		},
		[173751] = {
			["npcID"] = 155216,
		},
		[381517] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["npcID"] = 190485,
			["encounterID"] = 2623,
		},
		[323496] = {
			["npcID"] = 165872,
		},
		[392576] = {
			["npcID"] = 198047,
		},
		[355571] = {
			["encounterName"] = "Painsmith Raznal",
			["npcID"] = 176523,
			["encounterID"] = 2430,
		},
		[357619] = {
			["npcID"] = 177422,
		},
		[376049] = {
			["encounterName"] = "Chrono-Lord Deios",
			["encounterID"] = 2559,
			["npcID"] = 184125,
		},
		[394479] = {
			["npcID"] = 189039,
		},
		[165717] = {
			["npcID"] = 82002,
		},
		[357620] = {
			["npcID"] = 177443,
		},
		[359668] = {
			["npcID"] = 180051,
		},
		[156301] = {
			["npcID"] = 80935,
		},
		[290045] = {
			["source"] = "Rastari Enforcer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 147495,
		},
		[335474] = {
			["npcID"] = 158924,
		},
		[343287] = {
			["npcID"] = 173633,
		},
		[427245] = {
			["source"] = "Hapless Assistant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 212981,
		},
		[371956] = {
			["npcID"] = 188011,
		},
		[414959] = {
			["source"] = "Blazing Overseer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205140,
		},
		[270264] = {
			["npcID"] = 154131,
		},
		[296190] = {
			["npcID"] = 152517,
		},
		[141427] = {
			["npcID"] = 183258,
		},
		[73958] = {
			["npcID"] = 39464,
		},
		[192138] = {
			["encounterName"] = "Warlord Parjesh",
			["npcID"] = 97269,
			["encounterID"] = 1810,
		},
		[355979] = {
			["npcID"] = 177573,
		},
		[169613] = {
			["encounterName"] = "Yalnu",
			["npcID"] = 83846,
			["encounterID"] = 1756,
		},
		[368379] = {
			["npcID"] = 183516,
		},
		[61353] = {
			["npcID"] = 96779,
		},
		[320336] = {
			["npcID"] = 163126,
		},
		[355577] = {
			["npcID"] = 178171,
		},
		[390389] = {
			["source"] = "Sundered Survivalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207857,
		},
		[326909] = {
			["npcID"] = 169042,
		},
		[385862] = {
			["npcID"] = 195218,
		},
		[392007] = {
			["npcID"] = 192748,
		},
		[357626] = {
			["npcID"] = 177422,
		},
		[417011] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Paladin of the Silver Hand",
			["npcID"] = 208193,
		},
		[15254] = {
			["npcID"] = 18431,
		},
		[412479] = {
			["source"] = "Dinn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203646,
		},
		[166543] = {
			["encounterName"] = "Nitrogg Thundertower",
			["encounterID"] = 1732,
			["npcID"] = 82721,
		},
		[205231] = {
			["npcID"] = 103673,
		},
		[394487] = {
			["npcID"] = 190985,
		},
		[389953] = {
			["source"] = "Liskanoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193533,
		},
		[406333] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["encounterID"] = 2680,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201320,
		},
		[322171] = {
			["npcID"] = 172596,
		},
		[410870] = {
			["source"] = "Wild Vortex",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45912,
		},
		[165520] = {
			["npcID"] = 82003,
		},
		[20824] = {
			["npcID"] = 7379,
		},
		[386849] = {
			["npcID"] = 195846,
		},
		[332608] = {
			["npcID"] = 170572,
		},
		[322818] = {
			["encounterName"] = "Devos, Paragon of Loyalty",
			["npcID"] = 162061,
			["encounterID"] = 2359,
		},
		[260741] = {
			["encounterName"] = "Heartsbane Triad",
			["source"] = "Sister Briar",
			["encounterID"] = 2113,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131825,
		},
		[188046] = {
			["npcID"] = 198489,
		},
		[320771] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["encounterID"] = 2390,
			["npcID"] = 162693,
		},
		[371965] = {
			["npcID"] = 185828,
		},
		[357631] = {
			["npcID"] = 177982,
		},
		[377029] = {
			["npcID"] = 197665,
		},
		[410873] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gust Soldier",
			["npcID"] = 45477,
		},
		[355584] = {
			["npcID"] = 178171,
		},
		[406778] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wild Blaze Hound",
			["npcID"] = 205234,
		},
		[374339] = {
			["npcID"] = 190340,
		},
		[372296] = {
			["npcID"] = 189466,
		},
		[157331] = {
			["npcID"] = 77942,
		},
		[300296] = {
			["npcID"] = 150143,
		},
		[417018] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Alliance Conjuror",
			["npcID"] = 206351,
		},
		[394493] = {
			["npcID"] = 186367,
		},
		[404732] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Eternal Blaze",
			["encounterID"] = 2687,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201773,
		},
		[365825] = {
			["npcID"] = 182649,
		},
		[202740] = {
			["encounterName"] = "Tirathon Saltheril",
			["npcID"] = 95885,
			["encounterID"] = 1815,
		},
		[378112] = {
			["npcID"] = 189314,
		},
		[51963] = {
			["npcID"] = 27829,
		},
		[328475] = {
			["npcID"] = 164737,
		},
		[396075] = {
			["npcID"] = 197221,
		},
		[353540] = {
			["npcID"] = 179152,
		},
		[265487] = {
			["encounterName"] = "Sporecaller Zancha",
			["source"] = "Bloodsworn Defiler",
			["encounterID"] = 2112,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133912,
		},
		[348974] = {
			["encounterName"] = "The Eye of the Jailer",
			["npcID"] = 175725,
			["encounterID"] = 2433,
		},
		[343302] = {
			["npcID"] = 173446,
		},
		[396073] = {
			["npcID"] = 59544,
		},
		[363780] = {
			["npcID"] = 185435,
		},
		[406783] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Shadowflame Amalgamation",
			["encounterID"] = 2687,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201934,
		},
		[392449] = {
			["npcID"] = 190173,
		},
		[68948] = {
			["encounterName"] = "The Crown Chemical Co.",
			["source"] = "Apothecary Baxter",
			["npcID"] = 36565,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2879,
		},
		[179091] = {
			["npcID"] = 88783,
		},
		[227981] = {
			["npcID"] = 114541,
		},
		[400641] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["source"] = "Tyr, the Infinite Keeper",
			["encounterID"] = 2670,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198998,
		},
		[369925] = {
			["npcID"] = 197225,
		},
		[406304] = {
			["source"] = "Memory of a Traitorous Sister",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200826,
		},
		[357639] = {
			["npcID"] = 177422,
		},
		[335114] = {
			["encounterName"] = "Huntsman Altimor",
			["npcID"] = 165066,
			["encounterID"] = 2418,
		},
		[242316] = {
			["npcID"] = 115244,
		},
		[223579] = {
			["npcID"] = 102495,
		},
		[113999] = {
			["encounterName"] = "Rattlegore",
			["npcID"] = 59153,
			["encounterID"] = 1428,
		},
		[359688] = {
			["npcID"] = 181626,
		},
		[339353] = {
			["npcID"] = 158259,
		},
		[391895] = {
			["npcID"] = 197848,
		},
		[357641] = {
			["npcID"] = 177982,
		},
		[304831] = {
			["npcID"] = 156142,
		},
		[393793] = {
			["npcID"] = 187752,
		},
		[371976] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["npcID"] = 187967,
			["encounterID"] = 2592,
		},
		[178837] = {
			["npcID"] = 79510,
		},
		[381537] = {
			["npcID"] = 186392,
		},
		[378120] = {
			["npcID"] = 192799,
		},
		[347404] = {
			["npcID"] = 177861,
		},
		[185493] = {
			["npcID"] = 157016,
		},
		[392455] = {
			["source"] = "Yamakh",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195283,
		},
		[355062] = {
			["npcID"] = 178623,
		},
		[203163] = {
			["npcID"] = 102788,
		},
		[81236] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Plagued Hatchling",
			["npcID"] = 10678,
		},
		[335119] = {
			["encounterName"] = "Huntsman Altimor",
			["npcID"] = 165066,
			["encounterID"] = 2418,
		},
		[350894] = {
			["encounterName"] = "Remnant of Ner'zhul",
			["npcID"] = 175729,
			["encounterID"] = 2432,
		},
		[396552] = {
			["npcID"] = 199027,
		},
		[218424] = {
			["encounterName"] = "High Botanist Tel'arn",
			["npcID"] = 109041,
			["encounterID"] = 1886,
		},
		[417030] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Alliance Conjuror",
			["npcID"] = 206351,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2672,
		},
		[46191] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Ellrys Duskhallow",
			["npcID"] = 24558,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1895,
		},
		[404744] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["encounterID"] = 2688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201261,
		},
		[227985] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114328,
		},
		[400649] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["source"] = "Tyr, the Infinite Keeper",
			["encounterID"] = 2670,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198998,
		},
		[320787] = {
			["encounterName"] = "The Manastorms",
			["encounterID"] = 2394,
			["npcID"] = 164556,
		},
		[339217] = {
			["npcID"] = 173360,
		},
		[227646] = {
			["encounterName"] = "Moroes",
			["encounterID"] = 1961,
			["npcID"] = 114318,
		},
		[366074] = {
			["npcID"] = 183927,
		},
		[320788] = {
			["encounterName"] = "Nalthor the Rimebinder",
			["encounterID"] = 2390,
			["npcID"] = 162693,
		},
		[381602] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["npcID"] = 190484,
			["encounterID"] = 2623,
		},
		[357139] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 176532,
		},
		[253583] = {
			["isChanneled"] = true,
			["source"] = "Dazar'ai Augur",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 122972,
		},
		[328980] = {
			["npcID"] = 157464,
		},
		[380174] = {
			["encounterName"] = "Broodkeeper Diurna",
			["npcID"] = 190245,
			["encounterID"] = 2614,
		},
		[37551] = {
			["npcID"] = 16704,
		},
		[358082] = {
			["npcID"] = 179608,
		},
		[396041] = {
			["npcID"] = 197074,
		},
		[145053] = {
			["npcID"] = 72279,
		},
		[227987] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114328,
		},
		[102227] = {
			["npcID"] = 54642,
		},
		[205462] = {
			["npcID"] = 166137,
		},
		[358342] = {
			["npcID"] = 179851,
		},
		[328462] = {
			["npcID"] = 168845,
		},
		[294171] = {
			["npcID"] = 150959,
		},
		[116155] = {
			["npcID"] = 66413,
		},
		[339222] = {
			["npcID"] = 158259,
		},
		[268990] = {
			["npcID"] = 136998,
		},
		[35950] = {
			["npcID"] = 17670,
		},
		[394512] = {
			["npcID"] = 75652,
		},
		[347414] = {
			["encounterName"] = "So'azmi",
			["encounterID"] = 2437,
			["npcID"] = 175806,
		},
		[357653] = {
			["npcID"] = 177983,
		},
		[319383] = {
			["npcID"] = 165706,
		},
		[343722] = {
			["npcID"] = 162965,
		},
		[316855] = {
			["npcID"] = 177206,
		},
		[327648] = {
			["npcID"] = 168418,
		},
		[335129] = {
			["encounterName"] = "Huntsman Altimor",
			["npcID"] = 165066,
			["encounterID"] = 2418,
		},
		[328986] = {
			["npcID"] = 169159,
		},
		[340739] = {
			["npcID"] = 173855,
		},
		[256658] = {
			["npcID"] = 166029,
		},
		[200345] = {
			["isChanneled"] = true,
			["source"] = "Risen Archer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 98275,
		},
		[369942] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blazing Dreadsquall",
			["npcID"] = 191901,
		},
		[404754] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Null Glimmer",
			["npcID"] = 202971,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[414993] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elder Cassaphine",
			["npcID"] = 206818,
		},
		[417041] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "High Keeper Orendi",
			["npcID"] = 205874,
		},
		[323236] = {
			["encounterName"] = "Lord Chamberlain",
			["encounterID"] = 2381,
			["npcID"] = 164218,
		},
		[385517] = {
			["npcID"] = 187021,
		},
		[221577] = {
			["npcID"] = 111170,
		},
		[170124] = {
			["encounterName"] = "Yalnu",
			["npcID"] = 83846,
			["encounterID"] = 1756,
		},
		[353562] = {
			["encounterName"] = "Soulrender Dormazain",
			["encounterID"] = 2434,
			["npcID"] = 179177,
		},
		[388374] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Captured Raven",
			["npcID"] = 191508,
		},
		[390422] = {
			["npcID"] = 189933,
		},
		[198641] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["npcID"] = 98965,
			["encounterID"] = 1835,
		},
		[396020] = {
			["npcID"] = 59545,
		},
		[404757] = {
			["source"] = "Sundered Flame Manaweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203681,
		},
		[357659] = {
			["npcID"] = 178878,
		},
		[343325] = {
			["npcID"] = 173445,
		},
		[369946] = {
			["npcID"] = 188693,
		},
		[265511] = {
			["encounterName"] = "Sporecaller Zancha",
			["source"] = "Spirit Drain Totem",
			["encounterID"] = 2112,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135169,
		},
		[382233] = {
			["npcID"] = 193462,
		},
		[392472] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Galnmor",
			["npcID"] = 193853,
		},
		[172703] = {
			["npcID"] = 81432,
		},
		[388377] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Captured Raven",
			["npcID"] = 191508,
		},
		[387740] = {
			["npcID"] = 187745,
		},
		[340724] = {
			["npcID"] = 177217,
		},
		[257407] = {
			["encounterName"] = "Rezan",
			["source"] = "Rezan",
			["encounterID"] = 2086,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122963,
		},
		[341895] = {
			["npcID"] = 168647,
		},
		[397048] = {
			["npcID"] = 199333,
		},
		[160680] = {
			["encounterName"] = "Nitrogg Thundertower",
			["encounterID"] = 1732,
			["npcID"] = 79548,
		},
		[410904] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2673,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199000,
		},
		[389280] = {
			["npcID"] = 185814,
		},
		[374045] = {
			["npcID"] = 190342,
		},
		[192158] = {
			["encounterName"] = "Hyrja",
			["encounterID"] = 1806,
			["npcID"] = 97202,
		},
		[320804] = {
			["encounterName"] = "The Manastorms",
			["encounterID"] = 2394,
			["npcID"] = 164561,
		},
		[195473] = {
			["npcID"] = 91786,
		},
		[383452] = {
			["npcID"] = 193053,
		},
		[290438] = {
			["npcID"] = 144536,
		},
		[320805] = {
			["npcID"] = 172054,
		},
		[30937] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowmoon Channeler",
			["npcID"] = 17653,
		},
		[257402] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Harlan Sweete",
			["npcID"] = 126983,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[373201] = {
			["npcID"] = 187431,
		},
		[378143] = {
			["npcID"] = 190208,
		},
		[331045] = {
			["npcID"] = 169050,
		},
		[196870] = {
			["npcID"] = 91783,
		},
		[335141] = {
			["npcID"] = 165824,
		},
		[427290] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Galok Wingslicer",
			["npcID"] = 209047,
		},
		[388383] = {
			["npcID"] = 186431,
		},
		[120149] = {
			["npcID"] = 194853,
		},
		[226304] = {
			["npcID"] = 91000,
		},
		[320230] = {
			["encounterName"] = "Dealer Xy'exa",
			["encounterID"] = 2400,
			["npcID"] = 164450,
		},
		[115650] = {
			["npcID"] = 59522,
		},
		[381659] = {
			["npcID"] = 186962,
		},
		[392480] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Galnmor",
			["npcID"] = 193853,
		},
		[115030] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mud Elemental",
			["npcID"] = 199169,
		},
		[152962] = {
			["encounterName"] = "Nhallish",
			["npcID"] = 75829,
			["encounterID"] = 1688,
		},
		[341796] = {
			["npcID"] = 165066,
		},
		[393432] = {
			["npcID"] = 190340,
		},
		[325552] = {
			["encounterName"] = "Domina Venomblade",
			["encounterID"] = 2385,
			["npcID"] = 164266,
		},
		[199034] = {
			["npcID"] = 101637,
		},
		[357670] = {
			["npcID"] = 178859,
		},
		[204448] = {
			["encounterName"] = "Skorpyron",
			["encounterID"] = 1849,
			["npcID"] = 102263,
		},
		[394530] = {
			["npcID"] = 187617,
		},
		[404769] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Empty Recollection",
			["npcID"] = 202969,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[166565] = {
			["encounterName"] = "Nitrogg Thundertower",
			["encounterID"] = 1732,
			["npcID"] = 79548,
		},
		[384292] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Thunder Caller",
			["npcID"] = 194647,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2635,
		},
		[209568] = {
			["encounterName"] = "Grand Magistrix Elisande",
			["encounterID"] = 1872,
			["npcID"] = 105301,
		},
		[265523] = {
			["encounterName"] = "Sporecaller Zancha",
			["source"] = "Bloodsworn Defiler",
			["encounterID"] = 2112,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133912,
		},
		[388760] = {
			["encounterName"] = "Primal Tsunami",
			["encounterID"] = 2618,
			["npcID"] = 189729,
		},
		[376727] = {
			["encounterName"] = "Balakar Khan",
			["encounterID"] = 2580,
			["npcID"] = 186151,
		},
		[378150] = {
			["npcID"] = 191376,
		},
		[214688] = {
			["npcID"] = 107435,
		},
		[324909] = {
			["npcID"] = 164926,
		},
		[356886] = {
			["npcID"] = 180331,
		},
		[388911] = {
			["npcID"] = 196577,
		},
		[404171] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vakan",
			["npcID"] = 199855,
		},
		[227999] = {
			["npcID"] = 114542,
		},
		[392486] = {
			["npcID"] = 198047,
		},
		[333929] = {
			["npcID"] = 177443,
		},
		[380487] = {
			["encounterName"] = "Terros",
			["npcID"] = 190496,
			["encounterID"] = 2639,
		},
		[394950] = {
			["npcID"] = 193220,
		},
		[294195] = {
			["npcID"] = 144298,
		},
		[152818] = {
			["npcID"] = 75713,
		},
		[388392] = {
			["npcID"] = 196044,
		},
		[382249] = {
			["npcID"] = 185528,
		},
		[199674] = {
			["npcID"] = 97081,
		},
		[106841] = {
			["encounterName"] = "Liu Flameheart",
			["encounterID"] = 1416,
			["npcID"] = 56732,
		},
		[214690] = {
			["npcID"] = 107435,
		},
		[398632] = {
			["source"] = "Irontide Crackshot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200852,
		},
		[225100] = {
			["npcID"] = 104270,
		},
		[378155] = {
			["encounterName"] = "Hackclaw's War-Band",
			["encounterID"] = 2570,
			["npcID"] = 186125,
		},
		[395240] = {
			["npcID"] = 193134,
		},
		[324914] = {
			["npcID"] = 166299,
		},
		[393797] = {
			["npcID"] = 187751,
		},
		[354142] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[382563] = {
			["encounterName"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["encounterID"] = 2605,
		},
		[365870] = {
			["npcID"] = 183404,
		},
		[397904] = {
			["npcID"] = 200131,
		},
		[381280] = {
			["npcID"] = 193203,
		},
		[326230] = {
			["npcID"] = 165829,
		},
		[365871] = {
			["npcID"] = 184604,
		},
		[318773] = {
			["npcID"] = 166347,
		},
		[230050] = {
			["npcID"] = 115765,
		},
		[404779] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Contamination Investigator",
			["npcID"] = 202320,
		},
		[365872] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 181954,
		},
		[385005] = {
			["npcID"] = 190738,
		},
		[320822] = {
			["npcID"] = 165222,
		},
		[290106] = {
			["npcID"] = 144570,
		},
		[162475] = {
			["encounterName"] = "Tectus, The Living Mountain",
			["npcID"] = 78948,
			["encounterID"] = 1722,
		},
		[397394] = {
			["npcID"] = 193373,
		},
		[320823] = {
			["encounterName"] = "The Manastorms",
			["encounterID"] = 2394,
			["npcID"] = 164555,
		},
		[169851] = {
			["encounterName"] = "Archmage Sol",
			["npcID"] = 84990,
			["encounterID"] = 1751,
		},
		[361024] = {
			["npcID"] = 180085,
		},
		[384633] = {
			["encounterName"] = "Gutshot",
			["encounterID"] = 2567,
			["npcID"] = 186116,
		},
		[353588] = {
			["npcID"] = 177917,
		},
		[303300] = {
			["npcID"] = 186112,
		},
		[374066] = {
			["npcID"] = 190345,
		},
		[393266] = {
			["npcID"] = 197501,
		},
		[320825] = {
			["encounterName"] = "The Manastorms",
			["encounterID"] = 2394,
			["npcID"] = 164568,
		},
		[355637] = {
			["npcID"] = 179840,
		},
		[365876] = {
			["npcID"] = 184002,
		},
		[359733] = {
			["npcID"] = 178099,
		},
		[395652] = {
			["npcID"] = 188859,
		},
		[388402] = {
			["source"] = "Predatory Thresher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198779,
		},
		[418478] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Druid of the Claw",
			["npcID"] = 210684,
		},
		[359734] = {
			["npcID"] = 185755,
		},
		[395080] = {
			["npcID"] = 193134,
		},
		[159085] = {
			["npcID"] = 85775,
		},
		[324923] = {
			["npcID"] = 164926,
		},
		[332239] = {
			["npcID"] = 170418,
		},
		[392724] = {
			["npcID"] = 188447,
		},
		[355640] = {
			["npcID"] = 179840,
		},
		[262145] = {
			["npcID"] = 175670,
		},
		[377505] = {
			["encounterName"] = "Terros",
			["source"] = "Terros",
			["npcID"] = 190496,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2639,
		},
		[45235] = {
			["encounterName"] = "Eredar Twins",
			["encounterID"] = 727,
			["npcID"] = 25166,
		},
		[355641] = {
			["npcID"] = 179841,
		},
		[349498] = {
			["encounterName"] = "The Grand Menagerie",
			["encounterID"] = 2441,
			["npcID"] = 176556,
		},
		[393550] = {
			["npcID"] = 186401,
		},
		[389495] = {
			["npcID"] = 193171,
		},
		[355642] = {
			["npcID"] = 179841,
		},
		[377512] = {
			["npcID"] = 191628,
		},
		[164907] = {
			["npcID"] = 75715,
		},
		[419123] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[393830] = {
			["npcID"] = 191507,
		},
		[374073] = {
			["npcID"] = 190345,
		},
		[149463] = {
			["npcID"] = 72895,
		},
		[391842] = {
			["npcID"] = 187552,
		},
		[396599] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fulgurb",
			["npcID"] = 193170,
		},
		[330408] = {
			["npcID"] = 168525,
		},
		[375065] = {
			["npcID"] = 186226,
		},
		[172719] = {
			["source"] = "Infected Plunderer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86215,
		},
		[372027] = {
			["encounterName"] = "The Primal Council",
			["npcID"] = 187767,
			["encounterID"] = 2590,
		},
		[110099] = {
			["npcID"] = 57109,
		},
		[175791] = {
			["npcID"] = 81252,
		},
		[361789] = {
			["encounterName"] = "Prototype Pantheon",
			["encounterID"] = 2544,
			["npcID"] = 183149,
		},
		[388410] = {
			["encounterName"] = "Dathea, Ascended",
			["npcID"] = 189813,
			["encounterID"] = 2635,
		},
		[260773] = {
			["encounterName"] = "Heartsbane Triad",
			["source"] = "Sister Solena",
			["npcID"] = 131824,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2113,
		},
		[387668] = {
			["npcID"] = 195243,
		},
		[237870] = {
			["encounterName"] = "Fury of the God Queen",
			["encounterID"] = 2059,
			["npcID"] = 116499,
		},
		[426645] = {
			["source"] = "Naz'jar Ravager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 212673,
		},
		[199341] = {
			["npcID"] = 96934,
		},
		[384316] = {
			["encounterName"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["npcID"] = 186615,
		},
		[413145] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Harlan Sweete",
			["npcID"] = 126983,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[381592] = {
			["npcID"] = 184453,
		},
		[365887] = {
			["npcID"] = 184878,
		},
		[198944] = {
			["npcID"] = 95832,
		},
		[384648] = {
			["npcID"] = 197354,
		},
		[388696] = {
			["source"] = "Gahz'raxes",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200537,
		},
		[365888] = {
			["npcID"] = 184879,
		},
		[390952] = {
			["npcID"] = 188009,
		},
		[320838] = {
			["npcID"] = 160356,
		},
		[396605] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fulgurb",
			["npcID"] = 193170,
		},
		[374080] = {
			["npcID"] = 190348,
		},
		[31707] = {
			["npcID"] = 78116,
		},
		[394558] = {
			["npcID"] = 198577,
		},
		[410254] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Grommash Hellscream",
			["encounterID"] = 2672,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203678,
		},
		[390463] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["npcID"] = 189492,
			["encounterID"] = 2607,
		},
		[359747] = {
			["npcID"] = 181453,
		},
		[360176] = {
			["encounterName"] = "Vigilant Guardian",
			["encounterID"] = 2512,
			["npcID"] = 181856,
		},
		[353783] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 176565,
		},
		[104318] = {
			["encounterName"] = "The Tarragrue",
			["encounterID"] = 2423,
			["npcID"] = 55659,
		},
		[31664] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Frenzied Gargoyle",
			["npcID"] = 27691,
		},
		[345414] = {
			["npcID"] = 162114,
		},
		[342675] = {
			["npcID"] = 170882,
		},
		[385351] = {
			["source"] = "Unstable Arcanogolem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201554,
		},
		[385359] = {
			["encounterName"] = "Gutshot",
			["encounterID"] = 2567,
			["npcID"] = 186116,
		},
		[395217] = {
			["source"] = "Riverwalker Tamopo",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193240,
		},
		[320063] = {
			["encounterName"] = "An Affront of Challengers",
			["encounterID"] = 2391,
			["npcID"] = 164451,
		},
		[322000] = {
			["npcID"] = 166357,
		},
		[390983] = {
			["npcID"] = 192341,
		},
		[185425] = {
			["source"] = "Steeljaw Grizzly",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96677,
		},
		[362405] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 181954,
		},
		[199345] = {
			["encounterName"] = "Dresaron",
			["npcID"] = 99200,
			["encounterID"] = 1838,
		},
		[6535] = {
			["npcID"] = 3273,
		},
		[394563] = {
			["npcID"] = 190985,
		},
		[339274] = {
			["npcID"] = 173298,
		},
		[365895] = {
			["npcID"] = 183412,
		},
		[46279] = {
			["npcID"] = 25597,
		},
		[337227] = {
			["npcID"] = 169102,
		},
		[397931] = {
			["npcID"] = 57109,
		},
		[341323] = {
			["npcID"] = 173973,
		},
		[351562] = {
			["encounterName"] = "Sylvanas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 177893,
		},
		[387711] = {
			["isChanneled"] = true,
			["source"] = "Disoriented Watcher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 187745,
		},
		[396613] = {
			["npcID"] = 193133,
		},
		[390470] = {
			["npcID"] = 189933,
		},
		[407108] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Earthrender Ku'siva",
			["npcID"] = 199840,
		},
		[410234] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Grommash Hellscream",
			["encounterID"] = 2672,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203678,
		},
		[396614] = {
			["npcID"] = 197352,
		},
		[365898] = {
			["npcID"] = 185346,
		},
		[408901] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Animated Contaminant",
			["npcID"] = 202270,
		},
		[112992] = {
			["encounterName"] = "Hoptallus",
			["npcID"] = 56717,
			["encounterID"] = 1413,
		},
		[396615] = {
			["npcID"] = 193133,
		},
		[390472] = {
			["npcID"] = 189933,
		},
		[201399] = {
			["npcID"] = 100527,
		},
		[402759] = {
			["source"] = "Molten Crusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202284,
		},
		[404807] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Contamination Investigator",
			["npcID"] = 202320,
		},
		[353741] = {
			["npcID"] = 178958,
		},
		[193505] = {
			["npcID"] = 91000,
		},
		[427333] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rydra Scalegorger",
			["npcID"] = 209048,
		},
		[412999] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Winglord Dezran",
			["npcID"] = 201677,
		},
		[415047] = {
			["encounterName"] = "The Headless Horseman",
			["source"] = "Headless Horseman",
			["npcID"] = 207438,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2725,
		},
		[395112] = {
			["npcID"] = 193134,
		},
		[412275] = {
			["source"] = "Captain Reykal",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203355,
		},
		[372045] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["npcID"] = 189233,
			["encounterID"] = 2592,
		},
		[35511] = {
			["npcID"] = 16704,
		},
		[397093] = {
			["npcID"] = 196809,
		},
		[419144] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[169657] = {
			["npcID"] = 84767,
		},
		[365903] = {
			["npcID"] = 185346,
		},
		[335187] = {
			["npcID"] = 180032,
		},
		[337235] = {
			["encounterName"] = "Tred'ova",
			["encounterID"] = 2393,
			["npcID"] = 164517,
		},
		[372047] = {
			["npcID"] = 187897,
		},
		[401258] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Warlord Kagni",
			["encounterID"] = 2682,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199659,
		},
		[326997] = {
			["npcID"] = 167607,
		},
		[389213] = {
			["npcID"] = 192764,
		},
		[84837] = {
			["npcID"] = 45264,
		},
		[228019] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 114522,
		},
		[382791] = {
			["npcID"] = 193944,
		},
		[213685] = {
			["encounterName"] = "Cordana Felsong",
			["npcID"] = 95888,
			["encounterID"] = 1818,
		},
		[322903] = {
			["encounterName"] = "General Kaal",
			["npcID"] = 162099,
			["encounterID"] = 2363,
		},
		[232115] = {
			["npcID"] = 116549,
		},
		[384336] = {
			["npcID"] = 192800,
		},
		[64692] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mechagnome Battletank",
			["npcID"] = 34164,
		},
		[413005] = {
			["source"] = "Flame Additive",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205672,
		},
		[365907] = {
			["npcID"] = 184880,
		},
		[204471] = {
			["encounterName"] = "Skorpyron",
			["encounterID"] = 1849,
			["npcID"] = 102263,
		},
		[353621] = {
			["npcID"] = 177521,
		},
		[265568] = {
			["npcID"] = 133685,
		},
		[365908] = {
			["npcID"] = 184880,
		},
		[257784] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bilge Rat Brinescale",
			["npcID"] = 129600,
		},
		[388875] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gorjo the Crab Shackler",
			["npcID"] = 193226,
		},
		[218806] = {
			["encounterName"] = "High Botanist Tel'arn",
			["encounterID"] = 1886,
			["npcID"] = 109038,
		},
		[333145] = {
			["encounterName"] = "Sun King's Salvation",
			["npcID"] = 167566,
			["encounterID"] = 2402,
		},
		[392530] = {
			["npcID"] = 197799,
		},
		[402769] = {
			["source"] = "Sundered Flame Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203616,
		},
		[413008] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Highmountain Seer",
			["npcID"] = 201268,
		},
		[390483] = {
			["npcID"] = 197914,
		},
		[407055] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "High Seer Jhatal",
			["npcID"] = 199842,
		},
		[361815] = {
			["encounterName"] = "Anduin Wrynn",
			["encounterID"] = 2546,
			["npcID"] = 181954,
		},
		[218807] = {
			["encounterName"] = "High Botanist Tel'arn",
			["encounterID"] = 1886,
			["npcID"] = 109040,
		},
		[387224] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Mender",
			["npcID"] = 199942,
		},
		[155327] = {
			["encounterName"] = "Soulbinder Nyami",
			["npcID"] = 76177,
			["encounterID"] = 1685,
		},
		[213688] = {
			["npcID"] = 107024,
		},
		[322909] = {
			["npcID"] = 161971,
		},
		[308575] = {
			["npcID"] = 158161,
		},
		[196512] = {
			["encounterName"] = "Fenryr",
			["source"] = "Fenryr",
			["encounterID"] = 1807,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95674,
		},
		[402772] = {
			["source"] = "Deepstrider Alpha",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202312,
		},
		[372056] = {
			["encounterName"] = "The Primal Council",
			["npcID"] = 187772,
			["encounterID"] = 2590,
		},
		[398677] = {
			["source"] = "Irontide Cutthroat",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200849,
		},
		[359770] = {
			["encounterName"] = "Skolex, the Insatiable Ravener",
			["encounterID"] = 2542,
			["npcID"] = 181395,
		},
		[366288] = {
			["npcID"] = 184911,
		},
		[355675] = {
			["npcID"] = 176705,
		},
		[393361] = {
			["npcID"] = 188707,
		},
		[384344] = {
			["npcID"] = 194068,
		},
		[399059] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Electrified Colossal Stormfiend",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200943,
		},
		[273766] = {
			["npcID"] = 177539,
		},
		[393810] = {
			["npcID"] = 186064,
		},
		[425300] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Zaqali Flamemancer",
			["npcID"] = 212327,
		},
		[402775] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Shrineguard",
			["npcID"] = 202803,
		},
		[273767] = {
			["npcID"] = 177539,
		},
		[399948] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Tempest",
			["npcID"] = 200673,
		},
		[224953] = {
			["npcID"] = 163662,
		},
		[419158] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Invading Infernal",
			["npcID"] = 206765,
		},
		[388585] = {
			["source"] = "Snappy",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193228,
		},
		[398681] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Frigid Binder",
			["npcID"] = 200623,
		},
		[395060] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Im'bunata",
			["npcID"] = 196199,
		},
		[337249] = {
			["encounterName"] = "Tred'ova",
			["encounterID"] = 2393,
			["npcID"] = 164517,
		},
		[394798] = {
			["source"] = "Azra's Prized Peony",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193135,
		},
		[399061] = {
			["source"] = "Irontide Crusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200858,
		},
		[392539] = {
			["npcID"] = 197801,
		},
		[376483] = {
			["npcID"] = 187404,
		},
		[381512] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["npcID"] = 190485,
			["encounterID"] = 2623,
		},
		[406874] = {
			["source"] = "Acidhide Krolusk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202269,
		},
		[317894] = {
			["npcID"] = 159601,
		},
		[258199] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Crusher",
			["npcID"] = 130400,
		},
		[331108] = {
			["npcID"] = 160048,
		},
		[423257] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Druid of the Moon",
			["npcID"] = 210686,
		},
		[88170] = {
			["source"] = "Turbulent Squall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45924,
		},
		[198959] = {
			["npcID"] = 96664,
		},
		[395653] = {
			["source"] = "Matriarch Remalla",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193246,
		},
		[374112] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["npcID"] = 189234,
			["encounterID"] = 2592,
		},
		[384351] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Watcher Irideus",
			["encounterID"] = 2615,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189719,
		},
		[353635] = {
			["encounterName"] = "So'leah",
			["encounterID"] = 2442,
			["npcID"] = 177269,
		},
		[173762] = {
			["npcID"] = 155216,
		},
		[341349] = {
			["npcID"] = 173973,
		},
		[289350] = {
			["source"] = "Akunda the Devout",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 148617,
		},
		[394591] = {
			["npcID"] = 188509,
		},
		[405016] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Essence of Shadow",
			["encounterID"] = 2687,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201774,
		},
		[423260] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["npcID"] = 209090,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2786,
		},
		[327016] = {
			["npcID"] = 159156,
		},
		[337255] = {
			["encounterName"] = "Tred'ova",
			["encounterID"] = 2393,
			["npcID"] = 164517,
		},
		[396640] = {
			["encounterName"] = "Overgrown Ancient",
			["npcID"] = 196548,
			["encounterID"] = 2563,
		},
		[257315] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Irontide Grenadier",
			["npcID"] = 129758,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[12528] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spectral Tutor",
			["npcID"] = 10498,
		},
		[394593] = {
			["npcID"] = 193198,
		},
		[396641] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kapraku",
			["npcID"] = 203466,
		},
		[341352] = {
			["npcID"] = 173189,
		},
		[319821] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nemaeus",
			["npcID"] = 161529,
		},
		[394719] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Stormwrought Despoiler",
			["npcID"] = 198326,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[413024] = {
			["source"] = "Valow, Timesworn Keeper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201222,
		},
		[398690] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Glakis, Winter's Wrath",
			["npcID"] = 199502,
		},
		[342584] = {
			["npcID"] = 160507,
		},
		[393314] = {
			["encounterName"] = "Kurog Grimtotem",
			["source"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2605,
		},
		[363879] = {
			["npcID"] = 183747,
		},
		[382597] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Frost Shackler",
			["npcID"] = 190993,
		},
		[18399] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vectus",
			["npcID"] = 10432,
		},
		[106856] = {
			["encounterName"] = "Liu Flameheart",
			["encounterID"] = 1416,
			["npcID"] = 56732,
		},
		[165122] = {
			["encounterName"] = "Grimrail Enforcers",
			["npcID"] = 80816,
			["encounterID"] = 1748,
		},
		[423265] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["npcID"] = 209090,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2786,
		},
		[376272] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Tarasek Earthreaver",
			["npcID"] = 191225,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2614,
		},
		[409445] = {
			["source"] = "Voracious Magma Worm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203825,
		},
		[396645] = {
			["source"] = "Pahi'rys",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205540,
		},
		[411002] = {
			["source"] = "Cloud Prince",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45917,
		},
		[406058] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tentacle",
			["npcID"] = 203406,
		},
		[394598] = {
			["npcID"] = 187559,
		},
		[396646] = {
			["npcID"] = 199030,
		},
		[278755] = {
			["source"] = "Befouled Spirit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133685,
		},
		[376169] = {
			["npcID"] = 189905,
		},
		[209602] = {
			["encounterName"] = "Advisor Melandrus",
			["encounterID"] = 1870,
			["npcID"] = 104218,
		},
		[405812] = {
			["encounterName"] = "The Vigilant Steward, Zskarn",
			["source"] = "Zskarn",
			["encounterID"] = 2689,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202375,
		},
		[406886] = {
			["encounterName"] = "Blight of Galakrond",
			["source"] = "Blight of Galakrond",
			["encounterID"] = 2668,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198997,
		},
		[376170] = {
			["encounterName"] = "Decatriarch Wratheye",
			["encounterID"] = 2569,
			["npcID"] = 186121,
		},
		[345454] = {
			["npcID"] = 157833,
		},
		[355732] = {
			["npcID"] = 179446,
		},
		[372310] = {
			["npcID"] = 188447,
		},
		[376171] = {
			["npcID"] = 190377,
		},
		[386410] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["npcID"] = 189492,
			["encounterID"] = 2607,
		},
		[198892] = {
			["npcID"] = 97068,
		},
		[17290] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hellfire Imp",
			["npcID"] = 17477,
		},
		[426524] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Fiery Treant",
			["encounterID"] = 2731,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208459,
		},
		[402793] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gholna",
			["npcID"] = 199853,
		},
		[322931] = {
			["npcID"] = 158752,
		},
		[365934] = {
			["npcID"] = 184860,
		},
		[274213] = {
			["encounterName"] = "Sporecaller Zancha",
			["source"] = "Sporecaller Zancha",
			["encounterID"] = 2112,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131383,
		},
		[345457] = {
			["npcID"] = 157833,
		},
		[352158] = {
			["npcID"] = 175727,
		},
		[374126] = {
			["npcID"] = 195261,
		},
		[400747] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Damaged Titan Matrix",
			["npcID"] = 201441,
		},
		[378222] = {
			["source"] = "Cascade Swog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191561,
		},
		[165578] = {
			["encounterName"] = "Bonemaw",
			["npcID"] = 75452,
			["encounterID"] = 1679,
		},
		[225562] = {
			["encounterName"] = "Dresaron",
			["source"] = "Bloodtainted Burster",
			["encounterID"] = 1838,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 100532,
		},
		[384366] = {
			["npcID"] = 195324,
		},
		[400859] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Disturbed Magma",
			["npcID"] = 199835,
		},
		[389433] = {
			["source"] = "Qiraji Prophet",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195641,
		},
		[405450] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Slimes",
			["npcID"] = 203260,
		},
		[401319] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["encounterID"] = 2688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201261,
		},
		[395377] = {
			["npcID"] = 192769,
		},
		[406918] = {
			["source"] = "Djaradin Lavamancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202256,
		},
		[390511] = {
			["npcID"] = 189954,
		},
		[393443] = {
			["npcID"] = 188713,
		},
		[394607] = {
			["npcID"] = 193198,
		},
		[372082] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["npcID"] = 187967,
			["encounterID"] = 2592,
		},
		[396925] = {
			["npcID"] = 197149,
		},
		[196296] = {
			["encounterName"] = "Serpentrix",
			["npcID"] = 91792,
			["encounterID"] = 1813,
		},
		[405914] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Shadowflame Amalgamation",
			["encounterID"] = 2687,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201934,
		},
		[401193] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Quicksmack Magk",
			["npcID"] = 204651,
		},
		[393302] = {
			["npcID"] = 188673,
		},
		[400752] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Travard",
			["npcID"] = 198947,
		},
		[389412] = {
			["npcID"] = 196535,
		},
		[407199] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["encounterID"] = 2688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201261,
		},
		[399025] = {
			["source"] = "Arcane Revenant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200720,
		},
		[404896] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Eternal Blaze",
			["encounterID"] = 2687,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201773,
		},
		[389443] = {
			["encounterName"] = "Watcher Irideus",
			["npcID"] = 196712,
			["encounterID"] = 2615,
		},
		[395177] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Massive Magmashell",
			["npcID"] = 193152,
		},
		[300414] = {
			["npcID"] = 150143,
		},
		[31602] = {
			["encounterName"] = "Nerub'enkan",
			["source"] = "Nerub'enkan",
			["npcID"] = 10437,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 480,
		},
		[385310] = {
			["npcID"] = 195119,
		},
		[44475] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunblade Mage Guard",
			["npcID"] = 24683,
		},
		[387596] = {
			["npcID"] = 195877,
		},
		[408946] = {
			["source"] = "Sundered Preserver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205735,
		},
		[419185] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Invading Infernal",
			["npcID"] = 206765,
		},
		[372087] = {
			["npcID"] = 187897,
		},
		[398708] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Tempest",
			["npcID"] = 200673,
		},
		[400877] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Smoldering Hound",
			["npcID"] = 199823,
		},
		[413147] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Harlan Sweete",
			["npcID"] = 126983,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[331133] = {
			["npcID"] = 160048,
		},
		[276754] = {
			["npcID"] = 156245,
		},
		[394746] = {
			["npcID"] = 193273,
		},
		[407296] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Erupting Shadowflame",
			["npcID"] = 199838,
		},
		[339325] = {
			["npcID"] = 173298,
		},
		[328206] = {
			["encounterName"] = "Echelon",
			["encounterID"] = 2380,
			["npcID"] = 164185,
		},
		[257732] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Enforcer",
			["npcID"] = 129602,
		},
		[183088] = {
			["npcID"] = 113998,
		},
		[46036] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunblade Magister",
			["npcID"] = 24685,
		},
		[405117] = {
			["source"] = "Lady Shaz'ra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200885,
		},
		[376186] = {
			["npcID"] = 189235,
		},
		[402807] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Glittering Shard Construct",
			["npcID"] = 202326,
		},
		[82800] = {
			["encounterName"] = "The Crown Chemical Co.",
			["source"] = "Fel Queen's Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207152,
		},
		[398712] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nimbulatus, Storm's Wrath",
			["npcID"] = 199667,
		},
		[392569] = {
			["npcID"] = 197697,
		},
		[410999] = {
			["source"] = "Armored Mistral",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45915,
		},
		[396665] = {
			["npcID"] = 199027,
		},
		[387585] = {
			["encounterName"] = "Primal Tsunami",
			["npcID"] = 189729,
			["encounterID"] = 2618,
		},
		[335233] = {
			["npcID"] = 177245,
		},
		[411000] = {
			["source"] = "Armored Mistral",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45915,
		},
		[372093] = {
			["npcID"] = 191110,
		},
		[403772] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vakan",
			["npcID"] = 199855,
		},
		[409745] = {
			["source"] = "Kretchenwrath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201673,
		},
		[411001] = {
			["source"] = "Lurking Tempest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45704,
		},
		[403034] = {
			["source"] = "Fyrakk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200832,
		},
		[389250] = {
			["source"] = "Blacktalon Slayer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201831,
		},
		[376190] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Brackenhide Scrapper",
			["npcID"] = 186362,
		},
		[394620] = {
			["npcID"] = 188707,
		},
		[395097] = {
			["source"] = "Makhra the Ashtouched",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195409,
		},
		[300424] = {
			["npcID"] = 150160,
		},
		[407640] = {
			["encounterName"] = "The Amalgamation Chamber",
			["source"] = "Essence of Shadow",
			["encounterID"] = 2687,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201774,
		},
		[390715] = {
			["encounterName"] = "Eranog",
			["encounterID"] = 2587,
			["npcID"] = 184972,
		},
		[407332] = {
			["source"] = "Agitated Dustmoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202316,
		},
		[405929] = {
			["source"] = "Spellsworn Crecheguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203368,
		},
		[392574] = {
			["npcID"] = 198047,
		},
		[394622] = {
			["npcID"] = 197354,
		},
		[278961] = {
			["source"] = "Diseased Lasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133870,
		},
		[401109] = {
			["source"] = "Crimson Oldblood",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201054,
		},
		[257736] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Irontide Stormcaller",
			["npcID"] = 126919,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[406934] = {
			["source"] = "Djaradin Lavamancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202256,
		},
		[403625] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[409041] = {
			["source"] = "Failed Prototype",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203927,
		},
		[351621] = {
			["npcID"] = 176573,
		},
		[401022] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["encounterID"] = 2684,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201668,
		},
		[396991] = {
			["npcID"] = 187240,
		},
		[398720] = {
			["source"] = "Irontide Bulwark",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200850,
		},
		[408959] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Warlord Kagni",
			["encounterID"] = 2682,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199659,
		},
		[242379] = {
			["npcID"] = 121459,
		},
		[30853] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowmoon Summoner",
			["npcID"] = 17395,
		},
		[409931] = {
			["source"] = "Djaradin Commander",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202109,
		},
		[188114] = {
			["encounterName"] = "Rokmora",
			["npcID"] = 91003,
			["encounterID"] = 1790,
		},
		[407107] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Earthrender Ku'siva",
			["npcID"] = 199840,
		},
		[396674] = {
			["npcID"] = 193153,
		},
		[390531] = {
			["npcID"] = 191103,
		},
		[392579] = {
			["npcID"] = 197831,
		},
		[370054] = {
			["npcID"] = 181875,
		},
		[396675] = {
			["source"] = "Sundered Flame Cleaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203682,
		},
		[417678] = {
			["source"] = "Meantron Prototype",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206132,
		},
		[413151] = {
			["encounterName"] = "Grand Vizier Ertan",
			["source"] = "Grand Vizier Ertan",
			["npcID"] = 43878,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1043,
		},
		[230094] = {
			["npcID"] = 115765,
		},
		[328170] = {
			["npcID"] = 162057,
		},
		[232142] = {
			["encounterName"] = "Opera Hall",
			["encounterID"] = 1957,
			["npcID"] = 116574,
		},
		[257739] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blacktooth Scrapper",
			["npcID"] = 129529,
		},
		[209617] = {
			["encounterName"] = "Grand Magistrix Elisande",
			["encounterID"] = 1872,
			["npcID"] = 105301,
		},
		[413059] = {
			["source"] = "Shadow Canister",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206019,
		},
		[365961] = {
			["npcID"] = 183406,
		},
		[376200] = {
			["npcID"] = 194816,
		},
		[78196] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Iron Pyromancer",
			["npcID"] = 41902,
		},
		[413060] = {
			["source"] = "Fire Canister",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206022,
		},
		[300434] = {
			["npcID"] = 150160,
		},
		[418121] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Klaxxi Monstrosity",
			["npcID"] = 207923,
		},
		[46035] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunblade Magister",
			["npcID"] = 24685,
		},
		[413622] = {
			["source"] = "Infinite Infiltrator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206214,
		},
		[130414] = {
			["npcID"] = 82001,
		},
		[399086] = {
			["source"] = "Zaqali Firecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200454,
		},
		[329104] = {
			["encounterName"] = "Lord Chamberlain",
			["encounterID"] = 2381,
			["npcID"] = 164218,
		},
		[372107] = {
			["encounterName"] = "Kokia Blazehoof",
			["npcID"] = 189232,
			["encounterID"] = 2606,
		},
		[300436] = {
			["npcID"] = 150146,
		},
		[200404] = {
			["encounterName"] = "Dargrul the Underking",
			["encounterID"] = 1793,
			["npcID"] = 91007,
		},
		[417701] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Peeved",
			["npcID"] = 205428,
		},
		[189227] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crawliac Cinderwitch",
			["npcID"] = 95174,
		},
		[415435] = {
			["source"] = "Coalesced Moment",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206064,
		},
		[400777] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["encounterID"] = 2680,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201320,
		},
		[388716] = {
			["encounterName"] = "Broodkeeper Diurna",
			["npcID"] = 190245,
			["encounterID"] = 2614,
		},
		[407207] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["encounterID"] = 2684,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201668,
		},
		[407121] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Horde Warlock",
			["encounterID"] = 2672,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203857,
		},
		[408969] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Monstrous Mud",
			["npcID"] = 192519,
		},
		[329107] = {
			["encounterName"] = "Artificer Xy'mox",
			["npcID"] = 169219,
			["encounterID"] = 2405,
		},
		[409477] = {
			["source"] = "Kretchenwrath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201673,
		},
		[374158] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hecutta",
			["npcID"] = 207300,
		},
		[335251] = {
			["npcID"] = 170064,
		},
		[424401] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Winterskorn Vrykul",
			["npcID"] = 206037,
		},
		[322965] = {
			["npcID"] = 164033,
		},
		[341395] = {
			["npcID"] = 174012,
		},
		[413133] = {
			["source"] = "Forgemaster Kraglin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201625,
		},
		[168666] = {
			["encounterName"] = "Yalnu",
			["npcID"] = 84358,
			["encounterID"] = 1756,
		},
		[210645] = {
			["npcID"] = 98733,
		},
		[401248] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["source"] = "Tyr, the Infinite Keeper",
			["encounterID"] = 2670,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198998,
		},
		[376208] = {
			["encounterName"] = "Chrono-Lord Deios",
			["npcID"] = 184125,
			["encounterID"] = 2559,
		},
		[419211] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felbark the Defiler",
			["npcID"] = 207094,
		},
		[401297] = {
			["source"] = "Haleh",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199370,
		},
		[397134] = {
			["encounterName"] = "The Primal Council",
			["npcID"] = 187772,
			["encounterID"] = 2590,
		},
		[401383] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[258768] = {
			["npcID"] = 193154,
		},
		[322968] = {
			["npcID"] = 165111,
		},
		[412046] = {
			["source"] = "Monstrous Magmaclaw Snapper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204214,
		},
		[407159] = {
			["encounterName"] = "Blight of Galakrond",
			["source"] = "Blight of Galakrond",
			["encounterID"] = 2668,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198997,
		},
		[416152] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2673,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199000,
		},
		[417675] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Meantron Prototype",
			["npcID"] = 206132,
		},
		[250096] = {
			["encounterName"] = "Yazma",
			["source"] = "Yazma",
			["encounterID"] = 2087,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122968,
		},
		[359829] = {
			["encounterName"] = "Skolex, the Insatiable Ravener",
			["encounterID"] = 2542,
			["npcID"] = 181395,
		},
		[345495] = {
			["npcID"] = 175519,
		},
		[396689] = {
			["npcID"] = 186859,
		},
		[369061] = {
			["encounterName"] = "Emberon",
			["encounterID"] = 2558,
			["npcID"] = 184422,
		},
		[392594] = {
			["npcID"] = 186777,
		},
		[383062] = {
			["npcID"] = 189531,
		},
		[157406] = {
			["npcID"] = 82196,
		},
		[405043] = {
			["source"] = "Primal Nightflame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200931,
		},
		[154442] = {
			["encounterName"] = "Ner'zhul",
			["npcID"] = 76407,
			["encounterID"] = 1682,
		},
		[418200] = {
			["source"] = "Infinite Riftmage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208698,
		},
		[418159] = {
			["source"] = "Varian Wrynn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205308,
		},
		[390548] = {
			["encounterName"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["encounterID"] = 2605,
		},
		[163550] = {
			["encounterName"] = "Nitrogg Thundertower",
			["encounterID"] = 1732,
			["npcID"] = 79545,
		},
		[418000] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fel-Corrupted Kaldorei",
			["npcID"] = 206146,
		},
		[355737] = {
			["npcID"] = 179446,
		},
		[316830] = {
			["npcID"] = 165056,
		},
		[417243] = {
			["source"] = "Great Glorious Alliance Lieutenant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207581,
		},
		[370072] = {
			["npcID"] = 186854,
		},
		[29583] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Phantom Guest",
			["npcID"] = 16409,
		},
		[341404] = {
			["npcID"] = 174017,
		},
		[327891] = {
			["encounterName"] = "Mueh'zala",
			["encounterID"] = 2396,
			["npcID"] = 169506,
		},
		[418192] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shackled Flames of the Betrayer",
			["npcID"] = 207815,
		},
		[347548] = {
			["encounterName"] = "Sylvannas Windrunner",
			["encounterID"] = 2435,
			["npcID"] = 175732,
		},
		[407125] = {
			["source"] = "Horde Raider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207969,
		},
		[417752] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Overlord Mechagon",
			["npcID"] = 205309,
		},
		[296355] = {
			["npcID"] = 152612,
		},
		[356160] = {
			["npcID"] = 177567,
		},
		[341406] = {
			["npcID"] = 174012,
		},
		[368027] = {
			["encounterName"] = "Lihuvim, Principal Architect",
			["encounterID"] = 2539,
			["npcID"] = 182169,
		},
		[419221] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cho'gall",
			["npcID"] = 208212,
		},
		[322977] = {
			["encounterName"] = "Halkias, the Sin-Stained Goliath",
			["encounterID"] = 2401,
			["npcID"] = 165408,
		},
		[391195] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bisquius",
			["npcID"] = 197557,
		},
		[351646] = {
			["encounterName"] = "So'leah",
			["encounterID"] = 2442,
			["npcID"] = 177269,
		},
		[242391] = {
			["npcID"] = 156212,
		},
		[322978] = {
			["npcID"] = 178462,
		},
		[373024] = {
			["source"] = "Brackenhide Shaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186220,
		},
		[418233] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vorus'arak",
			["npcID"] = 205862,
		},
		[419223] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cho'gall",
			["npcID"] = 208212,
		},
		[417899] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Risen Adventurer",
			["npcID"] = 205992,
		},
		[199389] = {
			["encounterName"] = "Dresaron",
			["encounterID"] = 1838,
			["npcID"] = 99200,
		},
		[401368] = {
			["source"] = "Deepstrider Matriarch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203727,
		},
		[44224] = {
			["encounterName"] = "Kael'thas Sunstrider",
			["source"] = "Kael'thas Sunstrider",
			["npcID"] = 24664,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1894,
		},
		[322980] = {
			["npcID"] = 164040,
		},
		[292264] = {
			["encounterName"] = "King Mechagon",
			["encounterID"] = 2260,
			["npcID"] = 144249,
		},
		[351649] = {
			["npcID"] = 176576,
		},
		[80781] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rockwing Screecher",
			["npcID"] = 10409,
		},
		[411763] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Infinite Keeper",
			["encounterID"] = 2673,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205212,
		},
		[288815] = {
			["source"] = "Rastari Flamespeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 147830,
		},
		[335268] = {
			["npcID"] = 170064,
		},
		[427417] = {
			["source"] = "Prophet of the Flame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207315,
		},
		[418226] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vorus'arak",
			["npcID"] = 205862,
		},
		[398749] = {
			["source"] = "Irontide Bulwark",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200850,
		},
		[229083] = {
			["encounterName"] = "Viz'aduum the Watcher",
			["npcID"] = 114790,
			["encounterID"] = 2017,
		},
		[361890] = {
			["npcID"] = 181453,
		},
		[372129] = {
			["encounterName"] = "Sennarth, The Cold Breath",
			["npcID"] = 187967,
			["encounterID"] = 2592,
		},
		[405020] = {
			["source"] = "Enraged Watcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200407,
		},
		[368034] = {
			["npcID"] = 183722,
		},
		[28299] = {
			["encounterName"] = "Thaddius",
			["source"] = "Thaddius",
			["encounterID"] = 1120,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 15928,
		},
		[417691] = {
			["source"] = "Fury of N'zoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205307,
		},
		[390560] = {
			["npcID"] = 190968,
		},
		[401500] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[419229] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cho'gall",
			["npcID"] = 208212,
		},
		[417683] = {
			["source"] = "Fury of N'zoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205307,
		},
		[325033] = {
			["npcID"] = 167951,
		},
		[417598] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Drest'Agath the Corrupted",
			["npcID"] = 207925,
		},
		[258777] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Oarsman",
			["npcID"] = 127111,
		},
		[339368] = {
			["npcID"] = 158259,
		},
		[325034] = {
			["npcID"] = 167951,
		},
		[368037] = {
			["npcID"] = 185677,
		},
		[407891] = {
			["source"] = "Horde Farseer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204206,
		},
		[411952] = {
			["source"] = "Infinite Timebender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205337,
		},
		[377004] = {
			["encounterName"] = "Crawth",
			["npcID"] = 191736,
			["encounterID"] = 2564,
		},
		[400802] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kalecgos",
			["npcID"] = 187676,
		},
		[44518] = {
			["source"] = "Sunblade Warlock",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24686,
		},
		[11975] = {
			["source"] = "Skeletal Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10390,
		},
		[325036] = {
			["npcID"] = 167951,
		},
		[417185] = {
			["source"] = "Eviscerator Kintara",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207596,
		},
		[394660] = {
			["npcID"] = 188723,
		},
		[355753] = {
			["npcID"] = 179894,
		},
		[427657] = {
			["source"] = "Nuoberon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209113,
		},
		[310703] = {
			["npcID"] = 159459,
		},
		[353706] = {
			["encounterName"] = "Myza's Oasis",
			["encounterID"] = 2440,
			["npcID"] = 176565,
		},
		[396709] = {
			["npcID"] = 197134,
		},
		[385157] = {
			["source"] = "Greenbelt Riverbeast",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192834,
		},
		[200784] = {
			["npcID"] = 98792,
		},
		[394662] = {
			["npcID"] = 190761,
		},
		[282036] = {
			["encounterName"] = "Jadefire Masters",
			["source"] = "Anathos Firecaller",
			["encounterID"] = 2285,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 144692,
		},
		[388730] = {
			["source"] = "Gorjo the Crab Shackler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193226,
		},
		[425379] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flamespreader",
			["npcID"] = 210294,
		},
		[225286] = {
			["npcID"] = 126072,
		},
		[419798] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Druid of the Moon",
			["npcID"] = 210686,
		},
		[333231] = {
			["encounterName"] = "An Affront of Challengers",
			["encounterID"] = 2391,
			["npcID"] = 164461,
		},
		[294324] = {
			["npcID"] = 144293,
		},
		[427428] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Greedy Gessie",
			["npcID"] = 209936,
		},
		[123767] = {
			["source"] = "Sha-Infested Yaungol",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 68241,
		},
		[417725] = {
			["source"] = "Fury of N'zoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205307,
		},
		[425381] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Firelands Flameguard",
			["npcID"] = 210290,
		},
		[152298] = {
			["npcID"] = 75820,
		},
		[424178] = {
			["source"] = "Sickened Growth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207926,
		},
		[419336] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fel-Watcher Mara",
			["npcID"] = 206925,
		},
		[284399] = {
			["encounterName"] = "Jadefire Masters",
			["source"] = "Living Bomb",
			["encounterID"] = 2285,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 146105,
		},
		[345520] = {
			["npcID"] = 157833,
		},
		[424176] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ancient Protector",
			["npcID"] = 210637,
		},
		[418137] = {
			["source"] = "Varian Wrynn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205308,
		},
		[417738] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Peeved",
			["npcID"] = 205428,
		},
		[423410] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lethka",
			["npcID"] = 208740,
		},
		[421746] = {
			["source"] = "The Stonewarmer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210235,
		},
		[424315] = {
			["source"] = "Druid of the Moon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211086,
		},
		[359856] = {
			["encounterName"] = "The Jailer",
			["encounterID"] = 2537,
			["npcID"] = 180990,
		},
		[427432] = {
			["source"] = "Prophet of the Flame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207315,
		},
		[249919] = {
			["encounterName"] = "Yazma",
			["source"] = "Yazma",
			["encounterID"] = 2087,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122968,
		},
		[22883] = {
			["npcID"] = 189583,
		},
		[430476] = {
			["source"] = "Hallowed Monstrosity",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211933,
		},
		[345523] = {
			["npcID"] = 156203,
		},
		[396717] = {
			["npcID"] = 199029,
		},
		[38595] = {
			["encounterName"] = "Priestess Delrissa",
			["source"] = "Ellrys Duskhallow",
			["npcID"] = 24558,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1895,
		},
		[332181] = {
			["npcID"] = 170418,
		},
		[417868] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Druid of the Claw",
			["npcID"] = 210684,
		},
		[322999] = {
			["encounterName"] = "Devos, Paragon of Loyalty",
			["npcID"] = 162061,
			["encounterID"] = 2359,
		},
		[427670] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["encounterID"] = 1044,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40765,
		},
		[282209] = {
			["encounterName"] = "Conclave of the Chosen",
			["source"] = "Ravenous Stalker",
			["encounterID"] = 2268,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 144807,
		},
		[259187] = {
			["encounterName"] = "Yazma",
			["source"] = "Yazma",
			["encounterID"] = 2087,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122968,
		},
		[210662] = {
			["npcID"] = 98733,
		},
		[428401] = {
			["encounterName"] = "Ozumat",
			["source"] = "Ink of Ozumat",
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 213770,
		},
		[425388] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flamewaker Infernoguard",
			["npcID"] = 210295,
		},
		[265880] = {
			["source"] = "Matron Alma",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135365,
		},
		[372147] = {
			["npcID"] = 193457,
		},
		[428047] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Verlann Timbercrush",
			["npcID"] = 207554,
		},
		[16868] = {
			["encounterName"] = "Baroness Anastari",
			["source"] = "Baroness Anastari",
			["npcID"] = 10436,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 479,
		},
		[79825] = {
			["source"] = "Mouldering Mirebeast",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 41424,
		},
		[188587] = {
			["npcID"] = 102253,
		},
		[333241] = {
			["npcID"] = 170850,
		},
		[266106] = {
			["source"] = "Feral Bloodswarmer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 133835,
		},
		[254959] = {
			["source"] = "Dazar'ai Colossus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122984,
		},
		[419595] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Molten General",
			["npcID"] = 207941,
		},
		[398770] = {
			["source"] = "Vemormu",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200701,
		},
		[409009] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Summitshaper Lorac",
			["npcID"] = 201522,
		},
		[386509] = {
			["npcID"] = 187666,
		},
		[388532] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "O'nank Shorescour",
			["npcID"] = 193118,
		},
		[406962] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Horde Axe Thrower",
			["encounterID"] = 2672,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203799,
		},
		[425392] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flamewaker Infernoguard",
			["npcID"] = 210295,
		},
		[394676] = {
			["npcID"] = 198501,
		},
		[265668] = {
			["npcID"] = 133852,
		},
		[417735] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mycelial Growth",
			["npcID"] = 208525,
		},
		[412012] = {
			["isChanneled"] = true,
			["source"] = "Infinite Timeslicer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 205408,
		},
		[361913] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 181398,
		},
		[404916] = {
			["encounterName"] = "Morchie",
			["source"] = "Morchie",
			["encounterID"] = 2671,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198999,
		},
		[419659] = {
			["source"] = "Ignit the Firebranded",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209620,
		},
		[147185] = {
			["encounterName"] = "Immerseus",
			["encounterID"] = 1602,
			["npcID"] = 73191,
		},
		[396751] = {
			["source"] = "Gahz'raxes",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200537,
		},
		[198379] = {
			["encounterName"] = "Archdruid Glaidalis",
			["npcID"] = 96512,
			["encounterID"] = 1836,
		},
		[390583] = {
			["npcID"] = 190968,
		},
		[427960] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Firebrand Fystia",
			["npcID"] = 209893,
		},
		[265760] = {
			["source"] = "Matron Bryndle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135329,
		},
		[88959] = {
			["source"] = "Temple Adept",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45935,
		},
		[250050] = {
			["encounterName"] = "Yazma",
			["source"] = "Yazma",
			["encounterID"] = 2087,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122968,
		},
		[423775] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elder Boughweaver",
			["npcID"] = 211383,
		},
		[164592] = {
			["npcID"] = 75198,
		},
		[388537] = {
			["encounterName"] = "Vexamus",
			["npcID"] = 194181,
			["encounterID"] = 2562,
		},
		[427885] = {
			["encounterName"] = "Archmage Sol",
			["source"] = "Archmage Sol",
			["encounterID"] = 1751,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82682,
		},
		[351678] = {
			["npcID"] = 178271,
		},
		[386490] = {
			["encounterName"] = "Granyth",
			["npcID"] = 195580,
			["encounterID"] = 2637,
		},
		[363965] = {
			["npcID"] = 183747,
		},
		[428082] = {
			["encounterName"] = "Archmage Sol",
			["source"] = "Archmage Sol",
			["encounterID"] = 1751,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82682,
		},
		[409016] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Summitshaper Lorac",
			["npcID"] = 201522,
		},
		[427899] = {
			["encounterName"] = "Archmage Sol",
			["source"] = "Archmage Sol",
			["encounterID"] = 1751,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 82682,
		},
		[404921] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Boss Magor",
			["npcID"] = 201505,
		},
		[341441] = {
			["npcID"] = 174069,
		},
		[392635] = {
			["npcID"] = 197835,
		},
		[337346] = {
			["npcID"] = 159459,
		},
		[388540] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "O'nank Shorescour",
			["npcID"] = 193118,
		},
		[427992] = {
			["source"] = "Keeper of the Dream",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210423,
		},
		[409018] = {
			["source"] = "Failed Prototype",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203927,
		},
		[205549] = {
			["encounterName"] = "Naraxas",
			["npcID"] = 91005,
			["encounterID"] = 1792,
		},
		[355950] = {
			["npcID"] = 178029,
		},
		[11443] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thuzadin Shadowcaster",
			["npcID"] = 10398,
		},
		[417210] = {
			["source"] = "Great Glorious Alliance Lieutenant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207581,
		},
		[320966] = {
			["encounterName"] = "Kin-Tara",
			["npcID"] = 162059,
			["encounterID"] = 2357,
		},
		[235242] = {
			["npcID"] = 115638,
		},
		[170738] = {
			["npcID"] = 85496,
		},
		[392734] = {
			["npcID"] = 196926,
		},
		[337349] = {
			["npcID"] = 159459,
		},
		[421325] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["encounterID"] = 2731,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208445,
		},
		[411300] = {
			["source"] = "Time-Lost Waveshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205363,
		},
		[376257] = {
			["encounterName"] = "Broodkeeper Diurna",
			["npcID"] = 191225,
			["encounterID"] = 2614,
		},
		[361923] = {
			["encounterName"] = "Lords of Dread",
			["encounterID"] = 2543,
			["npcID"] = 183138,
		},
		[388544] = {
			["encounterName"] = "Overgrown Ancient",
			["npcID"] = 196482,
			["encounterID"] = 2563,
		},
		[427694] = {
			["source"] = "Reefbreaker Moruud",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209898,
		},
		[392640] = {
			["npcID"] = 197698,
		},
		[268306] = {
			["encounterName"] = "Lord and Lady Waycrest",
			["source"] = "Lady Waycrest",
			["encounterID"] = 2116,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131545,
		},
		[340207] = {
			["npcID"] = 161528,
		},
		[422039] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Gnarlroot",
			["npcID"] = 209333,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2820,
		},
		[294349] = {
			["npcID"] = 144301,
		},
		[409313] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["encounterID"] = 2684,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201668,
		},
		[355782] = {
			["npcID"] = 179842,
		},
		[425573] = {
			["source"] = "Keeper of the Dream",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210423,
		},
		[335305] = {
			["npcID"] = 171799,
		},
		[164597] = {
			["npcID"] = 75198,
		},
		[396738] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Blue Gulper",
			["npcID"] = 195976,
		},
		[428077] = {
			["source"] = "Keeper of the Dream",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210423,
		},
		[421616] = {
			["encounterName"] = "Volcoross",
			["source"] = "Volcoross",
			["npcID"] = 208478,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2737,
		},
		[329163] = {
			["npcID"] = 168837,
		},
		[396739] = {
			["npcID"] = 195975,
		},
		[406978] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Contamination Guard",
			["npcID"] = 202319,
		},
		[302543] = {
			["npcID"] = 155483,
		},
		[427456] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["encounterID"] = 1044,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40765,
		},
		[425885] = {
			["encounterName"] = "Smolderon",
			["source"] = "Seeking Inferno",
			["npcID"] = 210203,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2824,
		},
		[374215] = {
			["encounterName"] = "Kurog Grimtotem",
			["npcID"] = 184986,
			["encounterID"] = 2605,
		},
		[335308] = {
			["npcID"] = 171799,
		},
		[288210] = {
			["npcID"] = 163032,
		},
		[413123] = {
			["source"] = "Forgemaster Kraglin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201625,
		},
		[401447] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Horrific Aberration",
			["npcID"] = 198965,
		},
		[286163] = {
			["encounterName"] = "Jadefire Masters",
			["source"] = "Anathos Firecaller",
			["encounterID"] = 2285,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 144692,
		},
		[415624] = {
			["encounterName"] = "Igira the Cruel",
			["source"] = "Igira the Cruel",
			["encounterID"] = 2709,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200926,
		},
		[396742] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Slobberclaw",
			["npcID"] = 195972,
		},
		[426147] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Nymue",
			["encounterID"] = 2708,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206172,
		},
		[270285] = {
			["source"] = "Magmarion of the Furnace",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 145909,
		},
		[427459] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Earthshaper Telu",
			["encounterID"] = 1757,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83893,
		},
		[421316] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["encounterID"] = 2731,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208445,
		},
		[143497] = {
			["encounterName"] = "Fallen Protectors",
			["encounterID"] = 1598,
			["npcID"] = 71475,
		},
		[427556] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Raszageth's Last Breath",
			["npcID"] = 209912,
		},
		[402887] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gholna",
			["npcID"] = 199853,
		},
		[339407] = {
			["npcID"] = 173280,
		},
		[382410] = {
			["npcID"] = 185528,
		},
		[384577] = {
			["encounterName"] = "Gutshot",
			["source"] = "Rotfang Hyena",
			["encounterID"] = 2567,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194745,
		},
		[402888] = {
			["source"] = "Bonesifter Marwak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200681,
		},
		[427514] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Raszageth's Last Breath",
			["npcID"] = 209912,
		},
		[430218] = {
			["source"] = "Inquisitor Fairbell",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211930,
		},
		[327122] = {
			["encounterName"] = "Sire Denathrius",
			["npcID"] = 168158,
			["encounterID"] = 2407,
		},
		[329170] = {
			["encounterName"] = "Lord Chamberlain",
			["encounterID"] = 2381,
			["npcID"] = 165737,
		},
		[214771] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["encounterID"] = 1850,
			["npcID"] = 99651,
		},
		[220248] = {
			["source"] = "Shadowy Nightmare",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 111981,
		},
		[400842] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Blazestalker",
			["npcID"] = 199828,
		},
		[329171] = {
			["encounterName"] = "Lord Chamberlain",
			["encounterID"] = 2381,
			["npcID"] = 165737,
		},
		[290568] = {
			["source"] = "Dazari Worshipper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 149569,
		},
		[227376] = {
			["encounterName"] = "The Crown Chemical Co.",
			["event"] = "SPELL_CAST_START",
			["source"] = "Crown Technician",
			["npcID"] = 114275,
		},
		[176280] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Everbloom Waterspeaker",
			["npcID"] = 88261,
		},
	},
	["InterruptableSpells"] = {
		[253562] = true,
		[271174] = true,
		[256849] = true,
		[168092] = true,
		[426783] = true,
		[164965] = true,
		[417481] = true,
		[169839] = true,
		[266225] = true,
		[47528] = true,
		[411958] = true,
		[253517] = true,
		[169840] = true,
		[266036] = true,
		[426596] = true,
		[415770] = true,
		[225562] = true,
		[147362] = true,
		[57994] = true,
		[6552] = true,
		[411994] = true,
		[204243] = true,
		[31935] = true,
		[227913] = true,
		[253583] = true,
		[264390] = true,
		[427459] = true,
		[412378] = true,
		[260696] = true,
		[220543] = true,
		[260697] = true,
		[204896] = true,
		[168082] = true,
		[426731] = true,
		[429176] = true,
		[200642] = true,
		[200658] = true,
		[97547] = true,
		[347008] = true,
		[255824] = true,
		[267824] = true,
		[32747] = true,
		[260698] = true,
		[416256] = true,
		[1766] = true,
		[411300] = true,
		[413607] = true,
		[265876] = true,
		[265368] = true,
		[201399] = true,
		[260699] = true,
		[259572] = true,
		[164973] = true,
		[426541] = true,
		[426768] = true,
		[169841] = true,
		[173563] = true,
		[264050] = true,
		[200248] = true,
		[260701] = true,
		[187707] = true,
		[415435] = true,
		[93985] = true,
		[96231] = true,
		[201411] = true,
		[428263] = true,
		[200630] = true,
		[165213] = true,
		[400165] = true,
		[415437] = true,
		[253526] = true,
		[76813] = true,
		[418200] = true,
		[252781] = true,
		[263959] = true,
		[264024] = true,
		[201298] = true,
		[168040] = true,
		[268278] = true,
		[407121] = true,
		[418202] = true,
		[255041] = true,
		[201839] = true,
		[407122] = true,
		[408805] = true,
		[116705] = true,
		[351338] = true,
		[253544] = true,
		[264407] = true,
		[199663] = true,
		[252923] = true,
		[407124] = true,
		[201837] = true,
		[428103] = true,
		[260700] = true,
		[19647] = true,
		[2139] = true,
		[197797] = true,
		[164887] = true,
		[183752] = true,
		[407891] = true,
		[428526] = true,
		[278444] = true,
		[412922] = true,
		[415773] = true,
	},
	["profiles"] = {
		["Default"] = {
			["indicator_faction"] = false,
			["extra_icon_show_defensive"] = true,
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1669327144,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 632,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Add the buff name in the trigger box.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
						398151, -- [1]
						377738, -- [2]
						378149, -- [3]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["version"] = -1,
					["Name"] = "Aura - Buff Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["Time"] = 1611844883,
					["url"] = "",
					["Icon"] = 135945,
					["Enabled"] = true,
					["Revision"] = 186,
					["semver"] = "",
					["Author"] = "Symantec-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Time to die Spiteful affix",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Time to Die",
							["Name"] = "Time to Die",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 50,
							["Desc"] = "",
							["Min"] = 10,
							["Key"] = "bgWidth",
							["Value"] = 27,
							["Name"] = "Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "bgColor",
							["Value"] = {
								0.5058823529411764, -- [1]
								0.07058823529411765, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 24,
							["Desc"] = "",
							["Min"] = 7,
							["Key"] = "textSize",
							["Value"] = 8,
							["Name"] = "Text Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "textColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option11",
							["Value"] = "Targeting",
							["Name"] = "Targeting",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Show Target instead of Name",
							["Value"] = true,
							["Key"] = "switchTargetName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Change Color if targeting You",
							["Value"] = true,
							["Key"] = "useTargetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 1,
							["Name"] = "Color if targeting You",
							["Value"] = {
								0.07058823529411765, -- [1]
								0.6196078431372549, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 6,
							["Key"] = "option11",
							["Value"] = 0,
							["Name"] = "Option 11",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [11]
					},
					["version"] = -1,
					["Name"] = "M+ Spiteful",
					["NpcNames"] = {
						"174773", -- [1]
					},
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1673994690,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 828,
					["semver"] = "",
					["Author"] = "BombadÔøΩo-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						373046, -- [1]
						372863, -- [2]
						164686, -- [3]
						153072, -- [4]
						153680, -- [5]
						196497, -- [6]
						388886, -- [7]
						387145, -- [8]
						384365, -- [9]
						152964, -- [10]
						398150, -- [11]
						152801, -- [12]
						397878, -- [13]
						397914, -- [14]
						183263, -- [15]
						3636, -- [16]
						376171, -- [17]
						350687, -- [18]
						372735, -- [19]
						373017, -- [20]
						392488, -- [21]
						257732, -- [22]
						256060, -- [23]
						257899, -- [24]
						384633, -- [25]
						374339, -- [26]
						395694, -- [27]
						391634, -- [28]
						372701, -- [29]
						369328, -- [30]
						265487, -- [31]
						413044, -- [32]
						183526, -- [33]
						88194, -- [34]
						87762, -- [35]
						413385, -- [36]
						411001, -- [37]
						378282, -- [38]
						384161, -- [39]
						259572, -- [40]
						255371, -- [41]
						427460, -- [42]
						429172, -- [43]
						426500, -- [44]
						413607, -- [45]
						412922, -- [46]
						417481, -- [47]
						201399, -- [48]
						411994, -- [49]
						415770, -- [50]
						260907, -- [51]
						260703, -- [52]
						260741, -- [53]
						265876, -- [54]
						263959, -- [55]
						266225, -- [56]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Very Important [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a big animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 5,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
					["Time"] = 1670201853,
					["url"] = "",
					["Icon"] = 2175503,
					["Enabled"] = true,
					["Revision"] = 533,
					["semver"] = "",
					["Author"] = "BombadÔøΩo-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
						240446, -- [1]
						385339, -- [2]
						198077, -- [3]
						210261, -- [4]
						360857, -- [5]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the cast bar color to this one.",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 5,
							["Name"] = "Arrow:",
							["Value"] = "Arrow:",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowAlpha",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Name"] = "Arrow Width",
							["Value"] = 8,
							["Key"] = "arrowWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Arrow Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowHeight",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation:",
							["Value"] = "Dot Animation:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 4,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [13]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "Option 18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Nameplate Color",
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = false,
							["Key"] = "useNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.1843137294054031, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Health Bar Color",
						}, -- [17]
					},
					["version"] = -1,
					["Name"] = "Explosion Affix M+ [Plater]",
					["NpcNames"] = {
					},
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1669327144,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 368,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the debuff name in the trigger box.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["version"] = -1,
					["Name"] = "Aura - Debuff Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670790652,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
					["Enabled"] = true,
					["Revision"] = 694,
					["semver"] = "",
					["Author"] = "BombadÔøΩo-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
					["SpellIds"] = {
						383823, -- [1]
						382670, -- [2]
						388537, -- [3]
						372851, -- [4]
						200682, -- [5]
						192307, -- [6]
						196838, -- [7]
						193827, -- [8]
						194043, -- [9]
						209410, -- [10]
						211464, -- [11]
						361180, -- [12]
						156718, -- [13]
						395859, -- [14]
						358320, -- [15]
						374045, -- [16]
						386757, -- [17]
						367500, -- [18]
						370225, -- [19]
						376200, -- [20]
						372107, -- [21]
						388923, -- [22]
						376934, -- [23]
						384899, -- [24]
						373960, -- [25]
						374724, -- [26]
						385551, -- [27]
						259732, -- [28]
						373424, -- [29]
						373084, -- [30]
						87618, -- [31]
						255041, -- [32]
						428926, -- [33]
						76634, -- [34]
						200050, -- [35]
						197546, -- [36]
						198079, -- [37]
						199193, -- [38]
						266181, -- [39]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Health Bar Height Mod",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above Use Cast Bar Color",
						}, -- [8]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.431372, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast Bar Color",
						}, -- [9]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Arrow:",
							["Name"] = "Arrow:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Key"] = "arrowAlpha",
							["Value"] = 0.5,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Arrow Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowWidth",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Key"] = "arrowHeight",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Height",
						}, -- [15]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [17]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [18]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 4,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [19]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 3,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [20]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"200682", -- [1]
									"darkslateblue", -- [2]
								}, -- [1]
								{
									"192307", -- [1]
									"goldenrod", -- [2]
								}, -- [2]
								{
									"196838", -- [1]
									"maroon", -- [2]
								}, -- [3]
								{
									"193827", -- [1]
									"darkgreen", -- [2]
								}, -- [4]
								{
									"194043", -- [1]
									"darkgreen", -- [2]
								}, -- [5]
								{
									"156718", -- [1]
									"DRUID", -- [2]
								}, -- [6]
								{
									"395859", -- [1]
									"ROGUE", -- [2]
								}, -- [7]
							},
							["Name"] = "Color List by SpellId",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
						}, -- [21]
					},
					["version"] = -1,
					["Name"] = "Cast - Ultra Important [P]",
					["NpcNames"] = {
					},
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203603,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1194,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						396640, -- [1]
						372743, -- [2]
						377389, -- [3]
						396812, -- [4]
						388392, -- [5]
						387955, -- [6]
						386546, -- [7]
						377503, -- [8]
						384808, -- [9]
						386024, -- [10]
						387615, -- [11]
						387606, -- [12]
						225100, -- [13]
						211401, -- [14]
						211470, -- [15]
						215433, -- [16]
						192563, -- [17]
						198959, -- [18]
						152818, -- [19]
						156776, -- [20]
						398206, -- [21]
						153524, -- [22]
						396073, -- [23]
						396018, -- [24]
						345202, -- [25]
						377950, -- [26]
						372223, -- [27]
						384194, -- [28]
						392451, -- [29]
						392924, -- [30]
						397889, -- [31]
						209413, -- [32]
						207980, -- [33]
						257397, -- [34]
						257736, -- [35]
						382787, -- [36]
						374699, -- [37]
						377402, -- [38]
						369602, -- [39]
						369465, -- [40]
						369400, -- [41]
						381593, -- [42]
						265091, -- [43]
						265433, -- [44]
						382791, -- [45]
						376780, -- [46]
						225573, -- [47]
						278444, -- [48]
						164887, -- [49]
						168082, -- [50]
						76813, -- [51]
						227913, -- [52]
						265368, -- [53]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Name"] = "Flash Duration",
							["Value"] = 0.4,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Value"] = 5,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
					},
					["version"] = -1,
					["Name"] = "Cast - Big Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1669325410,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 662,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["SpellIds"] = {
						376851, -- [1]
						396044, -- [2]
						381517, -- [3]
						373932, -- [4]
						397801, -- [5]
						208165, -- [6]
						392576, -- [7]
						198750, -- [8]
						387843, -- [9]
						387411, -- [10]
						211299, -- [11]
						198595, -- [12]
						198934, -- [13]
						198962, -- [14]
						156722, -- [15]
						281420, -- [16]
						274383, -- [17]
						259092, -- [18]
						367521, -- [19]
						374544, -- [20]
						385039, -- [21]
						382474, -- [22]
						369823, -- [23]
						377500, -- [24]
						260879, -- [25]
						186269, -- [26]
						378818, -- [27]
						371875, -- [28]
						372225, -- [29]
						200658, -- [30]
						266036, -- [31]
						265407, -- [32]
						164965, -- [33]
						429176, -- [34]
						428526, -- [35]
						418200, -- [36]
						407124, -- [37]
						415437, -- [38]
						264050, -- [39]
						267824, -- [40]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a small animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.6,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [6]
					},
					["version"] = -1,
					["Name"] = "Cast - Small Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
					["Time"] = 1604696441,
					["url"] = "",
					["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
					["Enabled"] = false,
					["Revision"] = 63,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Auto set skull marker",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Auto set a raid target Skull on the unit.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "onlyInCombat",
							["Value"] = false,
							["Name"] = "Only in Combat",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Set the mark only if the unit is in combat.",
						}, -- [3]
					},
					["version"] = -1,
					["Name"] = "Auto Set Skull",
					["NpcNames"] = {
					},
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1626382829,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Enabled"] = true,
					["Revision"] = 375,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 17",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "blinkEnabled",
							["Value"] = true,
							["Name"] = "Blink Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable blink",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = true,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable glows",
						}, -- [5]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = false,
							["Name"] = "Change NamePlate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'true' to enable nameplate color change",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the blink effect only",
							["Min"] = 1,
							["Fraction"] = true,
							["Value"] = 3,
							["Name"] = "Timeleft to Blink",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "timeleftToBlink",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "time to complete a blink loop",
							["Min"] = 0.5,
							["Fraction"] = true,
							["Value"] = 1,
							["Name"] = "Blink Speed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "blinkSpeed",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.6,
							["Name"] = "Blink Max Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "blinkMaxAlpha",
						}, -- [9]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color of the blink",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								0.2862745098039216, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "nameplate color if ChangeNameplateColor is true",
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 4,
							["Key"] = "timerColorEnabled",
							["Value"] = true,
							["Name"] = "Timer Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable changes in the color of the time left text",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Warning",
							["Value"] = 8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "timeLeftWarning",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Critical",
							["Value"] = 3,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "timeLeftCritical",
						}, -- [15]
						{
							["Type"] = 1,
							["Key"] = "warningColor",
							["Value"] = {
								1, -- [1]
								0.8705882352941177, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Warning Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left entered in a warning zone",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "criticalColor",
							["Value"] = {
								1, -- [1]
								0.07450980392156863, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Critical Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left is critical",
						}, -- [17]
					},
					["version"] = -1,
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["NpcNames"] = {
					},
				}, -- [10]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604354364,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
					["Enabled"] = true,
					["Revision"] = 206,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Countdown",
					["NpcNames"] = {
					},
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1670202265,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
					["Enabled"] = true,
					["Revision"] = 620,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["SpellIds"] = {
						375943, -- [1]
						385958, -- [2]
						388623, -- [3]
						377034, -- [4]
						374361, -- [5]
						381525, -- [6]
						386660, -- [7]
						385578, -- [8]
						384699, -- [9]
						153501, -- [10]
						153686, -- [11]
						154442, -- [12]
						192018, -- [13]
						219488, -- [14]
						372087, -- [15]
						391726, -- [16]
						391723, -- [17]
						377383, -- [18]
						388976, -- [19]
						370764, -- [20]
						387067, -- [21]
						391118, -- [22]
						391136, -- [23]
						382233, -- [24]
						209027, -- [25]
						212031, -- [26]
						207261, -- [27]
						207979, -- [28]
						198888, -- [29]
						199805, -- [30]
						199050, -- [31]
						191508, -- [32]
						152792, -- [33]
						153395, -- [34]
						209495, -- [35]
						257426, -- [36]
						255952, -- [37]
						257870, -- [38]
						413147, -- [39]
						383107, -- [40]
						377559, -- [41]
						388060, -- [42]
						376170, -- [43]
						384524, -- [44]
						375351, -- [45]
						390111, -- [46]
						369791, -- [47]
						369573, -- [48]
						369563, -- [49]
						369335, -- [50]
						369061, -- [51]
						375727, -- [52]
						265016, -- [53]
						265019, -- [54]
						260793, -- [55]
						260292, -- [56]
						272457, -- [57]
						272609, -- [58]
						269843, -- [59]
						183465, -- [60]
						226296, -- [61]
						188169, -- [62]
						183088, -- [63]
						410873, -- [64]
						411012, -- [65]
						88308, -- [66]
						382708, -- [67]
						375251, -- [68]
						375439, -- [69]
						372311, -- [70]
						373742, -- [71]
						372201, -- [72]
						374533, -- [73]
						377204, -- [74]
						201226, -- [75]
						204667, -- [76]
						198379, -- [77]
						200768, -- [78]
						253239, -- [79]
						250258, -- [80]
						255567, -- [81]
						194956, -- [82]
						427510, -- [83]
						426645, -- [84]
						412505, -- [85]
						412129, -- [86]
						419351, -- [87]
						401482, -- [88]
						404916, -- [89]
						200345, -- [90]
						200261, -- [91]
						198641, -- [92]
						265372, -- [93]
						271174, -- [94]
						264694, -- [95]
						264923, -- [96]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 4",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set the alpha of the moving arrow",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.73,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowAlpha",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Time that takes for an arrow to travel from the to right.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Animation Speed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "animSpeed",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Use White Arrow",
							["Value"] = false,
							["Key"] = "desaturateArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the arrow color will be desaturated.",
						}, -- [7]
					},
					["version"] = -1,
					["Name"] = "Cast - Frontal Cone [Plater]",
					["NpcNames"] = {
					},
				}, -- [12]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
					["Time"] = 1604239880,
					["url"] = "",
					["Icon"] = 1029718,
					["Enabled"] = true,
					["Revision"] = 269,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
					["Desc"] = "Show above the nameplate who is the player fixated",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Fixate [Plater]",
					["NpcNames"] = {
					},
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604357453,
					["url"] = "",
					["Icon"] = 136048,
					["Enabled"] = true,
					["Revision"] = 233,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show the energy amount above the nameplate.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Show the power of the unit above the nameplate.",
							["Name"] = "script desc",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "add trigger",
							["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "showLater",
							["Value"] = true,
							["Name"] = "Show at 80% of Energy",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 2",
							["Value"] = 0,
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Text size.",
							["Min"] = 8,
							["Name"] = "Text Size",
							["Value"] = 16,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "fontSize",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "fontColor",
							["Value"] = {
								0.803921568627451, -- [1]
								0.803921568627451, -- [2]
								0.803921568627451, -- [3]
								1, -- [4]
							},
							["Name"] = "Font Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the text.",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "outline",
							["Value"] = true,
							["Name"] = "Enable Text Outline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the text uses outline.",
						}, -- [9]
					},
					["version"] = -1,
					["Name"] = "Unit - Show Energy [Plater]",
					["NpcNames"] = {
					},
				}, -- [14]
				{
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604087921,
					["url"] = "",
					["Icon"] = 841383,
					["Enabled"] = true,
					["Revision"] = 266,
					["semver"] = "",
					["Author"] = "Tecno-Azralon",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Fixate On You [Plater]",
					["NpcNames"] = {
					},
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203758,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1213,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Cast start animation settings",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 7,
							["Key"] = "timerList",
							["Value"] = {
							},
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["version"] = -1,
					["Name"] = "Cast - Alert + Timer [P]",
					["NpcNames"] = {
					},
				}, -- [16]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
					["Time"] = 1669339628,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
					["Enabled"] = true,
					["Revision"] = 878,
					["semver"] = "",
					["Author"] = "BombadÔøΩo-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight the target name",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shows the target name in a separate box",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.8,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Name"] = "Shake Amplitude",
							["Value"] = 5,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
						{
							["Type"] = 6,
							["Name"] = "Option 27",
							["Value"] = 0,
							["Key"] = "option27",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [27]
						{
							["Type"] = 5,
							["Name"] = "Option 28",
							["Value"] = "Target Options",
							["Key"] = "option28",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [28]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Name"] = "Text Size",
							["Value"] = 14,
							["Key"] = "targetNameSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [29]
						{
							["Type"] = 4,
							["Name"] = "Use Class Color",
							["Value"] = true,
							["Key"] = "colorByClass",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [30]
						{
							["Type"] = 1,
							["Name"] = "Text Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [31]
						{
							["Type"] = 1,
							["Name"] = "Background Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								0.9846720322966576, -- [4]
							},
							["Key"] = "targetBgColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [32]
						{
							["Type"] = 1,
							["Name"] = "Border Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetBgBorderColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [33]
						{
							["Type"] = 2,
							["Max"] = 160,
							["Desc"] = "",
							["Min"] = 30,
							["Name"] = "Frame Width",
							["Value"] = 90,
							["Key"] = "targetFrameWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [34]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Key"] = "targetFrameHeight",
							["Value"] = 20,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Frame Height",
						}, -- [35]
					},
					["version"] = -1,
					["Name"] = "Cast - Important Target [P]",
					["NpcNames"] = {
					},
				}, -- [17]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
					["Time"] = 1669327146,
					["url"] = "",
					["Icon"] = 610472,
					["Enabled"] = true,
					["Revision"] = 65,
					["semver"] = "",
					["Author"] = "Keyspell-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Aura is Shield [P]",
					["NpcNames"] = {
					},
				}, -- [18]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1668886509,
					["url"] = "",
					["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
					["Enabled"] = true,
					["Revision"] = 33,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
						426662, -- [1]
						426663, -- [2]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0, -- [1]
								0.5568627450980392, -- [2]
								0.03529411764705882, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
						}, -- [1]
					},
					["version"] = -1,
					["Name"] = "Fixate by Unit Buff [P]",
					["NpcNames"] = {
					},
				}, -- [19]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1672514190,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 547,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						376644, -- [1]
						373017, -- [2]
						386781, -- [3]
						384823, -- [4]
						372735, -- [5]
						385536, -- [6]
						392398, -- [7]
						375596, -- [8]
						387135, -- [9]
						360850, -- [10]
						212784, -- [11]
						199033, -- [12]
						199034, -- [13]
						200969, -- [14]
						394512, -- [15]
						397881, -- [16]
						396020, -- [17]
						374430, -- [18]
						384353, -- [19]
						265376, -- [20]
						193941, -- [21]
						411002, -- [22]
						169445, -- [23]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Glowing [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Key"] = "segmentsAmount",
							["Value"] = 7,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Amount of Segments",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"385536", -- [1]
									"maroon", -- [2]
								}, -- [1]
								{
									"198750", -- [1]
									"midnightblue", -- [2]
								}, -- [2]
								{
									"360850", -- [1]
									"lime", -- [2]
								}, -- [3]
								{
									"212784", -- [1]
									"deepskyblue", -- [2]
								}, -- [4]
								{
									"207980", -- [1]
									"midnightblue", -- [2]
								}, -- [5]
								{
									"199033", -- [1]
									"gold", -- [2]
								}, -- [6]
								{
									"199034", -- [1]
									"gold", -- [2]
								}, -- [7]
								{
									"200969", -- [1]
									"orange", -- [2]
								}, -- [8]
								{
									"394512", -- [1]
									"indigo", -- [2]
								}, -- [9]
								{
									"397881", -- [1]
									"deepskyblue", -- [2]
								}, -- [10]
								{
									"396020", -- [1]
									"khaki", -- [2]
								}, -- [11]
							},
							["Name"] = "Cast Color by SpellID",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
						}, -- [4]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [20]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1671066705,
					["url"] = "",
					["Icon"] = 134229,
					["Enabled"] = true,
					["Revision"] = 37,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
						191284, -- [1]
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Cast - Effect After Cast [P]",
					["NpcNames"] = {
					},
				}, -- [21]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Time"] = 1670428019,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
					["Enabled"] = true,
					["Revision"] = 162,
					["semver"] = "",
					["Author"] = "Butazzul-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
					["SpellIds"] = {
						385916, -- [1]
						386063, -- [2]
						388822, -- [3]
						373087, -- [4]
						397785, -- [5]
						106864, -- [6]
						193660, -- [7]
						198263, -- [8]
						387910, -- [9]
						370766, -- [10]
						375591, -- [11]
						384336, -- [12]
						209404, -- [13]
						209378, -- [14]
						210875, -- [15]
						396001, -- [16]
						397899, -- [17]
						386559, -- [18]
						382555, -- [19]
						258672, -- [20]
						258777, -- [21]
						257756, -- [22]
						257784, -- [23]
						256405, -- [24]
						256589, -- [25]
						393793, -- [26]
						388046, -- [27]
						375079, -- [28]
						390290, -- [29]
						369811, -- [30]
						369703, -- [31]
						226287, -- [32]
						410999, -- [33]
						372561, -- [34]
						256882, -- [35]
						172578, -- [36]
						412063, -- [37]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 0.3,
							["Desc"] = "Rotation Duration",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.15,
							["Key"] = "rotationDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Rotation Duration",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "Option 5",
							["Value"] = 0,
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 1.5,
							["Desc"] = "Animation Start Duration",
							["Min"] = 0,
							["Name"] = "Animation Start Duration",
							["Value"] = 0.3,
							["Key"] = "animStartDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
							["Min"] = 0,
							["Key"] = "textureStartAlpha",
							["Value"] = 1,
							["Name"] = "Texture Start Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "Texture Scale",
							["Min"] = 0.6,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Key"] = "textureScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Scale",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "textureAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Alpha",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [8]
					},
					["version"] = -1,
					["Name"] = "Cast - Circle AoE [P]",
					["NpcNames"] = {
					},
				}, -- [22]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1683596223,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["Enabled"] = true,
					["Revision"] = 146,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Option 1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "blank line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Vertical Line Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "indicatorColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Key"] = "indicatorAlpha",
							["Value"] = 0.79,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Vertical Line Alpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "fillColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Fill Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Name"] = "Fill Alpha",
							["Value"] = 0.2,
							["Key"] = "fillAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
					},
					["version"] = -1,
					["Name"] = "Add - Health Markers [P]",
					["NpcNames"] = {
						"197697", -- [1]
						"59544", -- [2]
						"186227", -- [3]
						"184020", -- [4]
						"91005", -- [5]
					},
				}, -- [23]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670423785,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 572,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Name"] = "Nameplate Size Offset",
							["Value"] = 3,
							["Key"] = "nameplateSizeOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.7137255072593689, -- [2]
								0, -- [3]
								0.5631310641765594, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dot Color",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option10",
							["Value"] = "Extra Texture",
							["Name"] = "Extra Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Extra Texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Show Extra Texture",
							["Value"] = false,
							["Key"] = "showExtraTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Extra Texture",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "skullColor",
							["Value"] = {
								1, -- [1]
								0.4627450980392157, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Alpha",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "skullAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Alpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "Scale",
							["Min"] = 0.4,
							["Name"] = "Scale",
							["Value"] = 0.6,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "skullScale",
						}, -- [14]
						{
							["Type"] = 7,
							["Name"] = "Npc Color By NpcID",
							["Value"] = {
								{
									"196548", -- [1]
									"forestgreen", -- [2]
								}, -- [1]
								{
									"195580", -- [1]
									"forestgreen", -- [2]
								}, -- [2]
								{
									"195820", -- [1]
									"forestgreen", -- [2]
								}, -- [3]
								{
									"195821", -- [1]
									"forestgreen", -- [2]
								}, -- [4]
								{
									"189886", -- [1]
									"forestgreen", -- [2]
								}, -- [5]
								{
									"75966", -- [1]
									"forestgreen", -- [2]
								}, -- [6]
								{
									"102019 ", -- [1]
									"forestgreen", -- [2]
								}, -- [7]
								{
									"187159", -- [1]
									"forestgreen", -- [2]
								}, -- [8]
								{
									"194897", -- [1]
									"forestgreen", -- [2]
								}, -- [9]
								{
									"104251", -- [1]
									"forestgreen", -- [2]
								}, -- [10]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the npcID, value is the color name",
						}, -- [15]
					},
					["version"] = -1,
					["Name"] = "Add - Important [P]",
					["NpcNames"] = {
						"196548", -- [1]
						"195580", -- [2]
						"195820", -- [3]
						"195821", -- [4]
						"189886", -- [5]
						"75966", -- [6]
						"102019", -- [7]
						"187159", -- [8]
						"194897", -- [9]
						"104251", -- [10]
						"101326", -- [11]
						"189669", -- [12]
						"192464", -- [13]
						190381, -- [14]
						92538, -- [15]
						192464, -- [16]
						131009, -- [17]
						127315, -- [18]
						133361, -- [19]
						136330, -- [20]
						214117, -- [21]
						212483, -- [22]
						101008, -- [23]
					},
				}, -- [24]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1669340442,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/add_id_icon",
					["Enabled"] = false,
					["Revision"] = 161,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
					["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Add - Tag Number [P]",
					["NpcNames"] = {
						"195138", -- [1]
						"192955", -- [2]
						"190294", -- [3]
						"76518", -- [4]
					},
				}, -- [25]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1669324381,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
					["Enabled"] = true,
					["Revision"] = 887,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Play a very fast flash when the cast start",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						392640, -- [1]
						397888, -- [2]
						209033, -- [3]
						385029, -- [4]
						374563, -- [5]
						377341, -- [6]
						369675, -- [7]
						369365, -- [8]
						369411, -- [9]
						278961, -- [10]
						202108, -- [11]
						88186, -- [12]
						200630, -- [13]
						255824, -- [14]
						252781, -- [15]
						250096, -- [16]
						200248, -- [17]
						197797, -- [18]
						264520, -- [19]
						418202, -- [20]
						201839, -- [21]
						412012, -- [22]
						411958, -- [23]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.1,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Name"] = "Shake Amplitude",
							["Value"] = 25,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 30,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
					},
					["version"] = -1,
					["Name"] = "Cast - Quick Flash [P]",
					["NpcNames"] = {
					},
				}, -- [26]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
					["Time"] = 1670427654,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/exclamation_64",
					["Enabled"] = true,
					["Revision"] = 162,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color of  add",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0.4392157196998596, -- [2]
								0.458823561668396, -- [3]
								1, -- [4]
							},
							["Key"] = "healthBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Flash Nameplate",
							["Value"] = true,
							["Key"] = "useFlash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Flash Nameplate",
						}, -- [4]
						{
							["Type"] = 7,
							["Name"] = "NpcID to Color",
							["Value"] = {
								{
									"189893", -- [1]
									"olivedrab", -- [2]
								}, -- [1]
								{
									"190187", -- [1]
									"olivedrab", -- [2]
								}, -- [2]
								{
									"99922", -- [1]
									"olivedrab", -- [2]
								}, -- [3]
								{
									"153285", -- [1]
									"olivedrab", -- [2]
								}, -- [4]
								{
									"104822", -- [1]
									"olivedrab", -- [2]
								}, -- [5]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
						}, -- [5]
					},
					["version"] = -1,
					["Name"] = "Add - Warning [P]",
					["NpcNames"] = {
						"190187", -- [1]
						"189893", -- [2]
						"99922", -- [3]
						"104822", -- [4]
						129758, -- [5]
						190426, -- [6]
						186696, -- [7]
						101075, -- [8]
						100818, -- [9]
						98081, -- [10]
						52019, -- [11]
					},
				}, -- [27]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
					["Time"] = 1670427838,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/duck_64",
					["Enabled"] = true,
					["Revision"] = 111,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = false,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0.062745101749897, -- [1]
								0.062745101749897, -- [2]
								0.0941176563501358, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Scale",
							["Value"] = true,
							["Key"] = "useNameplateScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Scale",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Nameplate Scale",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Nameplate Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "scale",
						}, -- [5]
					},
					["version"] = -1,
					["Name"] = "Add - Non Elite Trash [P]",
					["NpcNames"] = {
						"194622", -- [1]
						"190205", -- [2]
						"197398", -- [3]
						"77006", -- [4]
					},
				}, -- [28]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669325411,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
					["Enabled"] = true,
					["Revision"] = 101,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
					["SpellIds"] = {
						373688, -- [1]
						391050, -- [2]
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Cast - Shield Interrupt [P]",
					["NpcNames"] = {
					},
				}, -- [29]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1672514185,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
					["Enabled"] = true,
					["Revision"] = 506,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Just stop casting",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						377004, -- [1]
						381516, -- [2]
						196543, -- [3]
						199726, -- [4]
						200291, -- [5]
						268202, -- [6]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Stop Casting [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Fraction"] = false,
							["Value"] = 20,
							["Name"] = "Amount of Segments",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "segmentsAmount",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
				}, -- [30]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669340350,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/radio_64",
					["Enabled"] = true,
					["Revision"] = 106,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useReverse",
							["Value"] = false,
							["Name"] = "Reverse Health Bar",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "useShake",
							["Value"] = false,
							["Name"] = "Enable Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "How strong is the shake.",
							["Min"] = 0.05,
							["Key"] = "shakeAmplitude",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 70,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "useBackground",
							["Value"] = true,
							["Name"] = "Show Red Background",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Red Background",
						}, -- [7]
					},
					["version"] = -1,
					["Name"] = "Add - Explode on Die [P]",
					["NpcNames"] = {
						"194895", -- [1]
						"105703", -- [2]
						"59598", -- [3]
						"58319", -- [4]
						200388, -- [5]
						189299, -- [6]
						131402, -- [7]
						135052, -- [8]
					},
				}, -- [31]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
					["Time"] = 1673726734,
					["url"] = "",
					["Icon"] = 236209,
					["Enabled"] = true,
					["Revision"] = 18,
					["semver"] = "",
					["Author"] = "Tiranaa-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						372743, -- [1]
						372749, -- [2]
						384933, -- [3]
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura While Casting [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [32]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1676905232,
					["url"] = "",
					["Icon"] = 4038101,
					["Enabled"] = true,
					["Revision"] = 73,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
					["SpellIds"] = {
						388886, -- [1]
						209676, -- [2]
						377912, -- [3]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Dots Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.4166216850280762, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dots Color",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 0,
							["Name"] = "Dots X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 0,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dots Y Offset",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust how fast the blinking occurs",
							["Min"] = 0.2,
							["Name"] = "Blink Speed",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "speed",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Min amount of transparency the blink can have",
							["Min"] = 0,
							["Name"] = "Blink Min Alpha",
							["Value"] = 0,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "minAlpha",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Max amount of transparency the blink can have",
							["Min"] = 0,
							["Key"] = "maxAlpha",
							["Value"] = 0.5,
							["Name"] = "Blink Max Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								0.01960784383118153, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the blinking texture",
						}, -- [8]
					},
					["version"] = -1,
					["Name"] = "Cast - On Going Cast [P]",
					["NpcNames"] = {
					},
				}, -- [33]
			},
			["extra_icon_height"] = 24,
			["aura_x_offset"] = -61.08999633789063,
			["first_run3"] = true,
			["aura_cache_by_name"] = {
				["hex"] = {
					11641, -- [1]
					16097, -- [2]
					16707, -- [3]
					16708, -- [4]
					16709, -- [5]
					17172, -- [6]
					18503, -- [7]
					22566, -- [8]
					24053, -- [9]
					29044, -- [10]
					36700, -- [11]
					40400, -- [12]
					46295, -- [13]
					51514, -- [14]
					53439, -- [15]
					66054, -- [16]
					76820, -- [17]
					82760, -- [18]
					89459, -- [19]
					93958, -- [20]
					97396, -- [21]
					126241, -- [22]
					126345, -- [23]
					133034, -- [24]
					134202, -- [25]
					136422, -- [26]
					142608, -- [27]
					142613, -- [28]
					142617, -- [29]
					150030, -- [30]
					150037, -- [31]
					168013, -- [32]
					173156, -- [33]
					178064, -- [34]
					192111, -- [35]
					196942, -- [36]
					210826, -- [37]
					210830, -- [38]
					210873, -- [39]
					211004, -- [40]
					211010, -- [41]
					211015, -- [42]
					215583, -- [43]
					219215, -- [44]
					219216, -- [45]
					219217, -- [46]
					219218, -- [47]
					219219, -- [48]
					247609, -- [49]
					254412, -- [50]
					260052, -- [51]
					262342, -- [52]
					262349, -- [53]
					262362, -- [54]
					269352, -- [55]
					269355, -- [56]
					270492, -- [57]
					271930, -- [58]
					274794, -- [59]
					277778, -- [60]
					277780, -- [61]
					277784, -- [62]
					277785, -- [63]
					278808, -- [64]
					278809, -- [65]
					290438, -- [66]
					309328, -- [67]
					309329, -- [68]
					313639, -- [69]
					332605, -- [70]
					336517, -- [71]
					343198, -- [72]
				},
				["immolate"] = {
					348, -- [1]
					8981, -- [2]
					9034, -- [3]
					9275, -- [4]
					9276, -- [5]
					11962, -- [6]
					11984, -- [7]
					12742, -- [8]
					15505, -- [9]
					15506, -- [10]
					15570, -- [11]
					15661, -- [12]
					15732, -- [13]
					15733, -- [14]
					17883, -- [15]
					18542, -- [16]
					20294, -- [17]
					20787, -- [18]
					20800, -- [19]
					20826, -- [20]
					29928, -- [21]
					36637, -- [22]
					36638, -- [23]
					37668, -- [24]
					38805, -- [25]
					38806, -- [26]
					41958, -- [27]
					44267, -- [28]
					44518, -- [29]
					46042, -- [30]
					46191, -- [31]
					75383, -- [32]
					76618, -- [33]
					77425, -- [34]
					79937, -- [35]
					113141, -- [36]
					118297, -- [37]
					130798, -- [38]
					138566, -- [39]
					156964, -- [40]
					157049, -- [41]
					157736, -- [42]
					189990, -- [43]
					192955, -- [44]
					193540, -- [45]
					193541, -- [46]
					216145, -- [47]
					228312, -- [48]
					286272, -- [49]
					295425, -- [50]
					348, -- [51]
					8981, -- [52]
					9034, -- [53]
					9275, -- [54]
					9276, -- [55]
					11962, -- [56]
					11984, -- [57]
					12742, -- [58]
					15505, -- [59]
					15506, -- [60]
					15570, -- [61]
					15661, -- [62]
					15732, -- [63]
					15733, -- [64]
					17883, -- [65]
					18542, -- [66]
					20294, -- [67]
					20787, -- [68]
					20800, -- [69]
					20826, -- [70]
					29928, -- [71]
					36637, -- [72]
					36638, -- [73]
					37668, -- [74]
					38805, -- [75]
					38806, -- [76]
					41958, -- [77]
					44267, -- [78]
					44518, -- [79]
					46042, -- [80]
					46191, -- [81]
					75383, -- [82]
					76618, -- [83]
					77425, -- [84]
					79937, -- [85]
					113141, -- [86]
					118297, -- [87]
					130798, -- [88]
					138566, -- [89]
					156964, -- [90]
					157049, -- [91]
					157736, -- [92]
					189990, -- [93]
					192955, -- [94]
					193540, -- [95]
					193541, -- [96]
					216145, -- [97]
					228312, -- [98]
					286272, -- [99]
					295425, -- [100]
					348, -- [101]
					8981, -- [102]
					9034, -- [103]
					9275, -- [104]
					9276, -- [105]
					11962, -- [106]
					11984, -- [107]
					12742, -- [108]
					15505, -- [109]
					15506, -- [110]
					15570, -- [111]
					15661, -- [112]
					15732, -- [113]
					15733, -- [114]
					17883, -- [115]
					18542, -- [116]
					20294, -- [117]
					20787, -- [118]
					20800, -- [119]
					20826, -- [120]
					29928, -- [121]
					36637, -- [122]
					36638, -- [123]
					37668, -- [124]
					38805, -- [125]
					38806, -- [126]
					41958, -- [127]
					44267, -- [128]
					44518, -- [129]
					46042, -- [130]
					46191, -- [131]
					75383, -- [132]
					76618, -- [133]
					77425, -- [134]
					79937, -- [135]
					113141, -- [136]
					118297, -- [137]
					130798, -- [138]
					138566, -- [139]
					156964, -- [140]
					157049, -- [141]
					157736, -- [142]
					189990, -- [143]
					192955, -- [144]
					193540, -- [145]
					193541, -- [146]
					216145, -- [147]
					228312, -- [148]
					286272, -- [149]
					295425, -- [150]
					348, -- [151]
					8981, -- [152]
					9034, -- [153]
					9275, -- [154]
					9276, -- [155]
					11962, -- [156]
					11984, -- [157]
					12742, -- [158]
					15505, -- [159]
					15506, -- [160]
					15570, -- [161]
					15661, -- [162]
					15732, -- [163]
					15733, -- [164]
					17883, -- [165]
					18542, -- [166]
					20294, -- [167]
					20787, -- [168]
					20800, -- [169]
					20826, -- [170]
					29928, -- [171]
					36637, -- [172]
					36638, -- [173]
					37668, -- [174]
					38805, -- [175]
					38806, -- [176]
					41958, -- [177]
					44267, -- [178]
					44518, -- [179]
					46042, -- [180]
					46191, -- [181]
					75383, -- [182]
					76618, -- [183]
					77425, -- [184]
					79937, -- [185]
					113141, -- [186]
					118297, -- [187]
					130798, -- [188]
					138566, -- [189]
					156964, -- [190]
					157049, -- [191]
					157736, -- [192]
					189990, -- [193]
					192955, -- [194]
					193540, -- [195]
					193541, -- [196]
					216145, -- [197]
					228312, -- [198]
					286272, -- [199]
					295425, -- [200]
					348, -- [201]
					8981, -- [202]
					9034, -- [203]
					9275, -- [204]
					9276, -- [205]
					11962, -- [206]
					11984, -- [207]
					12742, -- [208]
					15505, -- [209]
					15506, -- [210]
					15570, -- [211]
					15661, -- [212]
					15732, -- [213]
					15733, -- [214]
					17883, -- [215]
					18542, -- [216]
					20294, -- [217]
					20787, -- [218]
					20800, -- [219]
					20826, -- [220]
					29928, -- [221]
					36637, -- [222]
					36638, -- [223]
					37668, -- [224]
					38805, -- [225]
					38806, -- [226]
					41958, -- [227]
					44267, -- [228]
					44518, -- [229]
					46042, -- [230]
					46191, -- [231]
					75383, -- [232]
					76618, -- [233]
					77425, -- [234]
					79937, -- [235]
					113141, -- [236]
					118297, -- [237]
					130798, -- [238]
					138566, -- [239]
					156964, -- [240]
					157049, -- [241]
					157736, -- [242]
					189990, -- [243]
					192955, -- [244]
					193540, -- [245]
					193541, -- [246]
					216145, -- [247]
					228312, -- [248]
					286272, -- [249]
					295425, -- [250]
					348, -- [251]
					8981, -- [252]
					9034, -- [253]
					9275, -- [254]
					9276, -- [255]
					11962, -- [256]
					11984, -- [257]
					12742, -- [258]
					15505, -- [259]
					15506, -- [260]
					15570, -- [261]
					15661, -- [262]
					15732, -- [263]
					15733, -- [264]
					17883, -- [265]
					18542, -- [266]
					20294, -- [267]
					20787, -- [268]
					20800, -- [269]
					20826, -- [270]
					29928, -- [271]
					36637, -- [272]
					36638, -- [273]
					37668, -- [274]
					38805, -- [275]
					38806, -- [276]
					41958, -- [277]
					44267, -- [278]
					44518, -- [279]
					46042, -- [280]
					46191, -- [281]
					75383, -- [282]
					76618, -- [283]
					77425, -- [284]
					79937, -- [285]
					113141, -- [286]
					118297, -- [287]
					130798, -- [288]
					138566, -- [289]
					156964, -- [290]
					157049, -- [291]
					157736, -- [292]
					189990, -- [293]
					192955, -- [294]
					193540, -- [295]
					193541, -- [296]
					216145, -- [297]
					228312, -- [298]
					286272, -- [299]
					295425, -- [300]
				},
				["flame shock"] = {
					13729, -- [1]
					15039, -- [2]
					15096, -- [3]
					15616, -- [4]
					16804, -- [5]
					22423, -- [6]
					23038, -- [7]
					32967, -- [8]
					34354, -- [9]
					39529, -- [10]
					39590, -- [11]
					41115, -- [12]
					43303, -- [13]
					51588, -- [14]
					55613, -- [15]
					58940, -- [16]
					58971, -- [17]
					59684, -- [18]
					79890, -- [19]
					87707, -- [20]
					90846, -- [21]
					125062, -- [22]
					132736, -- [23]
					160101, -- [24]
					163057, -- [25]
					188389, -- [26]
					189804, -- [27]
					192344, -- [28]
					206444, -- [29]
					248367, -- [30]
					248484, -- [31]
					255043, -- [32]
					263979, -- [33]
					268013, -- [34]
					290422, -- [35]
				},
			},
			["ui_parent_scale_tune"] = 1.406249965948519,
			["cast_statusbar_fadein_time"] = 0.2000000029802322,
			["target_shady_enabled"] = false,
			["aura2_y_offset"] = 5,
			["aura_timer"] = false,
			["plate_config"] = {
				["global_health_height"] = 16,
				["friendlyplayer"] = {
					["health"] = {
						nil, -- [1]
						16, -- [2]
					},
					["health_incombat"] = {
						nil, -- [1]
						16, -- [2]
					},
				},
				["global_health_width"] = 112,
				["friendlynpc"] = {
					["health"] = {
						nil, -- [1]
						16, -- [2]
					},
				},
				["enemyplayer"] = {
					["actorname_text_font"] = "Expressway",
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["spellpercent_text_font"] = "Expressway",
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["level_text_size"] = 8,
					["big_actortitle_text_font"] = "Expressway",
					["cast"] = {
						120, -- [1]
						16, -- [2]
					},
					["all_names"] = true,
					["big_actortitle_text_size"] = 10,
					["actorname_text_outline"] = "OUTLINE",
					["actorname_text_anchor"] = {
						["y"] = 30,
					},
					["percent_text_size"] = 10,
					["actorname_text_spacing"] = 9,
					["cast_incombat"] = {
						nil, -- [1]
						16, -- [2]
					},
					["spellname_text_outline"] = "OUTLINE",
					["spellname_text_font"] = "Expressway",
					["quest_color_enabled"] = true,
					["health_incombat"] = {
						nil, -- [1]
						15, -- [2]
					},
					["health"] = {
						120, -- [1]
						15, -- [2]
					},
					["big_actorname_text_font"] = "Expressway",
					["big_actorname_text_size"] = 10,
					["quest_enabled"] = true,
					["actorname_text_size"] = 10,
					["level_text_enabled"] = false,
				},
				["enemynpc"] = {
					["actorname_text_font"] = "Expressway",
					["spellpercent_text_font"] = "Expressway",
					["actorname_text_size"] = 10,
					["big_actortitle_text_font"] = "Expressway",
					["cast"] = {
						120, -- [1]
						16, -- [2]
					},
					["spellpercent_text_size"] = 10,
					["actorname_text_outline"] = "OUTLINE",
					["actorname_text_anchor"] = {
						["y"] = 30,
					},
					["percent_text_size"] = 10,
					["actorname_text_spacing"] = 9,
					["cast_incombat"] = {
						nil, -- [1]
						16, -- [2]
					},
					["spellname_text_size"] = 10,
					["health"] = {
						120, -- [1]
						15, -- [2]
					},
					["spellname_text_font"] = "Expressway",
					["big_actorname_text_font"] = "Expressway",
					["health_incombat"] = {
						nil, -- [1]
						15, -- [2]
					},
					["level_text_enabled"] = false,
				},
			},
			["indicator_raidmark_anchor"] = {
				["x"] = -1.810005187988281,
			},
			["aura_y_offset"] = 18.05999755859375,
			["extra_icon_width"] = 24,
			["use_ui_parent"] = true,
			["health_statusbar_texture"] = "Details Flat",
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Hide Neutral Units"] = 1,
				["Cast Bar Icon Config"] = 2,
				["Aura Reorder"] = 3,
				["Combo Points"] = 6,
				["Extra Border"] = 2,
				["Target Color"] = 3,
				["Execute Range"] = 1,
				["Attacking Specific Unit"] = 2,
			},
			["expansion_triggerwipe"] = {
				[9] = true,
			},
			["focus_texture"] = "Details Flat",
			["cast_statusbar_bgcolor"] = {
				0.0392156862745098, -- [1]
				0.0392156862745098, -- [2]
				0.0392156862745098, -- [3]
				1, -- [4]
			},
			["show_interrupt_author"] = false,
			["indicator_spec"] = false,
			["border_thickness"] = 1.519999980926514,
			["resources_settings"] = {
				["chr"] = {
					["Player-1305-0B0683B1"] = "HolyPower",
					["Player-1402-0615382A"] = "SoulShards",
					["Player-1305-0C55F6F5"] = "SoulShards",
					["Player-1305-0C54E461"] = "Essence",
					["Player-1305-0C55B776"] = "Runes",
					["Player-1305-0C45EA47"] = "SoulShards",
					["Player-1305-0B8454A1"] = "ComboPoints",
					["Player-3702-06215D83"] = "ComboPoints",
					["Player-1305-0A2C8E4D"] = "ComboPoints",
					["Player-1303-0B607169"] = "Runes",
					["Player-3682-05CBB572"] = "Chi",
					["Player-1305-0CABEA37"] = "SoulShards",
					["Player-1402-06154C45"] = "ArcaneCharges",
				},
			},
			["npc_cache"] = {
				[167898] = {
					"Manifestation of Envy", -- [1]
					"Halls of Atonement", -- [2]
				},
				[156134] = {
					"Ghastly Charger", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[166492] = {
					"Darkturned Crusher", -- [1]
					"Bastion Scenario", -- [2]
				},
				[165597] = {
					"Patchwerk Soldier", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[164702] = {
					"Carrion Worm", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[173142] = {
					"Dread Feaster", -- [1]
					"Castle Nathria", -- [2]
				},
				[180431] = {
					"Focused Ritualist", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[104218] = {
					"Advisor Melandrus", -- [1]
					"Court of Stars", -- [2]
				},
				[179281] = {
					"Coagulated Blood", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[180432] = {
					"Devoted Accomplice", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[173655] = {
					"Mistveil Matriarch", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[117198] = {
					"Highlord Kruul", -- [1]
					"Artifact - Acquisition - Tank", -- [2]
				},
				[173016] = {
					"Corpse Collector", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[180433] = {
					"Wandering Pulsar", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[166495] = {
					"Forsworn Oracle", -- [1]
					"Bastion Scenario", -- [2]
				},
				[164705] = {
					"Pestilence Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[173145] = {
					"Gorging Mite", -- [1]
					"Castle Nathria", -- [2]
				},
				[178388] = {
					"Bazaar Strongarm", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[176598] = {
					"Torment Golem", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[166496] = {
					"Avowed Soulbinder", -- [1]
					"Bastion Scenario", -- [2]
				},
				[164578] = {
					"Stitchflesh's Creation", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[178133] = {
					"Murkbrine Wavejumper", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[173146] = {
					"Winged Ravager", -- [1]
					"Castle Nathria", -- [2]
				},
				[175576] = {
					"Containment Cell", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[164451] = {
					"Dessia the Decapitator", -- [1]
					"Theater of Pain", -- [2]
				},
				[99233] = {
					"Ember", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[164707] = {
					"Congealed Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[55659] = {
					"Wild Imp", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[185680] = {
					"Vy Relic", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[169696] = {
					"Mire Soldier", -- [1]
					"Plaguefall", -- [2]
				},
				[178008] = {
					"Decrepit Orb", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[178392] = {
					"Gatewarden Zo'mazz", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[168418] = {
					"Forsworn Inquisitor", -- [1]
					"Spires of Ascension", -- [2]
				},
				[156015] = {
					"Writhing Soulmass", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164967] = {
					"Doctor Ickus", -- [1]
					"Plaguefall", -- [2]
				},
				[178394] = {
					"Cartel Lackey", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[185683] = {
					"Wo Relic", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[168420] = {
					"Forsworn Champion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[170850] = {
					"Raging Bloodhorn", -- [1]
					"Theater of Pain", -- [2]
				},
				[178139] = {
					"Murkbrine Shellcrusher", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[157807] = {
					"Mawsworn Soulweaver", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[177500] = {
					"Corsair Brute", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[176605] = {
					"Kidclean", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[180058] = {
					"Shadowsteel Colossus", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[177117] = {
					"Orb of Torment", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[98533] = {
					"Foul Mother", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[18831] = {
					"High King Maulgar", -- [1]
					"Gruul's Lair", -- [2]
				},
				[168934] = {
					"Enraged Spirit", -- [1]
					"De Other Side", -- [2]
				},
				[157809] = {
					"Mawsworn Darkcaster", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[104288] = {
					"Trilliax", -- [1]
					"The Nighthold", -- [2]
				},
				[160495] = {
					"Maniacal Soulbinder", -- [1]
					"Theater of Pain", -- [2]
				},
				[178142] = {
					"Murkbrine Fishmancer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[157810] = {
					"Mawsworn Endbringer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[12101] = {
					"Lava Surger", -- [1]
					"Molten Core", -- [2]
				},
				[172005] = {
					"Furrowed Colossus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164461] = {
					"Sathel the Accursed", -- [1]
					"Theater of Pain", -- [2]
				},
				[168681] = {
					"Forsworn Helion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[112665] = {
					"Nighthold Protector", -- [1]
					"The Nighthold", -- [2]
				},
				[156022] = {
					"Bubbling Soulmass", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165357] = {
					"Pestilence Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[177889] = {
					"Mawforged Souljudge", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[113113] = {
					"Essence of Nightmare", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[156023] = {
					"Miniature Soulmass", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167532] = {
					"Heavin the Breaker", -- [1]
					"Theater of Pain", -- [2]
				},
				[173798] = {
					"Rat of Unusual Size", -- [1]
					"Castle Nathria", -- [2]
				},
				[98280] = {
					"Risen Arcanist", -- [1]
					"Black Rook Hold", -- [2]
				},
				[170474] = {
					"Brood Assassin", -- [1]
					"Plaguefall", -- [2]
				},
				[167533] = {
					"Advent Nevermore", -- [1]
					"Theater of Pain", -- [2]
				},
				[177891] = {
					"Mawforged Summoner", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[98792] = {
					"Wyrmtongue Scavenger", -- [1]
					"Black Rook Hold", -- [2]
				},
				[172265] = {
					"Remnant of Fury", -- [1]
					"Sanguine Depths", -- [2]
				},
				[167534] = {
					"Rek the Hardened", -- [1]
					"Theater of Pain", -- [2]
				},
				[177892] = {
					"Mawforged Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[112603] = {
					"Terrace Grove-Tender", -- [1]
					"The Nighthold", -- [2]
				},
				[165872] = {
					"Flesh Crafter", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[106785] = {
					"Bitterbrine Slave", -- [1]
					"Eye of Azshara", -- [2]
				},
				[18832] = {
					"Krosh Firehand", -- [1]
					"Gruul's Lair", -- [2]
				},
				[168942] = {
					"Death Speaker", -- [1]
					"De Other Side", -- [2]
				},
				[180323] = {
					"Fatespawn Monstrosity", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[11502] = {
					"Ragnaros", -- [1]
					"Molten Core", -- [2]
				},
				[178661] = {
					"Mawsworn Interceptor", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[167536] = {
					"Harugia the Bloodthirsty", -- [1]
					"Theater of Pain", -- [2]
				},
				[97259] = {
					"Blazing Hydra Spawn", -- [1]
					"Eye of Azshara", -- [2]
				},
				[162038] = {
					"Regal Mistdancer", -- [1]
					"Sanguine Depths", -- [2]
				},
				[104676] = {
					"Waning Time Particle", -- [1]
					"The Nighthold", -- [2]
				},
				[106786] = {
					"Bitterbrine Slave", -- [1]
					"Eye of Azshara", -- [2]
				},
				[113052] = {
					"Dreadguard", -- [1]
					"The Nighthold", -- [2]
				},
				[165108] = {
					"Illusionary Clone", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[118487] = {
					"Dread Corruptor", -- [1]
					"Black Rook Hold - Artifact Challenge", -- [2]
				},
				[156157] = {
					"Coldheart Ascendant", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167538] = {
					"Dokigg the Brutalizer", -- [1]
					"Theater of Pain", -- [2]
				},
				[11662] = {
					"Flamewaker Priest", -- [1]
					"Molten Core", -- [2]
				},
				[180070] = {
					"Mawsworn Scryer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[162040] = {
					"Grand Overseer", -- [1]
					"Sanguine Depths", -- [2]
				},
				[170480] = {
					"Atal'ai Deathwalker", -- [1]
					"De Other Side", -- [2]
				},
				[171887] = {
					"Slimy Smorgasbord", -- [1]
					"Plaguefall", -- [2]
				},
				[162041] = {
					"Grubby Dirtcruncher", -- [1]
					"Sanguine Depths", -- [2]
				},
				[171376] = {
					"Head Custodian Javlin", -- [1]
					"Sanguine Depths", -- [2]
				},
				[156159] = {
					"Coldheart Javelineer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[179177] = {
					"Mawsworn Overlord", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[165111] = {
					"Drust Spiteclaw", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[175725] = {
					"Eye of the Jailer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[180840] = {
					"Frostbound Devoted", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[177004] = {
					"Tortured Amalgamation", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[175726] = {
					"Skyja", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[152708] = {
					"Mawsworn Seeker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[179434] = {
					"Mawsworn Doubtcaller", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[118489] = {
					"Corrupted Risen Soldier", -- [1]
					"Black Rook Hold - Artifact Challenge", -- [2]
				},
				[170483] = {
					"Atal'ai Deathwalker's Spirit", -- [1]
					"De Other Side", -- [2]
				},
				[104295] = {
					"Blazing Imp", -- [1]
					"Court of Stars", -- [2]
				},
				[105304] = {
					"Dominator Tentacle", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[180567] = {
					"Frenzied Nightclaw", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[164857] = {
					"Spriggan Mendbender", -- [1]
					"De Other Side", -- [2]
				},
				[104293] = {
					"Avatar of Shadow", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[151814] = {
					"Deadsoul Shade", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168310] = {
					"Plagueroc", -- [1]
					"Plaguefall", -- [2]
				},
				[168153] = {
					"Plagueroc", -- [1]
					"Plaguefall", -- [2]
				},
				[175727] = {
					"Soulrender Dormazain", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[11982] = {
					"Magmadar", -- [1]
					"Molten Core", -- [2]
				},
				[178029] = {
					"Mawsworn Wingsoldier", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[177237] = {
					"Chains of Damnation", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[107101] = {
					"Fel Fury", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[151815] = {
					"Deadsoul Echo", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[101414] = {
					"Saltscale Skulker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[164589] = {
					"Regenerating Wildseed", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[105383] = {
					"Corruptor Tentacle", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[176879] = {
					"Hollowsoul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[166266] = {
					"Spare Parts", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[175729] = {
					"Remnant of Ner'zhul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[180428] = {
					"Tortured Soul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[151816] = {
					"Deadsoul Scavenger", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[105703] = {
					"Mana Wyrm", -- [1]
					"Court of Stars", -- [2]
				},
				[170486] = {
					"Atal'ai Devoted", -- [1]
					"De Other Side", -- [2]
				},
				[179821] = {
					"Commander Zo'far", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[176880] = {
					"Soulscream Tormentor", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[12118] = {
					"Lucifron", -- [1]
					"Molten Core", -- [2]
				},
				[173044] = {
					"Stitching Assistant", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[98926] = {
					"Shadow Hunter", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[151817] = {
					"Deadsoul Devil", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[118491] = {
					"Corrupted Risen Mage", -- [1]
					"Black Rook Hold - Artifact Challenge", -- [2]
				},
				[97260] = {
					"Arcane Hydra Spawn", -- [1]
					"Eye of Azshara", -- [2]
				},
				[175730] = {
					"Fatescribe Roh-Kalo", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[166396] = {
					"Noble Skirmisher", -- [1]
					"Sanguine Depths", -- [2]
				},
				[157572] = {
					"Mawsworn Firecaller", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164861] = {
					"Spriggan Barkbinder", -- [1]
					"De Other Side", -- [2]
				},
				[168058] = {
					"Infused Quill-feather", -- [1]
					"Sanguine Depths", -- [2]
				},
				[151818] = {
					"Deadsoul Miscreation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[105704] = {
					"Arcane Manifestation", -- [1]
					"Court of Stars", -- [2]
				},
				[170488] = {
					"Son of Hakkar", -- [1]
					"De Other Side", -- [2]
				},
				[175731] = {
					"Guardian of the First Ones", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[99678] = {
					"Lingering Corruption", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[111075] = {
					"Chaotoid", -- [1]
					"The Nighthold", -- [2]
				},
				[174069] = {
					"Hulking Gargon", -- [1]
					"Castle Nathria", -- [2]
				},
				[174197] = {
					"Battlefield Ritualist", -- [1]
					"Theater of Pain", -- [2]
				},
				[162049] = {
					"Vestige of Doubt", -- [1]
					"Sanguine Depths", -- [2]
				},
				[171384] = {
					"Research Scribe", -- [1]
					"Sanguine Depths", -- [2]
				},
				[99630] = {
					"Bitterbrine Scavenger", -- [1]
					"Eye of Azshara", -- [2]
				},
				[166525] = {
					"Fallen Legionnaire", -- [1]
					"Bastion Scenario", -- [2]
				},
				[95920] = {
					"Animated Storm", -- [1]
					"Eye of Azshara", -- [2]
				},
				[162689] = {
					"Surgeon Stitchflesh", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[174070] = {
					"Kennel Overseer", -- [1]
					"Castle Nathria", -- [2]
				},
				[180336] = {
					"Cartel Wiseguy", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[101549] = {
					"Arcane Minion", -- [1]
					"Black Rook Hold", -- [2]
				},
				[105705] = {
					"Bound Energy", -- [1]
					"Court of Stars", -- [2]
				},
				[170490] = {
					"Atal'ai High Priest", -- [1]
					"De Other Side", -- [2]
				},
				[168572] = {
					"Fungi Stormer", -- [1]
					"Plaguefall", -- [2]
				},
				[175861] = {
					"Glacial Spike", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[178163] = {
					"Murkbrine Shorerunner", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[174071] = {
					"Vicious Gargon", -- [1]
					"Castle Nathria", -- [2]
				},
				[170228] = {
					"Bone Husk", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[162051] = {
					"Frenzied Ghoul", -- [1]
					"Sanguine Depths", -- [2]
				},
				[11661] = {
					"Flamewaker", -- [1]
					"Molten Core", -- [2]
				},
				[105322] = {
					"Deathglare Tentacle", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[163458] = {
					"Forsworn Castigator", -- [1]
					"Spires of Ascension", -- [2]
				},
				[168574] = {
					"Pestilent Harvester", -- [1]
					"Plaguefall", -- [2]
				},
				[164737] = {
					"Brood Ambusher", -- [1]
					"Plaguefall", -- [2]
				},
				[112675] = {
					"Duskwatch Sentinel", -- [1]
					"The Nighthold", -- [2]
				},
				[177269] = {
					"So'leah", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[112803] = {
					"Astrologer Jarin", -- [1]
					"The Nighthold", -- [2]
				},
				[168318] = {
					"Forsworn Goliath", -- [1]
					"Spires of Ascension", -- [2]
				},
				[176974] = {
					"Soul Reaver", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[163459] = {
					"Forsworn Mender", -- [1]
					"Spires of Ascension", -- [2]
				},
				[18834] = {
					"Olm the Summoner", -- [1]
					"Gruul's Lair", -- [2]
				},
				[162692] = {
					"Amarth", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[178165] = {
					"Coastwalker Goliath", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[166524] = {
					"Deathwalker", -- [1]
					"Theater of Pain", -- [2]
				},
				[118492] = {
					"Corrupted Risen Arbalest", -- [1]
					"Black Rook Hold - Artifact Challenge", -- [2]
				},
				[111333] = {
					"Taintheart Trickster", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[162309] = {
					"Kul'tharok", -- [1]
					"Theater of Pain", -- [2]
				},
				[104300] = {
					"Shadow Mistress", -- [1]
					"Court of Stars", -- [2]
				},
				[171772] = {
					"Mistveil Defender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[162693] = {
					"Nalthor the Rimebinder", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[112676] = {
					"Nobleborn Warpcaster", -- [1]
					"The Nighthold", -- [2]
				},
				[98538] = {
					"Lady Velandras Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
				},
				[163077] = {
					"Azules", -- [1]
					"Spires of Ascension", -- [2]
				},
				[165251] = {
					"Illusionary Vulpin", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[112596] = {
					"Duskwatch Warden", -- [1]
					"The Nighthold", -- [2]
				},
				[169173] = {
					"Meatball's Tormentor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164464] = {
					"Xira the Underhanded", -- [1]
					"Theater of Pain", -- [2]
				},
				[102566] = {
					"Grimhorn the Enslaver", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[95861] = {
					"Hatecoil Oracle", -- [1]
					"Eye of Azshara", -- [2]
				},
				[107114] = {
					"Tormenting Orb", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[179446] = {
					"Incinerator Arkolath", -- [1]
					"Sanguine Depths", -- [2]
				},
				[166275] = {
					"Mistveil Shaper", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[105699] = {
					"Mana Saber", -- [1]
					"Court of Stars", -- [2]
				},
				[112595] = {
					"Shal'dorei Archmage", -- [1]
					"The Nighthold", -- [2]
				},
				[11663] = {
					"Flamewaker Healer", -- [1]
					"Molten Core", -- [2]
				},
				[11671] = {
					"Core Hound", -- [1]
					"Molten Core", -- [2]
				},
				[172030] = {
					"Tormenter Overlord", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[155790] = {
					"Mawsworn Acolyte", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[162056] = {
					"Rockbound Sprite", -- [1]
					"Sanguine Depths", -- [2]
				},
				[17252] = {
					"ThooZeras", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[154128] = {
					"Blazing Elemental", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168578] = {
					"Fungalmancer", -- [1]
					"Plaguefall", -- [2]
				},
				[104215] = {
					"Patrol Captain Gerdo", -- [1]
					"Court of Stars", -- [2]
				},
				[178041] = {
					"Mawsworn Shackler", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[152594] = {
					"Broker Ve'ken", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[118044] = {
					"Nether Horror", -- [1]
					"Artifact - Acquisition - Tank", -- [2]
				},
				[162057] = {
					"Chamber Sentinel", -- [1]
					"Sanguine Depths", -- [2]
				},
				[113307] = {
					"Chronowraith", -- [1]
					"The Nighthold", -- [2]
				},
				[154129] = {
					"Burning Emberguard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[162046] = {
					"Famished Tick", -- [1]
					"Sanguine Depths", -- [2]
				},
				[107435] = {
					"Suspicious Noble", -- [1]
					"Court of Stars", -- [2]
				},
				[97269] = {
					"Hatecoil Crestrider", -- [1]
					"Eye of Azshara", -- [2]
				},
				[112678] = {
					"Shal'dorei Naturalist", -- [1]
					"The Nighthold", -- [2]
				},
				[155908] = {
					"Deathspeaker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[162058] = {
					"Ventunax", -- [1]
					"Spires of Ascension", -- [2]
				},
				[179433] = {
					"Vault Aegis", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[117852] = {
					"Tugar Bloodtotem", -- [1]
					"Artifact - Highmountain - Dual Boss", -- [2]
				},
				[177787] = {
					"Mawsworn Hopebreaker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[122397] = {
					"Corrupted Risen Arbalest", -- [1]
					"Black Rook Hold - Artifact Challenge", -- [2]
				},
				[178043] = {
					"Mawsworn Lancer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[178171] = {
					"Stormforged Guardian", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[155793] = {
					"Skeletal Remains", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[162059] = {
					"Kin-Tara", -- [1]
					"Spires of Ascension", -- [2]
				},
				[157583] = {
					"Forge Keeper", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[98293] = {
					"Saltsea Globule", -- [1]
					"Eye of Azshara", -- [2]
				},
				[169861] = {
					"Ickor Bileflesh", -- [1]
					"Plaguefall", -- [2]
				},
				[111528] = {
					"Deathroot Ancient", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[168837] = {
					"Stealthling", -- [1]
					"Plaguefall", -- [2]
				},
				[164873] = {
					"Runestag Elderhorn", -- [1]
					"De Other Side", -- [2]
				},
				[180091] = {
					"Ancient Core Hound", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[180474] = {
					"Soul Reaver", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168326] = {
					"Shattered Visage", -- [1]
					"De Other Side", -- [2]
				},
				[164362] = {
					"Slimy Morsel", -- [1]
					"Plaguefall", -- [2]
				},
				[98677] = {
					"Rook Spiderling", -- [1]
					"Black Rook Hold", -- [2]
				},
				[18835] = {
					"Kiggler the Crazed", -- [1]
					"Gruul's Lair", -- [2]
				},
				[111081] = {
					"Fulminant", -- [1]
					"The Nighthold", -- [2]
				},
				[103217] = {
					"Crystalline Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[99956] = {
					"Fel-Infused Fury", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[162061] = {
					"Devos", -- [1]
					"Spires of Ascension", -- [2]
				},
				[171396] = {
					"Kyrian Goliath", -- [1]
					"Theater of Pain", -- [2]
				},
				[162317] = {
					"Gorechop", -- [1]
					"Theater of Pain", -- [2]
				},
				[174175] = {
					"Loyal Stoneborn", -- [1]
					"Halls of Atonement", -- [2]
				},
				[164567] = {
					"Ingra Maloch", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[104278] = {
					"Felbound Enforcer", -- [1]
					"Court of Stars", -- [2]
				},
				[175616] = {
					"Zo'phex", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[174210] = {
					"Blighted Sludge-Spewer", -- [1]
					"Theater of Pain", -- [2]
				},
				[174338] = {
					"Stinky Feedhauler", -- [1]
					"Castle Nathria", -- [2]
				},
				[104688] = {
					"Voidling", -- [1]
					"The Nighthold", -- [2]
				},
				[165515] = {
					"Depraved Darkblade", -- [1]
					"Halls of Atonement", -- [2]
				},
				[179837] = {
					"Tracker Zo'korss", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[168457] = {
					"Stonewall Gargon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[12119] = {
					"Flamewaker Protector", -- [1]
					"Molten Core", -- [2]
				},
				[168968] = {
					"Plaguebound Fallen", -- [1]
					"Plaguefall", -- [2]
				},
				[111210] = {
					"Searing Infernal", -- [1]
					"The Nighthold", -- [2]
				},
				[163086] = {
					"Rancid Gasbag", -- [1]
					"Theater of Pain", -- [2]
				},
				[165260] = {
					"Oozing Leftovers", -- [1]
					"Theater of Pain", -- [2]
				},
				[166411] = {
					"Forsworn Usurper", -- [1]
					"Spires of Ascension", -- [2]
				},
				[113512] = {
					"Putrid Sludge", -- [1]
					"The Nighthold", -- [2]
				},
				[153879] = {
					"Deadsoul Shadow", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[104415] = {
					"Chronomatic Anomaly", -- [1]
					"The Nighthold", -- [2]
				},
				[168969] = {
					"Gushing Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[165222] = {
					"Zolramus Bonemender", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[172021] = {
					"Coldheart Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[166276] = {
					"Mistveil Guardian", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[168949] = {
					"Risen Bonesoldier", -- [1]
					"De Other Side", -- [2]
				},
				[175611] = {
					"The Tarragrue", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[104881] = {
					"Spellblade Aluriel", -- [1]
					"The Nighthold", -- [2]
				},
				[106643] = {
					"Elisande", -- [1]
					"The Nighthold", -- [2]
				},
				[177154] = {
					"Mawsworn Vanguard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[159755] = {
					"The Grand Malleare", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[113321] = {
					"Shambling Hungerer", -- [1]
					"The Nighthold", -- [2]
				},
				[173446] = {
					"Hargitas", -- [1]
					"Castle Nathria", -- [2]
				},
				[179840] = {
					"Market Peacekeeper", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[171656] = {
					"Venomous Sniper Captain", -- [1]
					"Plaguefall", -- [2]
				},
				[105393] = {
					"Il'gynoth", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[168843] = {
					"Klotos", -- [1]
					"Spires of Ascension", -- [2]
				},
				[164463] = {
					"Paceran the Virulent", -- [1]
					"Theater of Pain", -- [2]
				},
				[166012] = {
					"Athanos", -- [1]
					"Bastion Scenario", -- [2]
				},
				[163089] = {
					"Disgusting Refuse", -- [1]
					"Theater of Pain", -- [2]
				},
				[179841] = {
					"Veteran Sparkcaster", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[168844] = {
					"Lakesis", -- [1]
					"Spires of Ascension", -- [2]
				},
				[180864] = {
					"High Torturer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[171342] = {
					"Juvenile Runestag", -- [1]
					"De Other Side", -- [2]
				},
				[109038] = {
					"Solarist Tel'arn", -- [1]
					"The Nighthold", -- [2]
				},
				[163857] = {
					"Plaguebound Devoted", -- [1]
					"Plaguefall", -- [2]
				},
				[165076] = {
					"Gluttonous Tick", -- [1]
					"Sanguine Depths", -- [2]
				},
				[180865] = {
					"Twisted Warden", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[154011] = {
					"Armed Prisoner", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[116839] = {
					"Corrupting Shadows", -- [1]
					"The Eye of Eternity - Scenario", -- [2]
				},
				[179842] = {
					"Commerce Enforcer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[168717] = {
					"Forsworn Justicar", -- [1]
					"Spires of Ascension", -- [2]
				},
				[168845] = {
					"Astronos", -- [1]
					"Spires of Ascension", -- [2]
				},
				[154014] = {
					"Imprisoned Cabalist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167055] = {
					"Rot Flinger", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[165137] = {
					"Zolramus Gatekeeper", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[105906] = {
					"Eye of Il'gynoth", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[19044] = {
					"Gruul the Dragonkiller", -- [1]
					"Gruul's Lair", -- [2]
				},
				[98681] = {
					"Rook Spinner", -- [1]
					"Black Rook Hold", -- [2]
				},
				[18836] = {
					"Blindeye the Seer", -- [1]
					"Gruul's Lair", -- [2]
				},
				[157083] = {
					"Stonewing Ravager", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165905] = {
					"Son of Hakkar", -- [1]
					"De Other Side", -- [2]
				},
				[177286] = {
					"Phantasmic Amalgamation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[153885] = {
					"Deadsoul Shambler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[163157] = {
					"Amarth", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[151329] = {
					"Warden Skoldus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[100216] = {
					"Hatecoil Wrangler", -- [1]
					"Eye of Azshara", -- [2]
				},
				[26125] = {
					"Beetleflayer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[109040] = {
					"Arcanist Tel'arn", -- [1]
					"The Nighthold", -- [2]
				},
				[98362] = {
					"Troubled Soul", -- [1]
					"Black Rook Hold", -- [2]
				},
				[116840] = {
					"Darkness Within", -- [1]
					"The Eye of Eternity - Scenario", -- [2]
				},
				[176521] = {
					"Stygian Abductor", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[105715] = {
					"Watchful Inquisitor", -- [1]
					"Court of Stars", -- [2]
				},
				[163862] = {
					"Defender of Many Eyes", -- [1]
					"Plaguefall", -- [2]
				},
				[164563] = {
					"Vicious Gargon", -- [1]
					"Halls of Atonement", -- [2]
				},
				[24207] = {
					"Army of the Dead", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[98810] = {
					"Wrathguard Bladelord", -- [1]
					"Black Rook Hold", -- [2]
				},
				[178824] = {
					"Borr-Gahn", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[179334] = {
					"Portalmancer Zo'nyy", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[102583] = {
					"Fel Scorcher", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[168337] = {
					"Moldovaak", -- [1]
					"Castle Nathria", -- [2]
				},
				[162133] = {
					"General Kaal", -- [1]
					"Sanguine Depths", -- [2]
				},
				[164501] = {
					"Mistcaller", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[11664] = {
					"Flamewaker Elite", -- [1]
					"Molten Core", -- [2]
				},
				[11672] = {
					"Core Rager", -- [1]
					"Molten Core", -- [2]
				},
				[174092] = {
					"Nathrian Gargon Rider", -- [1]
					"Castle Nathria", -- [2]
				},
				[168594] = {
					"Chamber Sentinel", -- [1]
					"Sanguine Depths", -- [2]
				},
				[176394] = {
					"P.O.S.T. Worker", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[109041] = {
					"Naturalist Tel'arn", -- [1]
					"The Nighthold", -- [2]
				},
				[170257] = {
					"Broker Ve'nott", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[179847] = {
					"Shadowsteel Horror", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[151331] = {
					"Cellblock Sentinel", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[179080] = {
					"Empowered Mawsworn Cremator", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[111151] = {
					"Midnight Siphoner", -- [1]
					"The Nighthold", -- [2]
				},
				[104246] = {
					"Duskwatch Guard", -- [1]
					"Court of Stars", -- [2]
				},
				[176395] = {
					"Overloaded Mailemental", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[176523] = {
					"Painsmith Raznal", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[162329] = {
					"Xav the Unfallen", -- [1]
					"Theater of Pain", -- [2]
				},
				[166608] = {
					"Mueh'zala", -- [1]
					"De Other Side", -- [2]
				},
				[178427] = {
					"Deadsoul Wraith", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168398] = {
					"Slimy Morsel", -- [1]
					"Plaguefall", -- [2]
				},
				[167956] = {
					"Dark Acolyte", -- [1]
					"Sanguine Depths", -- [2]
				},
				[102584] = {
					"Malignant Defiler", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[176396] = {
					"Defective Sorter", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[154018] = {
					"Prisonbreak Mauler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[162047] = {
					"Insatiable Brute", -- [1]
					"Sanguine Depths", -- [2]
				},
				[115244] = {
					"Archmage Xylem", -- [1]
					"The Eye of Eternity - Scenario", -- [2]
				},
				[151333] = {
					"Sentinel Shard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[169875] = {
					"Shackled Soul", -- [1]
					"Theater of Pain", -- [2]
				},
				[165911] = {
					"Loyal Creation", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[169457] = {
					"Bargast", -- [1]
					"Castle Nathria", -- [2]
				},
				[104247] = {
					"Duskwatch Arcanist", -- [1]
					"Court of Stars", -- [2]
				},
				[166299] = {
					"Mistveil Tender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[103224] = {
					"Volatile Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[98173] = {
					"Mystic Ssa'veh", -- [1]
					"Eye of Azshara", -- [2]
				},
				[173840] = {
					"Plaguebound Devoted", -- [1]
					"Plaguefall", -- [2]
				},
				[164506] = {
					"Ancient Captain", -- [1]
					"Theater of Pain", -- [2]
				},
				[159190] = {
					"Synod", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[178957] = {
					"Empowered Mawsworn Soulwarden", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[155812] = {
					"Mawsworn Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[154020] = {
					"Prisonbreak Cursewalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165276] = {
					"Forsworn Javelineer", -- [1]
					"Bastion Scenario", -- [2]
				},
				[165529] = {
					"Depraved Collector", -- [1]
					"Halls of Atonement", -- [2]
				},
				[105721] = {
					"Nightmare Ichor", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[98813] = {
					"Bloodscent Felhound", -- [1]
					"Black Rook Hold", -- [2]
				},
				[165913] = {
					"Ghastly Parishioner", -- [1]
					"Halls of Atonement", -- [2]
				},
				[167965] = {
					"Lubricator", -- [1]
					"De Other Side", -- [2]
				},
				[166169] = {
					"Adonias", -- [1]
					"Bastion Scenario", -- [2]
				},
				[167963] = {
					"Headless Client", -- [1]
					"De Other Side", -- [2]
				},
				[103225] = {
					"Acidmaw Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[173714] = {
					"Mistveil Nightblossom", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[153382] = {
					"Maw of the Maw", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[12056] = {
					"Baron Geddon", -- [1]
					"Molten Core", -- [2]
				},
				[98366] = {
					"Ghostly Retainer", -- [1]
					"Black Rook Hold", -- [2]
				},
				[105591] = {
					"Nightmare Horror", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[166170] = {
					"Phaedra", -- [1]
					"Bastion Scenario", -- [2]
				},
				[165275] = {
					"Fallen Legionnaire", -- [1]
					"Bastion Scenario", -- [2]
				},
				[91782] = {
					"Hatecoil Crusher", -- [1]
					"Eye of Azshara", -- [2]
				},
				[177807] = {
					"Customs Security", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[168396] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[176531] = {
					"Deathseeker Eye", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[166304] = {
					"Mistveil Stinger", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[91781] = {
					"Hatecoil Warrior", -- [1]
					"The Shadowlands", -- [2]
				},
				[167964] = {
					"4.RF-4.RF", -- [1]
					"De Other Side", -- [2]
				},
				[117484] = {
					"Jormog the Behemoth", -- [1]
					"Artifact - Highmountain - Dual Boss", -- [2]
				},
				[168907] = {
					"Slime Tentacle", -- [1]
					"Plaguefall", -- [2]
				},
				[177808] = {
					"Armored Overseer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[117933] = {
					"Inquisitor Variss", -- [1]
					"Artifact - Acquisition - Tank", -- [2]
				},
				[166302] = {
					"Corpse Harvester", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[167962] = {
					"Defunct Dental Drill", -- [1]
					"De Other Side", -- [2]
				},
				[173080] = {
					"Wandering Death", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[104251] = {
					"Duskwatch Sentry", -- [1]
					"Court of Stars", -- [2]
				},
				[6112] = {
					"Windfury Totem", -- [1]
					"Theater of Pain", -- [2]
				},
				[118637] = {
					"Shadowy Fiend", -- [1]
					"Dread Scar Rift - Warlock Scenario Platform", -- [2]
				},
				[164510] = {
					"Shambling Arbalest", -- [1]
					"Theater of Pain", -- [2]
				},
				[169753] = {
					"Famished Tick", -- [1]
					"Sanguine Depths", -- [2]
				},
				[180415] = {
					"Mawsworn Axeguard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168986] = {
					"Skeletal Raptor", -- [1]
					"De Other Side", -- [2]
				},
				[12264] = {
					"Shazzrah", -- [1]
					"Molten Core", -- [2]
				},
				[180495] = {
					"Enraged Direhorn", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[166301] = {
					"Mistveil Stalker", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[169498] = {
					"Plague Bomb", -- [1]
					"Plaguefall", -- [2]
				},
				[120386] = {
					"Scavenging Crow", -- [1]
					"The Eye of Eternity - Scenario", -- [2]
				},
				[111860] = {
					"Bo'lan the Marked", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[176537] = {
					"Infused Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[98368] = {
					"Ghostly Protector", -- [1]
					"Black Rook Hold", -- [2]
				},
				[166046] = {
					"Lysonia", -- [1]
					"Bastion Scenario", -- [2]
				},
				[172312] = {
					"Spinemaw Gorger", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[165279] = {
					"Avowed Soulbinder", -- [1]
					"Bastion Scenario", -- [2]
				},
				[166430] = {
					"Forsworn Oracle", -- [1]
					"Bastion Scenario", -- [2]
				},
				[95940] = {
					"Bitterbrine Scavenger", -- [1]
					"Eye of Azshara", -- [2]
				},
				[11665] = {
					"Lava Annihilator", -- [1]
					"Molten Core", -- [2]
				},
				[117230] = {
					"Tugar Bloodtotem", -- [1]
					"Artifact - Highmountain - Dual Boss", -- [2]
				},
				[165919] = {
					"Skeletal Marauder", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[91783] = {
					"Hatecoil Stormweaver", -- [1]
					"Eye of Azshara", -- [2]
				},
				[95939] = {
					"Skrog Tidestomper", -- [1]
					"Eye of Azshara", -- [2]
				},
				[150958] = {
					"Mawsworn Guard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165408] = {
					"Halkias", -- [1]
					"Halls of Atonement", -- [2]
				},
				[173720] = {
					"Mistveil Gorgegullet", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[163618] = {
					"Zolramus Necromancer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[100351] = {
					"Avatar of Vengeance", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[167966] = {
					"Experimental Sludge", -- [1]
					"De Other Side", -- [2]
				},
				[168394] = {
					"Slimy Morsel", -- [1]
					"Plaguefall", -- [2]
				},
				[163621] = {
					"Goregrind", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[150959] = {
					"Mawsworn Interceptor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[113013] = {
					"Felsworn Shadowblade", -- [1]
					"The Nighthold", -- [2]
				},
				[102781] = {
					"Fel Bat Pup", -- [1]
					"Black Rook Hold", -- [2]
				},
				[163619] = {
					"Zolramus Bonecarver", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[171422] = {
					"Arch-Suppressor Laguas", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167967] = {
					"Sentient Oil", -- [1]
					"De Other Side", -- [2]
				},
				[91784] = {
					"Warlord Parjesh", -- [1]
					"Eye of Azshara", -- [2]
				},
				[166177] = {
					"Reinforced Pouncer", -- [1]
					"Bastion Scenario", -- [2]
				},
				[176535] = {
					"Infused Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[165410] = {
					"High Adjudicator Aleez", -- [1]
					"Halls of Atonement", -- [2]
				},
				[118638] = {
					"Shadowy Vestige", -- [1]
					"Dread Scar Rift - Warlock Scenario Platform", -- [2]
				},
				[163620] = {
					"Rotspew", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[163622] = {
					"Goregrind Bits", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[98370] = {
					"Ghostly Councilor", -- [1]
					"Black Rook Hold", -- [2]
				},
				[104273] = {
					"Jazshariu", -- [1]
					"Court of Stars", -- [2]
				},
				[166178] = {
					"Forsworn Doubtguard", -- [1]
					"Bastion Scenario", -- [2]
				},
				[154030] = {
					"Oddly Large Mawrat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[179733] = {
					"Invigorating Fish Stick", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[113012] = {
					"Felsworn Chaos-Mage", -- [1]
					"The Nighthold", -- [2]
				},
				[176920] = {
					"Domination Arrow", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[178071] = {
					"Maw Assassin", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168992] = {
					"Risen Cultist", -- [1]
					"De Other Side", -- [2]
				},
				[91785] = {
					"Wandering Shellback", -- [1]
					"The Shadowlands", -- [2]
				},
				[177817] = {
					"Support Officer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[164261] = {
					"Hungering Destroyer", -- [1]
					"Castle Nathria", -- [2]
				},
				[163366] = {
					"Magus of the Dead", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[177816] = {
					"Interrogation Specialist", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[98243] = {
					"Soul-Torn Champion", -- [1]
					"Black Rook Hold", -- [2]
				},
				[11673] = {
					"Ancient Core Hound", -- [1]
					"Molten Core", -- [2]
				},
				[156245] = {
					"Grand Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[69791] = {
					"Hobrewken", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168393] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[176538] = {
					"Infused Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[166436] = {
					"Forsworn Oracle", -- [1]
					"Bastion Scenario", -- [2]
				},
				[98691] = {
					"Risen Scout", -- [1]
					"Black Rook Hold", -- [2]
				},
				[163623] = {
					"Rotspew Leftovers", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[112118] = {
					"Tainted Bloodpetal", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[157571] = {
					"Mawsworn Flametender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168099] = {
					"Empowered Coldheart Javelineer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[176539] = {
					"Infused Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[157102] = {
					"Imperial Consular", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165414] = {
					"Depraved Obliterator", -- [1]
					"Halls of Atonement", -- [2]
				},
				[168580] = {
					"Plagueborer", -- [1]
					"Plaguefall", -- [2]
				},
				[63508] = {
					"Xuen", -- [1]
					"Theater of Pain", -- [2]
				},
				[162729] = {
					"Patchwerk Soldier", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[165415] = {
					"Toiling Groundskeeper", -- [1]
					"Halls of Atonement", -- [2]
				},
				[69792] = {
					"Hobrewken", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[99651] = {
					"Faceless Voidcaster", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[150965] = {
					"Mawsworn Shackler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[118065] = {
					"Smoldering Infernal", -- [1]
					"Artifact - Acquisition - Tank", -- [2]
				},
				[156244] = {
					"Winged Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[91787] = {
					"Cove Seagull", -- [1]
					"Eye of Azshara", -- [2]
				},
				[170147] = {
					"Volatile Memory", -- [1]
					"De Other Side", -- [2]
				},
				[167113] = {
					"Spinemaw Acidgullet", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[168101] = {
					"Empowered Deadsoul Shade", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[119472] = {
					"Felspite Dominator", -- [1]
					"Black Rook Hold - Artifact Challenge", -- [2]
				},
				[169458] = {
					"Hecutis", -- [1]
					"Castle Nathria", -- [2]
				},
				[175646] = {
					"P.O.S.T. Master", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[165067] = {
					"Margore", -- [1]
					"Castle Nathria", -- [2]
				},
				[171805] = {
					"Research Scribe", -- [1]
					"Sanguine Depths", -- [2]
				},
				[171171] = {
					"Mawsworn Archer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[163882] = {
					"Decaying Flesh Giant", -- [1]
					"Plaguefall", -- [2]
				},
				[168102] = {
					"Empowered Deadsoul Echo", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[151128] = {
					"Lord of Locks", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164266] = {
					"Domina Venomblade", -- [1]
					"Plaguefall", -- [2]
				},
				[98949] = {
					"Smashspite the Hateful", -- [1]
					"Black Rook Hold", -- [2]
				},
				[171172] = {
					"Mawsworn Shackler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165066] = {
					"Huntsman Altimor", -- [1]
					"Castle Nathria", -- [2]
				},
				[169893] = {
					"Nefarious Darkspeaker", -- [1]
					"Theater of Pain", -- [2]
				},
				[163915] = {
					"Hatchling Nest", -- [1]
					"Plaguefall", -- [2]
				},
				[180379] = {
					"Mawsworn Arbalest", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[119473] = {
					"Unstable Fel Orb", -- [1]
					"Black Rook Hold - Artifact Challenge", -- [2]
				},
				[164267] = {
					"Margrave Stradama", -- [1]
					"Plaguefall", -- [2]
				},
				[177407] = {
					"Formless Mass", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[171173] = {
					"Mawsworn Shadestalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[177950] = {
					"Soul Prison", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[12057] = {
					"Garr", -- [1]
					"Molten Core", -- [2]
				},
				[156212] = {
					"Coldheart Agent", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168104] = {
					"Empowered Flameforge Master", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[155219] = {
					"Gormling Spitter", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[163501] = {
					"Forsworn Skirmisher", -- [1]
					"Spires of Ascension", -- [2]
				},
				[96584] = {
					"Immoliant Fury", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[111993] = {
					"Chaos Sphere", -- [1]
					"The Nighthold", -- [2]
				},
				[151353] = {
					"Mawrat", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167806] = {
					"Animated Sin", -- [1]
					"Halls of Atonement", -- [2]
				},
				[91789] = {
					"Lady Hatecoil", -- [1]
					"Eye of Azshara", -- [2]
				},
				[111226] = {
					"Summoner Xiv", -- [1]
					"The Nighthold", -- [2]
				},
				[168361] = {
					"Fen Hornet", -- [1]
					"Plaguefall", -- [2]
				},
				[111354] = {
					"Taintheart Befouler", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[156213] = {
					"Coldheart Guardian", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[98965] = {
					"Kur'talos Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
				},
				[176929] = {
					"Remnant of Kel'Thuzad", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[167955] = {
					"Sanguine Cadet", -- [1]
					"Sanguine Depths", -- [2]
				},
				[168106] = {
					"Empowered Mawsworn Guard", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[155830] = {
					"Mawsworn Disciple", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[155831] = {
					"Mawsworn Soulbinder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[180665] = {
					"Gibbering Soul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[111227] = {
					"Felweaver Pharamere", -- [1]
					"The Nighthold", -- [2]
				},
				[163503] = {
					"Etherdiver", -- [1]
					"Spires of Ascension", -- [2]
				},
				[417] = {
					"Bruukun", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168005] = {
					"Empowered Deadsoul Shambler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[102672] = {
					"Nythendra", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[91790] = {
					"Mak'rana Siltwalker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[119475] = {
					"Flickering Eye", -- [1]
					"Black Rook Hold - Artifact Challenge", -- [2]
				},
				[111355] = {
					"Taintheart Tormenter", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[112251] = {
					"Putrid Sludge", -- [1]
					"The Nighthold", -- [2]
				},
				[170690] = {
					"Diseased Horror", -- [1]
					"Theater of Pain", -- [2]
				},
				[168747] = {
					"Venomfang", -- [1]
					"Plaguefall", -- [2]
				},
				[162099] = {
					"General Kaal", -- [1]
					"Sanguine Depths", -- [2]
				},
				[180664] = {
					"Mawsworn Infuser", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168108] = {
					"Empowered Lumbering Creation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[163121] = {
					"Stitched Vanguard", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[95947] = {
					"Mak'rana Hardshell", -- [1]
					"Eye of Azshara", -- [2]
				},
				[99655] = {
					"Void-Touched Juggernaut", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[98696] = {
					"Illysanna Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
				},
				[91792] = {
					"Stormwake Hydra", -- [1]
					"Eye of Azshara", -- [2]
				},
				[152508] = {
					"Dusky Tremorbeast", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[111164] = {
					"Twilight Stardancer", -- [1]
					"The Nighthold", -- [2]
				},
				[180385] = {
					"Condemned Soul Remnant", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[163122] = {
					"Brittlebone Warrior", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[168365] = {
					"Fungret Shroomtender", -- [1]
					"Plaguefall", -- [2]
				},
				[96587] = {
					"Felsworn Infester", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[163506] = {
					"Forsworn Stealthclaw", -- [1]
					"Spires of Ascension", -- [2]
				},
				[172991] = {
					"Drust Soulcleaver", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[103685] = {
					"Tichondrius", -- [1]
					"The Nighthold", -- [2]
				},
				[111295] = {
					"Domesticated Manasaber", -- [1]
					"The Nighthold", -- [2]
				},
				[156239] = {
					"Dark Ascended Corrus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[162100] = {
					"Kryxis the Voracious", -- [1]
					"Sanguine Depths", -- [2]
				},
				[169905] = {
					"Risen Warlord", -- [1]
					"De Other Side", -- [2]
				},
				[112955] = {
					"Shadescale Wyrm", -- [1]
					"The Nighthold", -- [2]
				},
				[112956] = {
					"Shimmering Manaspine", -- [1]
					"The Nighthold", -- [2]
				},
				[180407] = {
					"Gorgoan Sentinel", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168878] = {
					"Wretched Plagueborer", -- [1]
					"Plaguefall", -- [2]
				},
				[163891] = {
					"Rotmarrow Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[180387] = {
					"Mawsworn Paindrinker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[91793] = {
					"Seaspray Crab", -- [1]
					"Eye of Azshara", -- [2]
				},
				[176551] = {
					"Vault Purifier", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[156219] = {
					"Coldheart Scout", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165556] = {
					"Fleeting Manifestation", -- [1]
					"Sanguine Depths", -- [2]
				},
				[166453] = {
					"Darkturned Clawguard", -- [1]
					"Bastion Scenario", -- [2]
				},
				[91794] = {
					"Saltscale Lurker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[163892] = {
					"Rotting Slimeclaw", -- [1]
					"Plaguefall", -- [2]
				},
				[171181] = {
					"Territorial Bladebeak", -- [1]
					"De Other Side", -- [2]
				},
				[162102] = {
					"Grand Proctor Beryllia", -- [1]
					"Sanguine Depths", -- [2]
				},
				[170414] = {
					"Howling Spectre", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[99657] = {
					"Deranged Mindflayer", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[155215] = {
					"Faeleaf Lasher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[166340] = {
					"Fallen Legionnaire", -- [1]
					"Bastion Scenario", -- [2]
				},
				[152898] = {
					"Deadsoul Chorus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[111166] = {
					"Resolute Courtesan", -- [1]
					"The Nighthold", -- [2]
				},
				[95885] = {
					"Tirathon Saltheril", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[163126] = {
					"Brittlebone Mage", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[163128] = {
					"Zolramus Sorcerer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[166451] = {
					"Forsworn Swiftblade", -- [1]
					"Bastion Scenario", -- [2]
				},
				[11658] = {
					"Molten Giant", -- [1]
					"Molten Core", -- [2]
				},
				[11666] = {
					"Firewalker", -- [1]
					"Molten Core", -- [2]
				},
				[170927] = {
					"Erupting Ooze", -- [1]
					"Plaguefall", -- [2]
				},
				[163894] = {
					"Blighted Spinebreaker", -- [1]
					"Plaguefall", -- [2]
				},
				[112709] = {
					"Promenade Guard", -- [1]
					"The Nighthold", -- [2]
				},
				[169265] = {
					"Creepy Crawler", -- [1]
					"Plaguefall", -- [2]
				},
				[21350] = {
					"Gronn-Priest", -- [1]
					"Gruul's Lair", -- [2]
				},
				[166452] = {
					"Darkturned Crusher", -- [1]
					"Bastion Scenario", -- [2]
				},
				[165430] = {
					"Malignant Spawn", -- [1]
					"Plaguefall", -- [2]
				},
				[167731] = {
					"Separation Assistant", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[162744] = {
					"Nekthara the Mangler", -- [1]
					"Theater of Pain", -- [2]
				},
				[176953] = {
					"Mawsworn Flamehand", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[95886] = {
					"Ash'Golm", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[116410] = {
					"Karam Magespear", -- [1]
					"Dread Scar Rift - Warlock Scenario Platform", -- [2]
				},
				[176555] = {
					"Achillite", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[104262] = {
					"Burning Ember", -- [1]
					"The Nighthold", -- [2]
				},
				[168627] = {
					"Plaguebinder", -- [1]
					"Plaguefall", -- [2]
				},
				[11659] = {
					"Molten Destroyer", -- [1]
					"Molten Core", -- [2]
				},
				[112638] = {
					"Astral Defender", -- [1]
					"The Nighthold", -- [2]
				},
				[108361] = {
					"Crystalline Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[180392] = {
					"Gorgoan Souldrinker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[94621] = {
					"Invisible Stalker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[176556] = {
					"Alcruux", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[95887] = {
					"Glazer", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[97677] = {
					"Barbed Spiderling", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[176940] = {
					"Soulember", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[101002] = {
					"Krosus", -- [1]
					"The Nighthold", -- [2]
				},
				[164920] = {
					"Drust Soulcleaver", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[112255] = {
					"Sludgerax", -- [1]
					"The Nighthold", -- [2]
				},
				[173360] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[96015] = {
					"Inquisitor Tormentorum", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[178731] = {
					"Bonesteel", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[165560] = {
					"Gormling Larva", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[152656] = {
					"Deadsoul Stalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[152517] = {
					"Deadsoul Lifetaker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164921] = {
					"Drust Harvester", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[178732] = {
					"Mawsworn Runesmith", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168246] = {
					"Reanimated Crossbowman", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[97678] = {
					"Aranasi Broodmother", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[175663] = {
					"Hylbrande", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[167607] = {
					"Stoneborn Slasher", -- [1]
					"Halls of Atonement", -- [2]
				},
				[176577] = {
					"Mawsworn Cremator", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168886] = {
					"Virulax Blightweaver", -- [1]
					"Plaguefall", -- [2]
				},
				[104270] = {
					"Guardian Construct", -- [1]
					"Court of Stars", -- [2]
				},
				[95888] = {
					"Cordana Felsong", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[12018] = {
					"Majordomo Executus", -- [1]
					"Molten Core", -- [2]
				},
				[178733] = {
					"Mawsworn Vanguard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[180779] = {
					"Terrorspine", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[157003] = {
					"Imperial Duelist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[171188] = {
					"Plaguebound Devoted", -- [1]
					"Plaguefall", -- [2]
				},
				[157634] = {
					"Flameforge Enforcer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165946] = {
					"Mordretha, the Endless Empress", -- [1]
					"Theater of Pain", -- [2]
				},
				[12098] = {
					"Sulfuron Harbinger", -- [1]
					"Molten Core", -- [2]
				},
				[163524] = {
					"Kyrian Dark-Praetor", -- [1]
					"Spires of Ascension", -- [2]
				},
				[169912] = {
					"Enraged Mask", -- [1]
					"De Other Side", -- [2]
				},
				[180780] = {
					"Dreadmaw", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[178862] = {
					"Screamspike", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[97171] = {
					"Hatecoil Arcanist", -- [1]
					"Eye of Azshara", -- [2]
				},
				[180141] = {
					"Vil'thras the Dreadbound", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[111170] = {
					"Astral Farseer", -- [1]
					"The Nighthold", -- [2]
				},
				[91797] = {
					"King Deepbeard", -- [1]
					"Eye of Azshara", -- [2]
				},
				[176562] = {
					"Brawling Patron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[180782] = {
					"Consumed Soul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[180781] = {
					"Frothing Hound", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[167610] = {
					"Stonefiend Anklebiter", -- [1]
					"Halls of Atonement", -- [2]
				},
				[111554] = {
					"Felblaze Trickster", -- [1]
					"The Nighthold", -- [2]
				},
				[172981] = {
					"Kyrian Stitchwerk", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[167994] = {
					"Ossified Conscript", -- [1]
					"Theater of Pain", -- [2]
				},
				[102094] = {
					"Risen Swordsman", -- [1]
					"Black Rook Hold", -- [2]
				},
				[152905] = {
					"Tower Sentinel", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[113920] = {
					"Flail of Il'gynoth", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[164414] = {
					"Reanimated Mage", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[167611] = {
					"Stoneborn Eviscerator", -- [1]
					"Halls of Atonement", -- [2]
				},
				[180015] = {
					"Burly Deckhand", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[176703] = {
					"Frostbound Devoted", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[164926] = {
					"Drust Boughbreaker", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[176563] = {
					"Zo'gron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[166589] = {
					"Animated Weapon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[171448] = {
					"Dreadful Huntmaster", -- [1]
					"Sanguine Depths", -- [2]
				},
				[167615] = {
					"Depraved Darkblade", -- [1]
					"Halls of Atonement", -- [2]
				},
				[163520] = {
					"Forsworn Squad-Leader", -- [1]
					"Spires of Ascension", -- [2]
				},
				[99728] = {
					"Grimguard", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[168891] = {
					"Rigged Plagueborer", -- [1]
					"Plaguefall", -- [2]
				},
				[99664] = {
					"Restless Soul", -- [1]
					"Black Rook Hold", -- [2]
				},
				[173800] = {
					"Sewer Rat", -- [1]
					"Castle Nathria", -- [2]
				},
				[156226] = {
					"Coldheart Binder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[170419] = {
					"Lost Dredger", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167998] = {
					"Portal Guardian", -- [1]
					"Theater of Pain", -- [2]
				},
				[108934] = {
					"Tainted Blood", -- [1]
					"The Nighthold", -- [2]
				},
				[97172] = {
					"Saltsea Droplet", -- [1]
					"Eye of Azshara", -- [2]
				},
				[168988] = {
					"Overgrowth", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[97170] = {
					"Hatecoil Wavebinder", -- [1]
					"Eye of Azshara", -- [2]
				},
				[166079] = {
					"Brittlebone Crossbowman", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[108359] = {
					"Volatile Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[176565] = {
					"Disruptive Patron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[177716] = {
					"So' Cartel Assassin", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[179890] = {
					"Executioner Varruth", -- [1]
					"Sanguine Depths", -- [2]
				},
				[176949] = {
					"Mawsworn Embermage", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[165824] = {
					"Nar'zudah", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[164929] = {
					"Tirnenn Villager", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[152875] = {
					"Massive Crusher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[98954] = {
					"Felsworn Myrmidon", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[162060] = {
					"Oryphrion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[180786] = {
					"Binding of Misery", -- [1]
					"Sanguine Depths", -- [2]
				},
				[179891] = {
					"Soggodon the Breaker", -- [1]
					"Sanguine Depths", -- [2]
				},
				[167612] = {
					"Stoneborn Reaver", -- [1]
					"Halls of Atonement", -- [2]
				},
				[179124] = {
					"Shade of Destiny", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[173114] = {
					"Invasive Decayfly", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[174773] = {
					"Spiteful Shade", -- [1]
					"Sanguine Depths", -- [2]
				},
				[157002] = {
					"Imperial Enforcer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[96657] = {
					"Blade Dancer Illianna", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[108360] = {
					"Acidmaw Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[179892] = {
					"Oros Coldheart", -- [1]
					"Sanguine Depths", -- [2]
				},
				[135002] = {
					"Demonic Tyrant", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[178734] = {
					"Mawsworn Husk", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[171184] = {
					"Mythresh, Sky's Talons", -- [1]
					"De Other Side", -- [2]
				},
				[100364] = {
					"Spirit of Vengeance", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[115905] = {
					"Fel Soul", -- [1]
					"The Nighthold", -- [2]
				},
				[180389] = {
					"Mawsworn Rageguard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[91796] = {
					"Skrog Wavecrasher", -- [1]
					"Eye of Azshara", -- [2]
				},
				[98706] = {
					"Commander Shemdah'sohn", -- [1]
					"Black Rook Hold", -- [2]
				},
				[101839] = {
					"Risen Companion", -- [1]
					"Black Rook Hold", -- [2]
				},
				[164804] = {
					"Droman Oulfarran", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[168001] = {
					"Empowered Flameforge Enforcer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165060] = {
					"Animimic", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[102095] = {
					"Risen Lancer", -- [1]
					"Black Rook Hold", -- [2]
				},
				[175546] = {
					"Timecap'n Hooktail", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[156237] = {
					"Imperator Dara", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[179894] = {
					"Deathseeker Eye", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[11667] = {
					"Flameguard", -- [1]
					"Molten Core", -- [2]
				},
				[153552] = {
					"Weeping Wraith", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168002] = {
					"Empowered Mawsworn Shackler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[157118] = {
					"Royal Advisor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[165189] = {
					"Kurama", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[171455] = {
					"Stonewall Gargon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[103758] = {
					"Star Augur Etraeus", -- [1]
					"The Nighthold", -- [2]
				},
				[164550] = {
					"Slithering Ooze", -- [1]
					"Plaguefall", -- [2]
				},
				[168882] = {
					"Fleeting Manifestation", -- [1]
					"Sanguine Depths", -- [2]
				},
				[162103] = {
					"Executor Tarvold", -- [1]
					"Sanguine Depths", -- [2]
				},
				[168003] = {
					"Empowered Coldheart Ascendant", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[98963] = {
					"Blazing Imp", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[111303] = {
					"Nightborne Sage", -- [1]
					"The Nighthold", -- [2]
				},
				[177594] = {
					"Mawsworn Agonizer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[155216] = {
					"Faeleaf Warden", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[97173] = {
					"Restless Tides", -- [1]
					"Eye of Azshara", -- [2]
				},
				[121459] = {
					"Bile Spitter Egg", -- [1]
					"Artifact - Highmountain - Dual Boss", -- [2]
				},
				[167876] = {
					"Inquisitor Sigar", -- [1]
					"Halls of Atonement", -- [2]
				},
				[179257] = {
					"Burning Shade", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[167109] = {
					"Skeletal Vanguard", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[178851] = {
					"Burning Stygia", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[176572] = {
					"Mawsworn Accursed", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167493] = {
					"Venomous Sniper", -- [1]
					"Plaguefall", -- [2]
				},
				[164552] = {
					"Rotmarrow Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[176956] = {
					"Shadowsteel Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[102788] = {
					"Felspite Dominator", -- [1]
					"Black Rook Hold", -- [2]
				},
				[98900] = {
					"Wyrmtongue Trickster", -- [1]
					"Black Rook Hold", -- [2]
				},
				[179386] = {
					"Corsair Officer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[168107] = {
					"Empowered Mawsworn Interceptor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[176573] = {
					"Mawsworn Woebringer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[156241] = {
					"Monstrous Guardian", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[175806] = {
					"So'azmi", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[176957] = {
					"Shadowsteel Colossus", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[178624] = {
					"Mawsworn Sentry", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[152661] = {
					"Mawsworn Ward", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[167111] = {
					"Spinemaw Staghorn", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[168105] = {
					"Empowered Mawsworn Flametender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[176574] = {
					"Mawsworn Soulkeeper", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[156242] = {
					"Animated Prowler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[171557] = {
					"Shade of Bargast", -- [1]
					"Castle Nathria", -- [2]
				},
				[151127] = {
					"Lord of Torment", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[155828] = {
					"Runecarved Colossus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[168007] = {
					"Empowered Mawsworn Soulbinder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[179388] = {
					"Hourglass Tidesage", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[111225] = {
					"Chaos Mage Beleron", -- [1]
					"The Nighthold", -- [2]
				},
				[176575] = {
					"Mawsworn Soulwarden", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164427] = {
					"Reanimated Warrior", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[164555] = {
					"Millificent Manastorm", -- [1]
					"De Other Side", -- [2]
				},
				[176959] = {
					"Mawsworn Soulmage", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[179133] = {
					"Mawsworn Seeker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[175559] = {
					"Kel'Thuzad", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[169159] = {
					"Unstable Canister", -- [1]
					"Plaguefall", -- [2]
				},
				[171333] = {
					"Atal'ai Devoted", -- [1]
					"De Other Side", -- [2]
				},
				[176576] = {
					"Mawsworn Pyremancer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[12099] = {
					"Firesworn", -- [1]
					"Molten Core", -- [2]
				},
				[164556] = {
					"Millhouse Manastorm", -- [1]
					"De Other Side", -- [2]
				},
				[155824] = {
					"Lumbering Creation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[169927] = {
					"Putrid Butcher", -- [1]
					"Theater of Pain", -- [2]
				},
				[162039] = {
					"Wicked Oppressor", -- [1]
					"Sanguine Depths", -- [2]
				},
				[179560] = {
					"Fragment of Troz'igal", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[91786] = {
					"Gritslime Snail", -- [1]
					"Eye of Azshara", -- [2]
				},
				[178623] = {
					"Mawsworn Guard", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[176705] = {
					"Venza Goldfuse", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[164557] = {
					"Shard of Halkias", -- [1]
					"Halls of Atonement", -- [2]
				},
				[178072] = {
					"Anduin Wrynn", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[179135] = {
					"Sath'zuul", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164517] = {
					"Tred'ova", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[167115] = {
					"Necromancer Warcaster", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[165197] = {
					"Skeletal Monstrosity", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[176578] = {
					"Vault Sentinel", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[99649] = {
					"Dreadlord Mendacius", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[164558] = {
					"Hakkar the Soulflayer", -- [1]
					"De Other Side", -- [2]
				},
				[178964] = {
					"Empowered Mawsworn Woebringer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[180159] = {
					"Brawling Patron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[12259] = {
					"Gehennas", -- [1]
					"Molten Core", -- [2]
				},
				[167116] = {
					"Spinemaw Reaver", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[98177] = {
					"Glayvianna Soulrender", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[178625] = {
					"Mawsworn Archer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[104274] = {
					"Baalgar the Watchful", -- [1]
					"Court of Stars", -- [2]
				},
				[119469] = {
					"Fel Bat Pup", -- [1]
					"Black Rook Hold - Artifact Challenge", -- [2]
				},
				[111563] = {
					"Duskwatch Guard", -- [1]
					"Court of Stars", -- [2]
				},
				[164815] = {
					"Zolramus Siphoner", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[116806] = {
					"Razor Ice", -- [1]
					"The Eye of Eternity - Scenario", -- [2]
				},
				[167117] = {
					"Spinemaw Larva", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[166429] = {
					"Fallen Legionnaire", -- [1]
					"Bastion Scenario", -- [2]
				},
				[178626] = {
					"Mawrat", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[164255] = {
					"Globgrog", -- [1]
					"Plaguefall", -- [2]
				},
				[171799] = {
					"Depths Warden", -- [1]
					"Sanguine Depths", -- [2]
				},
				[179010] = {
					"Fatespawn Anomaly", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[166174] = {
					"Forsworn Oracle", -- [1]
					"Bastion Scenario", -- [2]
				},
				[116295] = {
					"Archmage Xylem", -- [1]
					"The Eye of Eternity - Scenario", -- [2]
				},
				[180417] = {
					"Loom Artificer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[167246] = {
					"Unleashed Trauma", -- [1]
					"Bastion Scenario", -- [2]
				},
				[176581] = {
					"Spiked Ball", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[104275] = {
					"Imacu'tya", -- [1]
					"Court of Stars", -- [2]
				},
				[164363] = {
					"Undying Stonefiend", -- [1]
					"Halls of Atonement", -- [2]
				},
				[169859] = {
					"Observer Zelgar", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[11669] = {
					"Flame Imp", -- [1]
					"Molten Core", -- [2]
				},
				[153882] = {
					"Deadsoul Spirit", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164218] = {
					"Lord Chamberlain", -- [1]
					"Halls of Atonement", -- [2]
				},
				[157017] = {
					"Lithic Watcher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[178628] = {
					"Mawsworn Darkcaster", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[170572] = {
					"Atal'ai Hoodoo Hexxer", -- [1]
					"De Other Side", -- [2]
				},
				[164562] = {
					"Depraved Houndmaster", -- [1]
					"Halls of Atonement", -- [2]
				},
				[155483] = {
					"Faeleaf Shimmerwing", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[177094] = {
					"Signe", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[174093] = {
					"Nathrian Ranger", -- [1]
					"Castle Nathria", -- [2]
				},
				[91808] = {
					"Serpentrix", -- [1]
					"Eye of Azshara", -- [2]
				},
				[166225] = {
					"Beckoned Doubt", -- [1]
					"Bastion Scenario", -- [2]
				},
				[96028] = {
					"Wrath of Azshara", -- [1]
					"Eye of Azshara", -- [2]
				},
				[105299] = {
					"Recursive Elemental", -- [1]
					"The Nighthold", -- [2]
				},
				[100248] = {
					"Ritualist Lesha", -- [1]
					"Eye of Azshara", -- [2]
				},
				[102263] = {
					"Skorpyron", -- [1]
					"The Nighthold", -- [2]
				},
				[177095] = {
					"Kyra", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[179269] = {
					"Oasis Security", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[157340] = {
					"Skeletal Remains", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[171341] = {
					"Bladebeak Hatchling", -- [1]
					"De Other Side", -- [2]
				},
				[178630] = {
					"Mawsworn Seeker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168591] = {
					"Ravenous Dreadbat", -- [1]
					"Sanguine Depths", -- [2]
				},
				[165138] = {
					"Blight Bag", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[165010] = {
					"Congealed Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[176520] = {
					"Ocular Commander", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[168718] = {
					"Forsworn Warden", -- [1]
					"Spires of Ascension", -- [2]
				},
				[98970] = {
					"Latosius", -- [1]
					"Black Rook Hold", -- [2]
				},
				[179526] = {
					"Troz'igal the Oppressor", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[178631] = {
					"Mawsworn Commander", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[104277] = {
					"Legion Hound", -- [1]
					"Court of Stars", -- [2]
				},
				[100249] = {
					"Channeler Varisz", -- [1]
					"Eye of Azshara", -- [2]
				},
				[11668] = {
					"Firelord", -- [1]
					"Molten Core", -- [2]
				},
				[175732] = {
					"Sylvanas Windrunner", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[113128] = {
					"Withered Skulker", -- [1]
					"The Nighthold", -- [2]
				},
				[179399] = {
					"Drunk Pirate", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[171343] = {
					"Bladebeak Matriarch", -- [1]
					"De Other Side", -- [2]
				},
				[170882] = {
					"Bone Magus", -- [1]
					"Theater of Pain", -- [2]
				},
				[112973] = {
					"Duskwatch Weaver", -- [1]
					"The Nighthold", -- [2]
				},
				[157584] = {
					"Flameforge Master", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[164450] = {
					"Dealer Xy'exa", -- [1]
					"De Other Side", -- [2]
				},
				[164862] = {
					"Weald Shimmermoth", -- [1]
					"De Other Side", -- [2]
				},
				[166264] = {
					"Spare Parts", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[19389] = {
					"Lair Brute", -- [1]
					"Gruul's Lair", -- [2]
				},
				[111004] = {
					"Gelatinized Decay", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[153878] = {
					"Mawsworn Archer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[105301] = {
					"Expedient Elemental", -- [1]
					"The Nighthold", -- [2]
				},
				[100250] = {
					"Binder Ashioi", -- [1]
					"Eye of Azshara", -- [2]
				},
				[180348] = {
					"Cartel Muscle", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[167892] = {
					"Tormented Soul", -- [1]
					"Halls of Atonement", -- [2]
				},
				[112718] = {
					"Sidereal Familiar", -- [1]
					"The Nighthold", -- [2]
				},
				[179942] = {
					"Deathseeker Eye", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[112804] = {
					"Trained Shadescale", -- [1]
					"The Nighthold", -- [2]
				},
				[163457] = {
					"Forsworn Vanguard", -- [1]
					"Spires of Ascension", -- [2]
				},
				[180473] = {
					"Unstoppable Abomination", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[118032] = {
					"Tormenting Eye", -- [1]
					"Artifact - Acquisition - Tank", -- [2]
				},
				[104918] = {
					"Vigilant Duskwatch", -- [1]
					"Court of Stars", -- [2]
				},
				[153874] = {
					"Mawsworn Sentry", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[173136] = {
					"Blightsmasher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[112671] = {
					"Duskwatch Battle-Magus", -- [1]
					"The Nighthold", -- [2]
				},
				[164185] = {
					"Echelon", -- [1]
					"Halls of Atonement", -- [2]
				},
				[171474] = {
					"Finger Food", -- [1]
					"Plaguefall", -- [2]
				},
				[120651] = {
					"Explosives", -- [1]
					"Sanguine Depths", -- [2]
				},
				[98035] = {
					"Dreadstalker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[176973] = {
					"Unstoppable Abomination", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[112655] = {
					"Celestial Acolyte", -- [1]
					"The Nighthold", -- [2]
				},
				[168022] = {
					"Slime Tentacle", -- [1]
					"Plaguefall", -- [2]
				},
				[180426] = {
					"Feeding Horror", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[98542] = {
					"Amalgam of Souls", -- [1]
					"Black Rook Hold", -- [2]
				},
				[113043] = {
					"Abyss Watcher", -- [1]
					"The Nighthold", -- [2]
				},
				[173051] = {
					"Suppressor Xelors", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[98275] = {
					"Risen Archer", -- [1]
					"Black Rook Hold", -- [2]
				},
				[11988] = {
					"Golemagg the Incinerator", -- [1]
					"Molten Core", -- [2]
				},
				[109075] = {
					"Parasitic Lasher", -- [1]
					"The Nighthold", -- [2]
				},
				[162691] = {
					"Blightbone", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[180427] = {
					"Loom Guardian", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[171500] = {
					"Shuffling Corpse", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[97264] = {
					"Hatecoil Shellbreaker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[170234] = {
					"Oppressive Banner", -- [1]
					"Theater of Pain", -- [2]
				},
				[165594] = {
					"Coldheart Ambusher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[180335] = {
					"Cartel Smuggler", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[118488] = {
					"Lord Erdris Thorn", -- [1]
					"Black Rook Hold - Artifact Challenge", -- [2]
				},
				[106787] = {
					"Bitterbrine Slave", -- [1]
					"Eye of Azshara", -- [2]
				},
				[12076] = {
					"Lava Elemental", -- [1]
					"Molten Core", -- [2]
				},
				[96480] = {
					"Viletongue Belcher", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[163058] = {
					"Mistveil Defender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[12100] = {
					"Lava Reaver", -- [1]
					"Molten Core", -- [2]
				},
				[174802] = {
					"Venomous Sniper", -- [1]
					"Plaguefall", -- [2]
				},
				[170838] = {
					"Unyielding Contender", -- [1]
					"Theater of Pain", -- [2]
				},
				[111071] = {
					"Pulsauron", -- [1]
					"The Nighthold", -- [2]
				},
				[178141] = {
					"Murkbrine Scalebinder", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[180429] = {
					"Adorned Starseer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[184911] = {
					"Urh Dismantler", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[104217] = {
					"Talixae Flamewreath", -- [1]
					"Court of Stars", -- [2]
				},
				[166491] = {
					"Forsworn Swiftblade", -- [1]
					"Bastion Scenario", -- [2]
				},
				[185685] = {
					"Urh Relic", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[135816] = {
					"Vilefiend", -- [1]
					"Sanctum of Domination", -- [2]
				},
			},
			["aura_frame1_anchor"] = {
				["y"] = 18.05999755859375,
				["x"] = -61.08999633789063,
			},
			["aura_grow_direction"] = 3,
			["focus_color"] = {
				0.2313725490196079, -- [1]
				0.6941176470588235, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["indicator_rare"] = false,
			["extra_icon_stack_font"] = "Expressway",
			["aura_height"] = 25,
			["aura_padding"] = 1.199999928474426,
			["indicator_worldboss"] = false,
			["aura2_x_offset"] = 0,
			["target_indicator"] = "NONE",
			["hook_data"] = {
				{
					["Enabled"] = false,
					["Revision"] = 348,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Icon Settings",
							["Value"] = "Icon Settings:",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Show Icon",
							["Value"] = true,
							["Key"] = "showIcon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Icon on Left Side",
							["Value"] = true,
							["Key"] = "iconOnLeftSide",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useFullSize",
							["Value"] = false,
							["Name"] = "Use Big Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0,
							["Key"] = "iconSizeOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Icon Size Offset",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Name"] = "Icon Padding",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "iconPadding",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Name"] = "Interrupt Texture",
							["Value"] = "Can't Interrupt Texture:",
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Show Texture",
							["Value"] = true,
							["Key"] = "showTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Name"] = "Texture Path",
							["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
							["Key"] = "iconTexturePath",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Texture Desaturated",
							["Value"] = true,
							["Key"] = "desaturatedTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.3056715726852417, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 10,
							["Key"] = "textureWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Width",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 16,
							["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
							["Min"] = -16,
							["Name"] = "Texture Height Mod",
							["Value"] = 0,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureHeightMod",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Fraction"] = false,
							["Value"] = 0,
							["Key"] = "texturePosition",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Position",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Key"] = "textureAlpha",
							["Value"] = 1,
							["Name"] = "Texture Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [16]
					},
					["HooksTemp"] = {
					},
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Name"] = "Cast Bar Icon Settings [P]",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["version"] = -1,
					["Time"] = 1597097268,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
					["LastHookEdited"] = "",
				}, -- [1]
				{
					["Enabled"] = false,
					["Revision"] = 50,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Time"] = 1547392935,
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Name"] = "Color Automation [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["version"] = -1,
				}, -- [2]
				{
					["Enabled"] = false,
					["Revision"] = 84,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Ahwa-Azralon",
					["Time"] = 1547406548,
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Name"] = "Execute Range [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 135358,
					["version"] = -1,
				}, -- [3]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
					},
					["Time"] = 1620377377,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["Enabled"] = false,
					["Revision"] = 363,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Name"] = "Attacking Specific Unit [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
					},
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "color",
							["Value"] = {
								0.5019607843137255, -- [1]
								0.5019607843137255, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "changeBarColor",
							["Value"] = true,
							["Name"] = "Change Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "changeBorderColor",
							["Value"] = false,
							["Name"] = "Change Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "resetColors",
							["Value"] = true,
							["Name"] = "Reset Colors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
					},
				}, -- [4]
				{
					["Enabled"] = false,
					["Revision"] = 73,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Time"] = 1541606242,
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Name"] = "Hide Neutral Units [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 1990989,
					["version"] = -1,
				}, -- [5]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Time"] = 1621935143,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
							["103"] = true,
							["Enabled"] = true,
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 135426,
					["Enabled"] = false,
					["Revision"] = 284,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Name"] = "Combo Points [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["HooksTemp"] = {
					},
					["Options"] = {
					},
				}, -- [6]
				{
					["Enabled"] = false,
					["Revision"] = 176,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Tecno-Azralon",
					["Time"] = 1547409079,
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["Name"] = "Extra Border [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 133689,
					["version"] = -1,
				}, -- [7]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Name"] = "Reorder Nameplate [Plater]",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["version"] = -1,
					["Time"] = 1596791840,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = 574574,
					["LastHookEdited"] = "",
				}, -- [8]
				{
					["Enabled"] = false,
					["Revision"] = 59,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Time"] = 1554138845,
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Name"] = "Don't Have Aura [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 136207,
					["version"] = -1,
				}, -- [9]
				{
					["Enabled"] = false,
					["Revision"] = 182,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Time"] = 1548278227,
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Name"] = "Players Targeting a Target [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 1966587,
					["version"] = -1,
				}, -- [10]
				{
					["Enabled"] = false,
					["Revision"] = 356,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Name"] = "Aura Reorder [Plater]",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["version"] = -1,
					["Time"] = 1608663128,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["LastHookEdited"] = "",
				}, -- [11]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Time"] = 1552354619,
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["Name"] = "Current Target Color [Plater]",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 878211,
					["version"] = -1,
				}, -- [12]
				{
					["Enabled"] = true,
					["Revision"] = 117,
					["semver"] = "1.0.1",
					["HooksTemp"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = 1.6\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --create the border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n    end    \n    \n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1614032495,
					["Author"] = "Izimode-Azralon",
					["version"] = 2,
					["Desc"] = "Adds a pixels perfect border around the cast bar.",
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = 1.6\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --create the border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n    end    \n    \n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \nend\n\n\n\n\n",
					},
					["Prio"] = 99,
					["Name"] = "Cast Bar Border",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "https://wago.io/c0XUQAYJq/2",
					["Icon"] = 133004,
					["LastHookEdited"] = "Constructor",
				}, -- [13]
			},
			["auras_per_row_auto"] = false,
			["aura_width2"] = 25,
			["aura_width"] = 25,
			["aura_height2"] = 25,
			["bossmod_support_enabled"] = false,
			["saved_cvars"] = {
				["ShowClassColorInNameplate"] = "1",
				["ShowNamePlateLoseAggroFlash"] = "1",
				["nameplateShowEnemyMinus"] = "1",
				["NamePlateClassificationScale"] = "1",
				["nameplateShowFriendlyTotems"] = "0",
				["nameplatePersonalHideDelaySeconds"] = "0.2",
				["nameplateShowFriendlyPets"] = "0",
				["nameplateTargetRadialPosition"] = "1",
				["nameplateMinAlpha"] = "0.90135484",
				["nameplateResourceOnTarget"] = "0",
				["clampTargetNameplateToScreen"] = "1",
				["nameplateShowAll"] = "1",
				["nameplateMaxDistance"] = "100",
				["nameplateShowFriendlyMinions"] = "0",
				["nameplateSelfScale"] = "1",
				["nameplateTargetBehindMaxDistance"] = "30",
				["nameplateShowEnemies"] = "1",
				["NamePlateVerticalScale"] = "1",
				["nameplateSelectedAlpha"] = "1",
				["nameplateShowSelf"] = "0",
				["nameplateMotionSpeed"] = "0.05",
				["nameplateShowEnemyMinions"] = "1",
				["nameplateShowFriendlyNPCs"] = "0",
				["nameplateSelectedScale"] = "1.15",
				["nameplateShowFriends"] = "0",
				["nameplateMotion"] = "0",
				["nameplateMinScale"] = "1",
				["nameplateOtherTopInset"] = "0.085",
				["nameplateShowFriendlyGuardians"] = "0",
				["nameplateSelfAlpha"] = "1",
				["nameplateMinAlphaDistance"] = "-158489.31924611",
				["nameplateLargeTopInset"] = "0.085",
				["NamePlateHorizontalScale"] = "1",
				["nameplateOccludedAlphaMult"] = "1",
			},
			["login_counter"] = 1248,
			["extra_icon_caster_name"] = false,
			["cast_statusbar_bgtexture"] = "Details Flat",
			["extra_icon_show_offensive"] = true,
			["border_color"] = {
				0.0392156862745098, -- [1]
				0.0392156862745098, -- [2]
				0.0392156862745098, -- [3]
				1, -- [4]
			},
			["extra_icon_auras_mine"] = {
				["Hex"] = false,
			},
			["hook_data_trash"] = {
				{
					["Enabled"] = true,
					["Revision"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["Author"] = "Rentaki-Kazzak",
					["OptionsValues"] = {
					},
					["Desc"] = "",
					["Hooks"] = {
					},
					["__TrashAt"] = 1614032289,
					["Time"] = 1614032280,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["LastHookEdited"] = "",
					["Icon"] = "",
					["Name"] = "New Mod",
				}, -- [1]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.ListOfNpcs = {\n        [61146] = \"olive\", --monk statue npcID\n        [103822] = \"olive\", --druid treant npcID\n        \n    }\n    \n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        --check if the npcID of this unit is in the npc list \n        if (envTable.ListOfNpcs [npcID]) then\n            Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [npcID])\n            \n        else\n            --check if the name of ths unit is in the list\n            local unitName = UnitName (unitId .. \"target\")\n            if (envTable.ListOfNpcs [unitName]) then\n                Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])\n                \n            else\n                --check if the name of the unit in lower case is in the npc list\n                unitName = string.lower (unitName)\n                if (envTable.ListOfNpcs [unitName]) then\n                    Plater.SetNameplateColor (unitFrame, envTable.ListOfNpcs [unitName])                \n                    \n                end\n            end\n        end\n        \n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["__TrashAt"] = 1622835758,
					["Time"] = 1547993111,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["Enabled"] = false,
					["Revision"] = 222,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Name"] = "Attacking Specific Unit [Plater]",
					["HooksTemp"] = {
					},
				}, -- [2]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["__TrashAt"] = 1622835758,
					["Time"] = 1603567332,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
							["103"] = true,
							["Enabled"] = true,
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 135426,
					["Enabled"] = false,
					["Revision"] = 254,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Name"] = "Combo Points [Plater]",
					["HooksTemp"] = {
					},
					["Options"] = {
					},
				}, -- [3]
			},
			["class_colors"] = {
				["DEATHKNIGHT"] = {
					["colorStr"] = "ffc31d3a",
				},
				["WARRIOR"] = {
					["colorStr"] = "ffc69a6d",
				},
				["PALADIN"] = {
					["colorStr"] = "fff48bb9",
				},
				["WARLOCK"] = {
					["colorStr"] = "ff8687ed",
				},
				["DEMONHUNTER"] = {
					["colorStr"] = "ffa22fc8",
				},
				["SHAMAN"] = {
					["colorStr"] = "ff006fdd",
				},
				["DRUID"] = {
					["colorStr"] = "ffff7c09",
				},
				["EVOKER"] = {
					["colorStr"] = "ff33937e",
				},
				["ROGUE"] = {
					["colorStr"] = "fffff467",
				},
			},
			["patch_version"] = 34,
			["target_highlight_color"] = {
				0.7647058823529411, -- [1]
				0.02352941176470588, -- [2]
				0, -- [3]
			},
			["range_check_in_range_or_target_alpha"] = 1,
			["ghost_auras"] = {
				["auras"] = {
					["WARLOCK"] = {
						{
							[172] = true,
							[980] = true,
						}, -- [1]
					},
					["PRIEST"] = {
						[3] = {
							[589] = true,
							[34914] = true,
						},
					},
				},
			},
			["extra_icon_wide_icon"] = false,
			["extra_icon_use_blizzard_border_color"] = false,
			["number_region_first_run"] = true,
			["cast_statusbar_use_fade_effects"] = false,
			["health_statusbar_bgtexture"] = "Details Flat",
			["range_check_alpha"] = 1,
			["aura_tracker"] = {
				["buff_tracked"] = {
					[227931] = true,
					[233210] = true,
					[209859] = true,
					[163689] = true,
					[297133] = true,
				},
			},
			["aura_breakline_space"] = 10.25,
			["castbar_target_font"] = "Expressway",
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1,
				},
			},
			["bossmod_cooldown_text_enabled"] = false,
			["target_highlight"] = false,
			["indicator_extra_raidmark"] = false,
			["target_shady_combat_only"] = false,
			["target_highlight_height"] = 15,
			["indicator_elite"] = false,
			["extra_icon_show_timer"] = false,
			["health_selection_overlay_alpha"] = 0.199999988079071,
			["aura_alpha"] = 1,
			["cast_statusbar_fadeout_time"] = 0.2000000029802322,
			["script_auto_imported"] = {
				["Relics 9.2 M Dungeons"] = 2,
				["Cast - Effect After Cast [P]"] = 2,
				["Cast - Circular Swipe"] = 4,
				["Aura - Debuff Alert"] = 12,
				["Cast - Castbar is Timer [P]"] = 2,
				["Cast - Ultra Important"] = 14,
				["Add - Health Markers [P]"] = 2,
				["Cast - Small Alert"] = 12,
				["Add - Important [P]"] = 4,
				["Unit - Main Target"] = 11,
				["Aura - Blink Time Left"] = 13,
				["Add - Tag Number [P]"] = 2,
				["Unit - Health Markers"] = 12,
				["Cast - Glowing [P]"] = 10,
				["Cast - Important Target [P]"] = 2,
				["Cast - Very Important"] = 15,
				["Cast - Alert + Timer [P]"] = 4,
				["Aura is Shield [P]"] = 2,
				["Add - Warning [P]"] = 5,
				["Fixate On You"] = 11,
				["Aura While Casting [P]"] = 1,
				["Cast - Big Alert"] = 14,
				["Unit - Important"] = 11,
				["Cast - Quick Flash"] = 2,
				["Aura - Buff Alert"] = 15,
				["Add - Explode on Die [P]"] = 1,
				["Auto Set Skull"] = 11,
				["Explosion Affix M+"] = 14,
				["Add - Non Elite Trash [P]"] = 4,
				["Cast - On Going Cast [P]"] = 2,
				["Cast - Stop Casting"] = 4,
				["Countdown"] = 11,
				["Fixate by Unit Buff [P]"] = 2,
				["Cast - Frontal Cone"] = 15,
				["Fixate"] = 11,
				["Spiteful Affix"] = 3,
				["Cast - Shield Interrupt"] = 2,
				["Cast - Tank Interrupt"] = 12,
				["Unit - Show Energy"] = 11,
			},
			["aura_stack_font"] = "Expressway",
			["health_statusbar_bgcolor"] = {
				0.0392156862745098, -- [1]
				0.0392156862745098, -- [2]
				0.0392156862745098, -- [3]
				1, -- [4]
			},
			["script_data_trash"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1604674264,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 695,
					["semver"] = "",
					["Author"] = "BombadÔøΩo-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n        end\n    end\n    \nend\n\n\n",
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a big animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Name"] = "Shake Amplitude",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["SpellIds"] = {
						321247, -- [1]
						334522, -- [2]
						320232, -- [3]
						319962, -- [4]
						325879, -- [5]
						324427, -- [6]
						322999, -- [7]
						325360, -- [8]
						322903, -- [9]
						324103, -- [10]
						333294, -- [11]
						333540, -- [12]
						319521, -- [13]
						326021, -- [14]
						326450, -- [15]
						322711, -- [16]
						329104, -- [17]
						295000, -- [18]
						242391, -- [19]
						320197, -- [20]
						329608, -- [21]
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["Name"] = "Cast - Very Important [Plater]",
					["NpcNames"] = {
					},
					["__TrashAt"] = 1622835758,
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1604696442,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 970,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.4,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 5,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Name"] = "Shake Amplitude",
							["Value"] = 8,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
					},
					["SpellIds"] = {
						338353, -- [1]
						334748, -- [2]
						334749, -- [3]
						320784, -- [4]
						341352, -- [5]
						341520, -- [6]
						341522, -- [7]
						336005, -- [8]
						339777, -- [9]
						331933, -- [10]
						326617, -- [11]
						324914, -- [12]
						324776, -- [13]
						326046, -- [14]
						340634, -- [15]
						319070, -- [16]
						328295, -- [17]
						317936, -- [18]
						327413, -- [19]
						319654, -- [20]
						323821, -- [21]
						320772, -- [22]
						324293, -- [23]
						330562, -- [24]
						330868, -- [25]
						341902, -- [26]
						342139, -- [27]
						342675, -- [28]
						323190, -- [29]
						332836, -- [30]
						327648, -- [31]
						328217, -- [32]
						322938, -- [33]
						340544, -- [34]
						325876, -- [35]
						325700, -- [36]
						323552, -- [37]
						332666, -- [38]
						332612, -- [39]
						332706, -- [40]
						340026, -- [41]
						294171, -- [42]
						292910, -- [43]
						294165, -- [44]
						338871, -- [45]
						330813, -- [46]
						335694, -- [47]
						327461, -- [48]
						329787, -- [49]
						304946, -- [50]
						15245, -- [51]
						276754, -- [52]
						304831, -- [53]
						277036, -- [54]
						320657, -- [55]
						294362, -- [56]
						270248, -- [57]
						292926, -- [58]
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["Name"] = "Cast - Big Alert [Plater]",
					["NpcNames"] = {
					},
					["__TrashAt"] = 1622835758,
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1604593143,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_tank",
					["Enabled"] = true,
					["Revision"] = 833,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Cast alert for abilities which only the tank can interrupt.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Cast Bar Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "castbarColor",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Name"] = "Flash Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Fraction"] = false,
							["Value"] = 25,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 30,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
					},
					["SpellIds"] = {
						321828, -- [1]
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["Name"] = "Cast - Tank Interrupt [P]",
					["NpcNames"] = {
					},
					["__TrashAt"] = 1622835758,
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1611856720,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Enabled"] = true,
					["Revision"] = 369,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["__TrashAt"] = 1630099229,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 17",
							["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
							["Key"] = "option17",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Blink Enabled",
							["Value"] = true,
							["Key"] = "blinkEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable blink",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = true,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable glows",
						}, -- [5]
						{
							["Type"] = 4,
							["Name"] = "Change NamePlate Color",
							["Value"] = true,
							["Key"] = "changeNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'true' to enable nameplate color change",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the blink effect only",
							["Min"] = 1,
							["Name"] = "Timeleft to Blink",
							["Value"] = 3,
							["Key"] = "timeleftToBlink",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "time to complete a blink loop",
							["Min"] = 0.5,
							["Name"] = "Blink Speed",
							["Value"] = 1,
							["Key"] = "blinkSpeed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
							["Min"] = 0.1,
							["Name"] = "Blink Max Alpha",
							["Value"] = 0.6,
							["Key"] = "blinkMaxAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [9]
						{
							["Type"] = 1,
							["Name"] = "Blink Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "blinkColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color of the blink",
						}, -- [10]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0.2862745098039216, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "nameplate color if ChangeNameplateColor is true",
						}, -- [11]
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 4,
							["Name"] = "Timer Color Enabled",
							["Value"] = true,
							["Key"] = "timerColorEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable changes in the color of the time left text",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Fraction"] = true,
							["Value"] = 8,
							["Key"] = "timeLeftWarning",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Time Left Warning",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Fraction"] = true,
							["Value"] = 3,
							["Key"] = "timeLeftCritical",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Time Left Critical",
						}, -- [15]
						{
							["Type"] = 1,
							["Name"] = "Warning Color",
							["Value"] = {
								1, -- [1]
								0.8705882352941177, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "warningColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left entered in a warning zone",
						}, -- [16]
						{
							["Type"] = 1,
							["Name"] = "Critical Color",
							["Value"] = {
								1, -- [1]
								0.07450980392156863, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "criticalColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left is critical",
						}, -- [17]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1625793282,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1154,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["__TrashAt"] = 1630099229,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["Name"] = "Cast - Alert + Timer [P]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Cast start animation settings",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Cast Bar Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "castbarColor",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [11]
						{
							["Type"] = 7,
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Value"] = {
								{
									"350421", -- [1]
									"5", -- [2]
								}, -- [1]
								{
									"355787", -- [1]
									"15", -- [2]
								}, -- [2]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [3]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [4]
							},
							["Key"] = "timerList",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["version"] = -1,
					["SpellIds"] = {
						350421, -- [1]
						355787, -- [2]
						348513, -- [3]
					},
					["NpcNames"] = {
					},
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, scriptTable.config.segmentsAmount do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    \nend\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\nend",
					["Time"] = 1660511537,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 341,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Show a different animation for the cast bar.",
					["__TrashAt"] = 1668708090,
					["NpcNames"] = {
					},
					["SpellIds"] = {
						373429, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Glowing [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Name"] = "Amount of Segments",
							["Value"] = 7,
							["Key"] = "segmentsAmount",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetFromScale(0.2, 1)\n        texture.scale:SetToScale(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\nend\n\n\n\n\n\n\n\n\n",
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.CheckUnit(unitFrame, envTable)\n        if (envTable._NpcID == 185680) then\n            --haste\n            envTable.SetColor(unitFrame, \"haste\")\n            \n        elseif (envTable._NpcID == 185683) then\n            --movement speed\n            envTable.SetColor(unitFrame, \"ms\")\n            \n        elseif (envTable._NpcID == 185685) then\n            --cooldown reduction\n            envTable.SetColor(unitFrame, \"cdr\")\n            \n        end\n    end\n    \n    function envTable.SetColor(unitFrame, bonusType)\n        \n        local r, g, b, a, name\n        \n        if (bonusType == \"haste\") then\n            name = scriptTable.config.hasteName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.hasteColor)\n            \n        elseif (bonusType == \"ms\") then\n            name = scriptTable.config.msName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.msColor)\n            \n        elseif (bonusType == \"cdr\") then\n            name = scriptTable.config.cdrName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.cdrColor)\n        end\n        \n        Plater.SetNameplateColor(unitFrame, r, g, b, a)\n        if (scriptTable.config.canChangeSize) then\n            Plater.SetNameplateSize(unitFrame, scriptTable.config.width, scriptTable.config.height)\n        end\n        \n        --border\n        if (scriptTable.config.showBorder) then\n            r, g, b, a = r+0.2, g+0.2, b+0.2\n            Plater.SetBorderColor(unitFrame, r, g, b)\n        end\n        \n        --name\n        unitFrame.healthBar.unitName:SetText(name)\n    end\nend\n\n\n--185685 cooldown reduction\n--185680 haste\n--185683 movement speed\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckUnit(unitFrame, envTable)\nend\n\n\n",
					["Time"] = 1647994498,
					["url"] = "",
					["Icon"] = 4263293,
					["Enabled"] = true,
					["Revision"] = 70,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Make more easy to distinguish relics within dungeons in 9.2 patch",
					["__TrashAt"] = 1672612734,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckUnit(unitFrame, envTable)\n    \nend",
					["Name"] = "Relics 9.2 M Dungeons",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "ColorSettingsAnchor",
							["Value"] = "Color Settings",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Adjust the nameplate color for each mob",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Haste Color",
							["Value"] = {
								0.4549019607843137, -- [1]
								0.2156862745098039, -- [2]
								0.5490196078431373, -- [3]
								1, -- [4]
							},
							["Key"] = "hasteColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "haste color",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "msColor",
							["Value"] = {
								0.3098039215686275, -- [1]
								0.5215686274509804, -- [2]
								0.2588235294117647, -- [3]
								1, -- [4]
							},
							["Name"] = "Moviment Speep Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "moviment speep color",
						}, -- [3]
						{
							["Type"] = 1,
							["Name"] = "Cooldown Reduction Color",
							["Value"] = {
								0.1725490196078431, -- [1]
								0.2823529411764706, -- [2]
								0.5215686274509804, -- [3]
								1, -- [4]
							},
							["Key"] = "cdrColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "cooldown reduction color",
						}, -- [4]
						{
							["Type"] = 6,
							["Name"] = "Option 5",
							["Value"] = 0,
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 5,
							["Name"] = "SizeSettingsAnchor",
							["Value"] = "Size Settings",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "canChangeSize",
							["Value"] = false,
							["Name"] = "Change Nameplate Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If this is checked, the nameplate size is changed to the values below",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "total width of the nameplate",
							["Min"] = 50,
							["Key"] = "width",
							["Value"] = 100,
							["Name"] = "Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 40,
							["Desc"] = "total height of the nameplate",
							["Min"] = 2,
							["Fraction"] = false,
							["Value"] = 12,
							["Key"] = "height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Height",
						}, -- [9]
						{
							["Type"] = 6,
							["Name"] = "Option 9",
							["Value"] = 0,
							["Key"] = "option9",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Name"] = "BorderSettingsAnchor",
							["Value"] = "Border Settings",
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Name"] = "Paint Border",
							["Value"] = true,
							["Key"] = "showBorder",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, the color of the border will have the same color as the nameplate",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 12",
							["Value"] = 0,
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "NameSettings",
							["Value"] = "Name Settings",
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 3,
							["Name"] = "Haste Name",
							["Value"] = "HASTE",
							["Key"] = "hasteName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 3,
							["Key"] = "cdrName",
							["Value"] = "CDR",
							["Name"] = "Cooldown Reduction Name",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 3,
							["Name"] = "Movement Speed Name",
							["Value"] = "MS",
							["Key"] = "msName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "",
						}, -- [17]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1618996775,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_tank",
					["Enabled"] = true,
					["Revision"] = 843,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Cast alert for abilities which only the tank can interrupt.",
					["__TrashAt"] = 1672612734,
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Tank Interrupt [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.1,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Name"] = "Shake Amplitude",
							["Value"] = 25,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 30,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        [154564] = {80, 30},   --debug\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, -- Sathel the Accursed - theater of pain\n        [165946]= {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller - tina scythe\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonement\n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1606506781,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["Enabled"] = true,
					["Revision"] = 109,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["__TrashAt"] = 1672612734,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Name"] = "Unit - Health Markers [P]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Option 1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "blank line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Vertical Line Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "indicatorColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.79,
							["Key"] = "indicatorAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Vertical Line Alpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "fillColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Fill Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Key"] = "fillAlpha",
							["Value"] = 0.2,
							["Name"] = "Fill Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n--[=[\n\n154564 - debug\n\n168098 - empowered coldheart agent\n156212 - coldheart agent\n\n\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1604607993,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 406,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["__TrashAt"] = 1672612734,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + scriptTable.config.nameplateSizeOffset)\n    \nend\n\n\n\n\n\n\n\n",
					["Name"] = "Unit - Main Target [P]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = true,
							["Key"] = "changeNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Key"] = "nameplateSizeOffset",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Nameplate Size Offset",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.7137254901960784, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotsColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [10]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = scriptTable.config.changeNameplateColor --\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset --\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/skullbones_128]])\n    unitFrame.UnitImportantSkullTexture:SetPoint(\"center\", unitFrame.healthBar, \"center\", 0, -5)\n    \n    unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n    unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n    unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n164362 - smily morsel - plaguefall\n168882 - fleeting manifestation - sanguine depths\n170234 - oppressive banner - theater of pain\n168988 - overgrowth - Mists of Tirna Scithe\n170452 - essesnce orb - torghast\n\n\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1604599472,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 355,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["__TrashAt"] = 1672612734,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\nend\n\n\n\n\n",
					["Name"] = "Unit - Important [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Nameplate Size Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "nameplateSizeOffset",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.7137254901960784, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option10",
							["Value"] = "Skull Texture",
							["Name"] = "Skull Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "skullColor",
							["Value"] = {
								1, -- [1]
								0.4627450980392157, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Skull Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "",
							["Min"] = 0,
							["Name"] = "Alpha",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "skullAlpha",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "",
							["Min"] = 0.4,
							["Key"] = "skullScale",
							["Value"] = 0.6,
							["Name"] = "Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [13]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1605214963,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 607,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Add the buff name in the trigger box.",
					["__TrashAt"] = 1672612734,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
					["Name"] = "Aura - Buff Alert [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [12]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1604454032,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 351,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the debuff name in the trigger box.",
					["__TrashAt"] = 1672612734,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
					["Name"] = "Aura - Debuff Alert [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = false,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "dotsEnabled",
							["Value"] = true,
							["Name"] = "Dots Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Dots Color",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotsColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0.016\n    \n    --update the health bar color coloring from yellow to red\n    --Plater.SetNameplateColor (unitFrame, max (envTable._CastPercent/100, .66), abs (envTable._CastPercent/100 - 1), 0, 1)\n    \n    Plater.SetNameplateColor (unitFrame, envTable.HealthBarColor)\nend\n\n\n",
					["Time"] = 1604617977,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
					["Enabled"] = true,
					["Revision"] = 513,
					["semver"] = "",
					["Author"] = "BombadÔøΩo-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
					["__TrashAt"] = 1672612734,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \nend",
					["Name"] = "Cast - Ultra Important [P]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Health Bar Height Mod",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Health Bar Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "healthBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the health bar color to this one.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Name"] = "Arrow:",
							["Value"] = "Arrow:",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.5,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Name"] = "Arrow Width",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowWidth",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "arrowHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Height",
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation:",
							["Value"] = "Dot Animation:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 4,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [16]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [14]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1604617585,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 595,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["__TrashAt"] = 1672612734,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["Name"] = "Cast - Small Alert [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a small animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.6,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [6]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, scriptTable.config.segmentsAmount do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    \nend\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n\n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\nend",
					["Time"] = 1666836560,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 346,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["__TrashAt"] = 1672612734,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\nend\n\n\n\n\n\n\n\n\n",
					["Name"] = "Cast - Glowing [P]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Fraction"] = false,
							["Value"] = 7,
							["Key"] = "segmentsAmount",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Amount of Segments",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Spark Color",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Key"] = "sparkColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [16]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
					["Time"] = 1625696653,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
					["Enabled"] = true,
					["Revision"] = 836,
					["semver"] = "",
					["Author"] = "BombadÔøΩo-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight the target name",
					["__TrashAt"] = 1672612734,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
					["Name"] = "Cast - Important Target [P]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Shows the target name in a separate box",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 4",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Name"] = "Flash",
							["Value"] = "Flash:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 5,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation",
							["Value"] = "Dot Animation:",
							["Key"] = "option14",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Name"] = "Option 19",
							["Value"] = "Cast Bar",
							["Key"] = "option19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
						{
							["Type"] = 6,
							["Key"] = "option27",
							["Value"] = 0,
							["Name"] = "Option 27",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [27]
						{
							["Type"] = 5,
							["Key"] = "option28",
							["Value"] = "Target Options",
							["Name"] = "Option 28",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [28]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Fraction"] = false,
							["Value"] = 14,
							["Name"] = "Text Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "targetNameSize",
						}, -- [29]
						{
							["Type"] = 4,
							["Key"] = "colorByClass",
							["Value"] = true,
							["Name"] = "Use Class Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [30]
						{
							["Type"] = 1,
							["Key"] = "textColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [31]
						{
							["Type"] = 1,
							["Key"] = "targetBgColor",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								0.9846720322966576, -- [4]
							},
							["Name"] = "Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [32]
						{
							["Type"] = 1,
							["Key"] = "targetBgBorderColor",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [33]
						{
							["Type"] = 2,
							["Max"] = 160,
							["Desc"] = "",
							["Min"] = 30,
							["Fraction"] = false,
							["Value"] = 90,
							["Name"] = "Frame Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "targetFrameWidth",
						}, -- [34]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Name"] = "Frame Height",
							["Value"] = 20,
							["Key"] = "targetFrameHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [35]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [17]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1626467946,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1162,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["__TrashAt"] = 1672612734,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["Name"] = "Cast - Alert + Timer [P]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Cast start animation settings",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.4,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 5,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Name"] = "Shake Amplitude",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [11]
						{
							["Type"] = 7,
							["Key"] = "timerList",
							["Value"] = {
								{
									"350421", -- [1]
									"5", -- [2]
								}, -- [1]
								{
									"355787", -- [1]
									"15", -- [2]
								}, -- [2]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [3]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [4]
							},
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [18]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
					["Time"] = 1660259323,
					["url"] = "",
					["Icon"] = 610472,
					["Enabled"] = true,
					["Revision"] = 52,
					["semver"] = "",
					["Author"] = "Keyspell-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
					["__TrashAt"] = 1672612734,
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura is Shield [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [19]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1618996691,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1060,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["__TrashAt"] = 1672612734,
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Big Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [20]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    envTable.HealthBarColor = scriptTable.config.healthBarColor\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n\nend\n\n\n",
					["Time"] = 1604698647,
					["url"] = "",
					["Icon"] = 2175503,
					["Enabled"] = true,
					["Revision"] = 462,
					["semver"] = "",
					["Author"] = "BombadÔøΩo-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["__TrashAt"] = 1672612734,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\nend\n\n\n\n\n\n\n",
					["Name"] = "Explosion Affix M+ [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the cast bar color to this one.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Arrow:",
							["Name"] = "Arrow:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Key"] = "showArrow",
							["Value"] = true,
							["Name"] = "Show Arrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.5,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowAlpha",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Name"] = "Arrow Width",
							["Value"] = 8,
							["Key"] = "arrowWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Arrow Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowHeight",
						}, -- [11]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 4,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [16]
					},
					["version"] = -1,
					["SpellIds"] = {
						240446, -- [1]
					},
					["NpcNames"] = {
					},
				}, -- [21]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1660340256,
					["url"] = "",
					["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
					["Enabled"] = true,
					["Revision"] = 25,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
					["__TrashAt"] = 1672612734,
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Fixate by Unit Buff [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								0, -- [1]
								0.5568627450980392, -- [2]
								0.03529411764705882, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
						}, -- [1]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [22]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.movingArrow = envTable.movingArrow or Plater:CreateImage (self, [[Interface\\PETBATTLES\\PetBattle-StatIcons]], 16, self:GetHeight(), \"background\", {0, 15/32, 18/32, 30/32})\n    \n    --envTable.movingArrow.color = scriptTable.config.arrowColor\n    envTable.movingArrow:SetAlpha (scriptTable.config.arrowAlpha)\n    envTable.movingArrow:SetDesaturated (scriptTable.config.desaturateArrow)\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (envTable.movingArrow, \n        function() \n            envTable.movingArrow:Show() \n            envTable.movingArrow:SetPoint(\"left\", 0, 0)\n        end, \n        function() envTable.movingArrow:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend",
					["Time"] = 1604599443,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
					["Enabled"] = true,
					["Revision"] = 460,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["__TrashAt"] = 1672612734,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["Name"] = "Cast - Frontal Cone [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option4",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set the alpha of the moving arrow",
							["Min"] = 0,
							["Name"] = "Arrow Alpha",
							["Value"] = 0.275,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowAlpha",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Time that takes for an arrow to travel from the to right.",
							["Min"] = 0,
							["Name"] = "Animation Speed",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "animSpeed",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "desaturateArrow",
							["Value"] = false,
							["Name"] = "Use White Arrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the arrow color will be desaturated.",
						}, -- [7]
					},
					["version"] = -1,
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
				}, -- [23]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1618996917,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 717,
					["semver"] = "",
					["Author"] = "BombadÔøΩo-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["__TrashAt"] = 1672612734,
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Very Important [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a big animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 4",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Name"] = "Flash",
							["Value"] = "Flash:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 5,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation",
							["Value"] = "Dot Animation:",
							["Key"] = "option14",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Name"] = "Option 19",
							["Value"] = "Cast Bar",
							["Key"] = "option19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n        end\n    end\n    \nend\n\n\n",
				}, -- [24]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \nend",
					["Time"] = 1671311518,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 511,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n",
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Key"] = "segmentsAmount",
							["Value"] = 7,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Amount of Segments",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Spark Color",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Key"] = "sparkColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 7,
							["Name"] = "Cast Color by SpellID",
							["Value"] = {
								{
									"385536", -- [1]
									"maroon", -- [2]
								}, -- [1]
								{
									"198750", -- [1]
									"midnightblue", -- [2]
								}, -- [2]
								{
									"360850", -- [1]
									"lime", -- [2]
								}, -- [3]
								{
									"212784", -- [1]
									"deepskyblue", -- [2]
								}, -- [4]
								{
									"207980", -- [1]
									"midnightblue", -- [2]
								}, -- [5]
								{
									"199033", -- [1]
									"gold", -- [2]
								}, -- [6]
								{
									"199034", -- [1]
									"gold", -- [2]
								}, -- [7]
								{
									"200969", -- [1]
									"orange", -- [2]
								}, -- [8]
								{
									"394512", -- [1]
									"indigo", -- [2]
								}, -- [9]
								{
									"397881", -- [1]
									"deepskyblue", -- [2]
								}, -- [10]
								{
									"396020", -- [1]
									"khaki", -- [2]
								}, -- [11]
							},
							["Key"] = "castColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
						}, -- [4]
					},
					["SpellIds"] = {
						376644, -- [1]
						373017, -- [2]
						386781, -- [3]
						384823, -- [4]
						372735, -- [5]
						385536, -- [6]
						392398, -- [7]
						375596, -- [8]
						387135, -- [9]
						209033, -- [10]
						360850, -- [11]
						212784, -- [12]
						207980, -- [13]
						199033, -- [14]
						199034, -- [15]
						200969, -- [16]
						394512, -- [17]
						397881, -- [18]
						396020, -- [19]
						374430, -- [20]
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["Name"] = "Cast - Glowing [P]",
					["NpcNames"] = {
					},
					["__TrashAt"] = 1674291323,
				}, -- [25]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, scriptTable.config.segmentsAmount do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \nend",
					["Time"] = 1670202019,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
					["Enabled"] = true,
					["Revision"] = 468,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Just stop casting",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Name"] = "Amount of Segments",
							["Value"] = 5,
							["Key"] = "segmentsAmount",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["SpellIds"] = {
						377004, -- [1]
						381516, -- [2]
						196543, -- [3]
						199726, -- [4]
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["Name"] = "Cast - Stop Casting [P]",
					["NpcNames"] = {
					},
					["__TrashAt"] = 1674291323,
				}, -- [26]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670202618,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 798,
					["semver"] = "",
					["Author"] = "BombadÔøΩo-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\nend",
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a big animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 4",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Name"] = "Flash",
							["Value"] = "Flash:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Name"] = "Shake Amplitude",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation",
							["Value"] = "Dot Animation:",
							["Key"] = "option14",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Name"] = "Option 19",
							["Value"] = "Cast Bar",
							["Key"] = "option19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["SpellIds"] = {
						373046, -- [1]
						372863, -- [2]
						164686, -- [3]
						153072, -- [4]
						153680, -- [5]
						196497, -- [6]
						388886, -- [7]
						387145, -- [8]
						384365, -- [9]
						152964, -- [10]
						398150, -- [11]
						152801, -- [12]
						397878, -- [13]
						397914, -- [14]
						183263, -- [15]
						3636, -- [16]
						376171, -- [17]
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["Name"] = "Cast - Very Important [Plater]",
					["NpcNames"] = {
					},
					["__TrashAt"] = 1675003474,
				}, -- [27]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1669340967,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["Enabled"] = true,
					["Revision"] = 137,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["__TrashAt"] = 1685049776,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "indicatorColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Vertical Line Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Name"] = "Vertical Line Alpha",
							["Value"] = 0.79,
							["Key"] = "indicatorAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 6,
							["Name"] = "blank line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Fill Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "fillColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Fill Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "fillAlpha",
						}, -- [7]
					},
					["version"] = -1,
					["Name"] = "Add - Health Markers [P]",
					["NpcNames"] = {
						"197697", -- [1]
						"59544", -- [2]
					},
				}, -- [28]
			},
		},
		["TakUI"] = {
			["target_shady_combat_only"] = false,
			["extra_icon_use_blizzard_border_color"] = false,
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1669327144,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 632,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Add the buff name in the trigger box.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						398151, -- [1]
						377738, -- [2]
						378149, -- [3]
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Buff Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["Time"] = 1611844883,
					["url"] = "",
					["Icon"] = 135945,
					["Enabled"] = true,
					["Revision"] = 186,
					["semver"] = "",
					["Author"] = "Symantec-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Time to die Spiteful affix",
					["NpcNames"] = {
						"174773", -- [1]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "M+ Spiteful",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Time to Die",
							["Value"] = "Time to Die",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 50,
							["Desc"] = "",
							["Min"] = 10,
							["Fraction"] = false,
							["Value"] = 27,
							["Key"] = "bgWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Width",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Background Color",
							["Value"] = {
								0.5058823529411764, -- [1]
								0.07058823529411765, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "bgColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 24,
							["Desc"] = "",
							["Min"] = 7,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "textSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Text Size",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Text Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "textColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Name"] = "Targeting",
							["Value"] = "Targeting",
							["Key"] = "option11",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Key"] = "switchTargetName",
							["Value"] = true,
							["Name"] = "Show Target instead of Name",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "useTargetingColor",
							["Value"] = true,
							["Name"] = "Change Color if targeting You",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 1,
							["Key"] = "targetingColor",
							["Value"] = {
								0.07058823529411765, -- [1]
								0.6196078431372549, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Color if targeting You",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 6,
							["Name"] = "Option 11",
							["Value"] = 0,
							["Key"] = "option11",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [11]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1673994690,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 828,
					["semver"] = "",
					["Author"] = "BombadÔøΩo-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
					["SpellIds"] = {
						373046, -- [1]
						372863, -- [2]
						164686, -- [3]
						153072, -- [4]
						153680, -- [5]
						196497, -- [6]
						388886, -- [7]
						387145, -- [8]
						384365, -- [9]
						152964, -- [10]
						398150, -- [11]
						152801, -- [12]
						397878, -- [13]
						397914, -- [14]
						183263, -- [15]
						3636, -- [16]
						376171, -- [17]
						350687, -- [18]
						372735, -- [19]
						373017, -- [20]
						392488, -- [21]
						257732, -- [22]
						256060, -- [23]
						257899, -- [24]
						384633, -- [25]
						374339, -- [26]
						395694, -- [27]
						391634, -- [28]
						372701, -- [29]
						369328, -- [30]
						265487, -- [31]
						413044, -- [32]
						183526, -- [33]
						88194, -- [34]
						87762, -- [35]
						413385, -- [36]
						411001, -- [37]
						378282, -- [38]
						384161, -- [39]
						259572, -- [40]
						255371, -- [41]
						427460, -- [42]
						429172, -- [43]
						426500, -- [44]
						413607, -- [45]
						412922, -- [46]
						417481, -- [47]
						201399, -- [48]
						411994, -- [49]
						415770, -- [50]
						260907, -- [51]
						260703, -- [52]
						260741, -- [53]
						265876, -- [54]
						263959, -- [55]
						266225, -- [56]
						253517, -- [57]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a big animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 5,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 8,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["version"] = -1,
					["Name"] = "Cast - Very Important [Plater]",
					["NpcNames"] = {
					},
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
					["Time"] = 1670201853,
					["url"] = "",
					["Icon"] = 2175503,
					["Enabled"] = true,
					["Revision"] = 533,
					["semver"] = "",
					["Author"] = "BombadÔøΩo-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						240446, -- [1]
						385339, -- [2]
						198077, -- [3]
						210261, -- [4]
						360857, -- [5]
					},
					["PlaterCore"] = 1,
					["Name"] = "Explosion Affix M+ [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the cast bar color to this one.",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 5,
							["Name"] = "Arrow:",
							["Value"] = "Arrow:",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Name"] = "Arrow Width",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowWidth",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "arrowHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Height",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation:",
							["Value"] = "Dot Animation:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 4,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [13]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "Option 18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Nameplate Color",
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = false,
							["Key"] = "useNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.1843137294054031, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Health Bar Color",
						}, -- [17]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1669327144,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 368,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the debuff name in the trigger box.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Debuff Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670790652,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
					["Enabled"] = true,
					["Revision"] = 694,
					["semver"] = "",
					["Author"] = "BombadÔøΩo-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
					["SpellIds"] = {
						383823, -- [1]
						382670, -- [2]
						388537, -- [3]
						372851, -- [4]
						200682, -- [5]
						192307, -- [6]
						196838, -- [7]
						193827, -- [8]
						194043, -- [9]
						209410, -- [10]
						211464, -- [11]
						361180, -- [12]
						156718, -- [13]
						395859, -- [14]
						358320, -- [15]
						374045, -- [16]
						386757, -- [17]
						367500, -- [18]
						370225, -- [19]
						376200, -- [20]
						372107, -- [21]
						388923, -- [22]
						376934, -- [23]
						384899, -- [24]
						373960, -- [25]
						374724, -- [26]
						385551, -- [27]
						259732, -- [28]
						373424, -- [29]
						373084, -- [30]
						87618, -- [31]
						255041, -- [32]
						428926, -- [33]
						76634, -- [34]
						200050, -- [35]
						197546, -- [36]
						198079, -- [37]
						199193, -- [38]
						266181, -- [39]
						253544, -- [40]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Health Bar Height Mod",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above Use Cast Bar Color",
						}, -- [8]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.431372, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast Bar Color",
						}, -- [9]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Arrow:",
							["Name"] = "Arrow:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Key"] = "arrowAlpha",
							["Value"] = 0.5,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Arrow Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowWidth",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Key"] = "arrowHeight",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Height",
						}, -- [15]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [17]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [18]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 4,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [19]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 3,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [20]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"200682", -- [1]
									"darkslateblue", -- [2]
								}, -- [1]
								{
									"192307", -- [1]
									"goldenrod", -- [2]
								}, -- [2]
								{
									"196838", -- [1]
									"maroon", -- [2]
								}, -- [3]
								{
									"193827", -- [1]
									"darkgreen", -- [2]
								}, -- [4]
								{
									"194043", -- [1]
									"darkgreen", -- [2]
								}, -- [5]
								{
									"156718", -- [1]
									"DRUID", -- [2]
								}, -- [6]
								{
									"395859", -- [1]
									"ROGUE", -- [2]
								}, -- [7]
							},
							["Name"] = "Color List by SpellId",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
						}, -- [21]
					},
					["version"] = -1,
					["Name"] = "Cast - Ultra Important [P]",
					["NpcNames"] = {
					},
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203603,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1194,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						396640, -- [1]
						372743, -- [2]
						377389, -- [3]
						396812, -- [4]
						388392, -- [5]
						387955, -- [6]
						386546, -- [7]
						377503, -- [8]
						384808, -- [9]
						386024, -- [10]
						387615, -- [11]
						387606, -- [12]
						225100, -- [13]
						211401, -- [14]
						211470, -- [15]
						215433, -- [16]
						192563, -- [17]
						198959, -- [18]
						152818, -- [19]
						156776, -- [20]
						398206, -- [21]
						153524, -- [22]
						396073, -- [23]
						396018, -- [24]
						345202, -- [25]
						377950, -- [26]
						372223, -- [27]
						384194, -- [28]
						392451, -- [29]
						392924, -- [30]
						397889, -- [31]
						209413, -- [32]
						207980, -- [33]
						257397, -- [34]
						257736, -- [35]
						382787, -- [36]
						374699, -- [37]
						377402, -- [38]
						369602, -- [39]
						369465, -- [40]
						369400, -- [41]
						381593, -- [42]
						265091, -- [43]
						265433, -- [44]
						382791, -- [45]
						376780, -- [46]
						225573, -- [47]
						278444, -- [48]
						164887, -- [49]
						168082, -- [50]
						76813, -- [51]
						227913, -- [52]
						265368, -- [53]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Big Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Name"] = "Flash Duration",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1669325410,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 662,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						376851, -- [1]
						396044, -- [2]
						381517, -- [3]
						373932, -- [4]
						397801, -- [5]
						208165, -- [6]
						392576, -- [7]
						198750, -- [8]
						387843, -- [9]
						387411, -- [10]
						211299, -- [11]
						198595, -- [12]
						198934, -- [13]
						198962, -- [14]
						156722, -- [15]
						281420, -- [16]
						274383, -- [17]
						259092, -- [18]
						367521, -- [19]
						374544, -- [20]
						385039, -- [21]
						382474, -- [22]
						369823, -- [23]
						377500, -- [24]
						260879, -- [25]
						186269, -- [26]
						378818, -- [27]
						371875, -- [28]
						372225, -- [29]
						200658, -- [30]
						266036, -- [31]
						265407, -- [32]
						164965, -- [33]
						429176, -- [34]
						428526, -- [35]
						418200, -- [36]
						407124, -- [37]
						415437, -- [38]
						264050, -- [39]
						267824, -- [40]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Small Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a small animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.6,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [6]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
					["Time"] = 1604696441,
					["url"] = "",
					["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
					["Enabled"] = false,
					["Revision"] = 63,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Auto set skull marker",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Auto Set Skull",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Option 1",
							["Value"] = "Auto set a raid target Skull on the unit.",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "Option 2",
							["Value"] = 0,
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Only in Combat",
							["Value"] = false,
							["Key"] = "onlyInCombat",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Set the mark only if the unit is in combat.",
						}, -- [3]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1665238136,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["Enabled"] = true,
					["Revision"] = 376,
					["semver"] = "",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["NpcNames"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["SpellIds"] = {
					},
					["Prio"] = 99,
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 17",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "blinkEnabled",
							["Value"] = true,
							["Name"] = "Blink Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable blink",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = true,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable glows",
						}, -- [5]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = false,
							["Name"] = "Change NamePlate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'true' to enable nameplate color change",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the blink effect only",
							["Min"] = 1,
							["Fraction"] = true,
							["Value"] = 3,
							["Key"] = "timeleftToBlink",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Timeleft to Blink",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "time to complete a blink loop",
							["Min"] = 0.5,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "blinkSpeed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Speed",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.6,
							["Key"] = "blinkMaxAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Max Alpha",
						}, -- [9]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color of the blink",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								0.2862745098039216, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "nameplate color if ChangeNameplateColor is true",
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 4,
							["Key"] = "timerColorEnabled",
							["Value"] = true,
							["Name"] = "Timer Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable changes in the color of the time left text",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Warning",
							["Value"] = 8,
							["Key"] = "timeLeftWarning",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Critical",
							["Value"] = 3,
							["Key"] = "timeLeftCritical",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [15]
						{
							["Type"] = 1,
							["Key"] = "warningColor",
							["Value"] = {
								1, -- [1]
								0.8705882352941177, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Warning Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left entered in a warning zone",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "criticalColor",
							["Value"] = {
								1, -- [1]
								0.07450980392156863, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Critical Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left is critical",
						}, -- [17]
					},
				}, -- [10]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604354364,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
					["Enabled"] = true,
					["Revision"] = 206,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Countdown",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1670202265,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
					["Enabled"] = true,
					["Revision"] = 620,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						375943, -- [1]
						385958, -- [2]
						388623, -- [3]
						377034, -- [4]
						374361, -- [5]
						381525, -- [6]
						386660, -- [7]
						385578, -- [8]
						384699, -- [9]
						153501, -- [10]
						153686, -- [11]
						154442, -- [12]
						192018, -- [13]
						219488, -- [14]
						372087, -- [15]
						391726, -- [16]
						391723, -- [17]
						377383, -- [18]
						388976, -- [19]
						370764, -- [20]
						387067, -- [21]
						391118, -- [22]
						391136, -- [23]
						382233, -- [24]
						209027, -- [25]
						212031, -- [26]
						207261, -- [27]
						207979, -- [28]
						198888, -- [29]
						199805, -- [30]
						199050, -- [31]
						191508, -- [32]
						152792, -- [33]
						153395, -- [34]
						209495, -- [35]
						257426, -- [36]
						255952, -- [37]
						257870, -- [38]
						413147, -- [39]
						383107, -- [40]
						377559, -- [41]
						388060, -- [42]
						376170, -- [43]
						384524, -- [44]
						375351, -- [45]
						390111, -- [46]
						369791, -- [47]
						369573, -- [48]
						369563, -- [49]
						369335, -- [50]
						369061, -- [51]
						375727, -- [52]
						265016, -- [53]
						265019, -- [54]
						260793, -- [55]
						260292, -- [56]
						272457, -- [57]
						272609, -- [58]
						269843, -- [59]
						183465, -- [60]
						226296, -- [61]
						188169, -- [62]
						183088, -- [63]
						410873, -- [64]
						411012, -- [65]
						88308, -- [66]
						382708, -- [67]
						375251, -- [68]
						375439, -- [69]
						372311, -- [70]
						373742, -- [71]
						372201, -- [72]
						374533, -- [73]
						377204, -- [74]
						201226, -- [75]
						204667, -- [76]
						198379, -- [77]
						200768, -- [78]
						253239, -- [79]
						250258, -- [80]
						255567, -- [81]
						194956, -- [82]
						427510, -- [83]
						426645, -- [84]
						412505, -- [85]
						412129, -- [86]
						419351, -- [87]
						401482, -- [88]
						404916, -- [89]
						200345, -- [90]
						200261, -- [91]
						198641, -- [92]
						265372, -- [93]
						271174, -- [94]
						264694, -- [95]
						264923, -- [96]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Frontal Cone [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 4",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set the alpha of the moving arrow",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.73,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Time that takes for an arrow to travel from the to right.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "animSpeed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Animation Speed",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Use White Arrow",
							["Value"] = false,
							["Key"] = "desaturateArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the arrow color will be desaturated.",
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
				}, -- [12]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
					["Time"] = 1604239880,
					["url"] = "",
					["Icon"] = 1029718,
					["Enabled"] = true,
					["Revision"] = 269,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
					["Desc"] = "Show above the nameplate who is the player fixated",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Fixate [Plater]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604357453,
					["url"] = "",
					["Icon"] = 136048,
					["Enabled"] = true,
					["Revision"] = 233,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show the energy amount above the nameplate.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Unit - Show Energy [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "script desc",
							["Value"] = "Show the power of the unit above the nameplate.",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
							["Name"] = "add trigger",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 2",
							["Value"] = 0,
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Show at 80% of Energy",
							["Value"] = true,
							["Key"] = "showLater",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Text size.",
							["Min"] = 8,
							["Key"] = "fontSize",
							["Value"] = 16,
							["Name"] = "Text Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Font Color",
							["Value"] = {
								0.803921568627451, -- [1]
								0.803921568627451, -- [2]
								0.803921568627451, -- [3]
								1, -- [4]
							},
							["Key"] = "fontColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the text.",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Enable Text Outline",
							["Value"] = true,
							["Key"] = "outline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the text uses outline.",
						}, -- [9]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
				}, -- [14]
				{
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604087921,
					["url"] = "",
					["Icon"] = 841383,
					["Enabled"] = true,
					["Revision"] = 266,
					["semver"] = "",
					["Author"] = "Tecno-Azralon",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["PlaterCore"] = 1,
					["Name"] = "Fixate On You [Plater]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1625697537,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_is_timer",
					["Enabled"] = true,
					["Revision"] = 282,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "When a spell resembles more a timer than a spell being cast",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						354080, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Castbar is Timer [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 7,
							["Key"] = "customSize",
							["Value"] = {
								{
									"17", -- [1]
									"120, 16", -- [2]
								}, -- [1]
							},
							["Name"] = "Customized Size (Key = Spell ID, Value = Width, Height)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Enter the spellId into the Key and width,height into the Value. Example: Key 17 Value 120,16",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "",
							["Min"] = 5,
							["Fraction"] = false,
							["Value"] = 120,
							["Key"] = "width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Width",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 5,
							["Name"] = "Cast Bar Height",
							["Value"] = 16,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "height",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Set the size of the cast time",
							["Min"] = 8,
							["Fraction"] = false,
							["Value"] = 12,
							["Key"] = "timerFontSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Timer Size",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option7",
							["Value"] = "Time Separators",
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "separatorColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.5992676615715027, -- [4]
							},
							["Name"] = "Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 1,
							["Key"] = "separatorWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Width",
						}, -- [9]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
				}, -- [16]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
					["Time"] = 1669339628,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
					["Enabled"] = true,
					["Revision"] = 878,
					["semver"] = "",
					["Author"] = "BombadÔøΩo-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight the target name",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Important Target [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shows the target name in a separate box",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Name"] = "Shake Amplitude",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
						{
							["Type"] = 6,
							["Name"] = "Option 27",
							["Value"] = 0,
							["Key"] = "option27",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [27]
						{
							["Type"] = 5,
							["Name"] = "Option 28",
							["Value"] = "Target Options",
							["Key"] = "option28",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [28]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Name"] = "Text Size",
							["Value"] = 14,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "targetNameSize",
						}, -- [29]
						{
							["Type"] = 4,
							["Name"] = "Use Class Color",
							["Value"] = true,
							["Key"] = "colorByClass",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [30]
						{
							["Type"] = 1,
							["Name"] = "Text Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [31]
						{
							["Type"] = 1,
							["Name"] = "Background Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								0.9846720322966576, -- [4]
							},
							["Key"] = "targetBgColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [32]
						{
							["Type"] = 1,
							["Name"] = "Border Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetBgBorderColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [33]
						{
							["Type"] = 2,
							["Max"] = 160,
							["Desc"] = "",
							["Min"] = 30,
							["Name"] = "Frame Width",
							["Value"] = 90,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "targetFrameWidth",
						}, -- [34]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Key"] = "targetFrameHeight",
							["Value"] = 20,
							["Name"] = "Frame Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [35]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
				}, -- [17]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203758,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1213,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Alert + Timer [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Cast start animation settings",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [11]
						{
							["Type"] = 7,
							["Key"] = "timerList",
							["Value"] = {
							},
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [18]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
					["Time"] = 1669327146,
					["url"] = "",
					["Icon"] = 610472,
					["Enabled"] = true,
					["Revision"] = 65,
					["semver"] = "",
					["Author"] = "Keyspell-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura is Shield [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [19]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1668886509,
					["url"] = "",
					["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
					["Enabled"] = true,
					["Revision"] = 33,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						426662, -- [1]
						426663, -- [2]
					},
					["PlaterCore"] = 1,
					["Name"] = "Fixate by Unit Buff [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0, -- [1]
								0.5568627450980392, -- [2]
								0.03529411764705882, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
						}, -- [1]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [20]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1672514190,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 547,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						376644, -- [1]
						373017, -- [2]
						386781, -- [3]
						384823, -- [4]
						372735, -- [5]
						385536, -- [6]
						392398, -- [7]
						375596, -- [8]
						387135, -- [9]
						360850, -- [10]
						212784, -- [11]
						199033, -- [12]
						199034, -- [13]
						200969, -- [14]
						394512, -- [15]
						397881, -- [16]
						396020, -- [17]
						374430, -- [18]
						384353, -- [19]
						265376, -- [20]
						193941, -- [21]
						411002, -- [22]
						169445, -- [23]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Key"] = "segmentsAmount",
							["Value"] = 7,
							["Name"] = "Amount of Segments",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"385536", -- [1]
									"maroon", -- [2]
								}, -- [1]
								{
									"198750", -- [1]
									"midnightblue", -- [2]
								}, -- [2]
								{
									"360850", -- [1]
									"lime", -- [2]
								}, -- [3]
								{
									"212784", -- [1]
									"deepskyblue", -- [2]
								}, -- [4]
								{
									"207980", -- [1]
									"midnightblue", -- [2]
								}, -- [5]
								{
									"199033", -- [1]
									"gold", -- [2]
								}, -- [6]
								{
									"199034", -- [1]
									"gold", -- [2]
								}, -- [7]
								{
									"200969", -- [1]
									"orange", -- [2]
								}, -- [8]
								{
									"394512", -- [1]
									"indigo", -- [2]
								}, -- [9]
								{
									"397881", -- [1]
									"deepskyblue", -- [2]
								}, -- [10]
								{
									"396020", -- [1]
									"khaki", -- [2]
								}, -- [11]
							},
							["Name"] = "Cast Color by SpellID",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
						}, -- [4]
					},
					["version"] = -1,
					["Name"] = "Cast - Glowing [P]",
					["NpcNames"] = {
					},
				}, -- [21]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1671066705,
					["url"] = "",
					["Icon"] = 134229,
					["Enabled"] = true,
					["Revision"] = 37,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
						191284, -- [1]
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Cast - Effect After Cast [P]",
					["NpcNames"] = {
					},
				}, -- [22]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Time"] = 1670428019,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
					["Enabled"] = true,
					["Revision"] = 162,
					["semver"] = "",
					["Author"] = "Butazzul-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						385916, -- [1]
						386063, -- [2]
						388822, -- [3]
						373087, -- [4]
						397785, -- [5]
						106864, -- [6]
						193660, -- [7]
						198263, -- [8]
						387910, -- [9]
						370766, -- [10]
						375591, -- [11]
						384336, -- [12]
						209404, -- [13]
						209378, -- [14]
						210875, -- [15]
						396001, -- [16]
						397899, -- [17]
						386559, -- [18]
						382555, -- [19]
						258672, -- [20]
						258777, -- [21]
						257756, -- [22]
						257784, -- [23]
						256405, -- [24]
						256589, -- [25]
						393793, -- [26]
						388046, -- [27]
						375079, -- [28]
						390290, -- [29]
						369811, -- [30]
						369703, -- [31]
						226287, -- [32]
						410999, -- [33]
						372561, -- [34]
						256882, -- [35]
						172578, -- [36]
						412063, -- [37]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Circle AoE [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 0.3,
							["Desc"] = "Rotation Duration",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.15,
							["Name"] = "Rotation Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "rotationDuration",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "Option 5",
							["Value"] = 0,
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 1.5,
							["Desc"] = "Animation Start Duration",
							["Min"] = 0,
							["Name"] = "Animation Start Duration",
							["Value"] = 0.3,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "animStartDuration",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
							["Min"] = 0,
							["Key"] = "textureStartAlpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Start Alpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "Texture Scale",
							["Min"] = 0.6,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Texture Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureScale",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Name"] = "Texture Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureAlpha",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
				}, -- [23]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1683596223,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["Enabled"] = true,
					["Revision"] = 146,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["NpcNames"] = {
						"197697", -- [1]
						"59544", -- [2]
						"186227", -- [3]
						"184020", -- [4]
						"91005", -- [5]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Health Markers [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Option 1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "blank line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Vertical Line Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "indicatorColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Key"] = "indicatorAlpha",
							["Value"] = 0.79,
							["Name"] = "Vertical Line Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "fillColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Fill Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Name"] = "Fill Alpha",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "fillAlpha",
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
				}, -- [24]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670423785,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 572,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["NpcNames"] = {
						"196548", -- [1]
						"195580", -- [2]
						"195820", -- [3]
						"195821", -- [4]
						"189886", -- [5]
						"75966", -- [6]
						"102019", -- [7]
						"187159", -- [8]
						"194897", -- [9]
						"104251", -- [10]
						"101326", -- [11]
						"189669", -- [12]
						"192464", -- [13]
						190381, -- [14]
						92538, -- [15]
						192464, -- [16]
						131009, -- [17]
						127315, -- [18]
						133361, -- [19]
						136330, -- [20]
						214117, -- [21]
						212483, -- [22]
						101008, -- [23]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Important [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Name"] = "Nameplate Size Offset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "nameplateSizeOffset",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.7137255072593689, -- [2]
								0, -- [3]
								0.5631310641765594, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dot Color",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option10",
							["Value"] = "Extra Texture",
							["Name"] = "Extra Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Extra Texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Show Extra Texture",
							["Value"] = false,
							["Key"] = "showExtraTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Extra Texture",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "skullColor",
							["Value"] = {
								1, -- [1]
								0.4627450980392157, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Alpha",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "skullAlpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "Scale",
							["Min"] = 0.4,
							["Name"] = "Scale",
							["Value"] = 0.6,
							["Key"] = "skullScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 7,
							["Name"] = "Npc Color By NpcID",
							["Value"] = {
								{
									"196548", -- [1]
									"forestgreen", -- [2]
								}, -- [1]
								{
									"195580", -- [1]
									"forestgreen", -- [2]
								}, -- [2]
								{
									"195820", -- [1]
									"forestgreen", -- [2]
								}, -- [3]
								{
									"195821", -- [1]
									"forestgreen", -- [2]
								}, -- [4]
								{
									"189886", -- [1]
									"forestgreen", -- [2]
								}, -- [5]
								{
									"75966", -- [1]
									"forestgreen", -- [2]
								}, -- [6]
								{
									"102019 ", -- [1]
									"forestgreen", -- [2]
								}, -- [7]
								{
									"187159", -- [1]
									"forestgreen", -- [2]
								}, -- [8]
								{
									"194897", -- [1]
									"forestgreen", -- [2]
								}, -- [9]
								{
									"104251", -- [1]
									"forestgreen", -- [2]
								}, -- [10]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the npcID, value is the color name",
						}, -- [15]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
				}, -- [25]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1669340442,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/add_id_icon",
					["Enabled"] = false,
					["Revision"] = 161,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
					["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Add - Tag Number [P]",
					["NpcNames"] = {
						"195138", -- [1]
						"192955", -- [2]
						"190294", -- [3]
						"76518", -- [4]
					},
				}, -- [26]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1669324381,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
					["Enabled"] = true,
					["Revision"] = 887,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Play a very fast flash when the cast start",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						392640, -- [1]
						397888, -- [2]
						209033, -- [3]
						385029, -- [4]
						374563, -- [5]
						377341, -- [6]
						369675, -- [7]
						369365, -- [8]
						369411, -- [9]
						278961, -- [10]
						202108, -- [11]
						88186, -- [12]
						200630, -- [13]
						255824, -- [14]
						252781, -- [15]
						250096, -- [16]
						200248, -- [17]
						197797, -- [18]
						264520, -- [19]
						418202, -- [20]
						201839, -- [21]
						412012, -- [22]
						411958, -- [23]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Quick Flash [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 0,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.1,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Name"] = "Shake Amplitude",
							["Value"] = 25,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 30,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [27]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
					["Time"] = 1670427654,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/exclamation_64",
					["Enabled"] = true,
					["Revision"] = 162,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color of  add",
					["NpcNames"] = {
						"190187", -- [1]
						"189893", -- [2]
						"99922", -- [3]
						"104822", -- [4]
						129758, -- [5]
						190426, -- [6]
						186696, -- [7]
						101075, -- [8]
						100818, -- [9]
						98081, -- [10]
						52019, -- [11]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Warning [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0.4392157196998596, -- [2]
								0.458823561668396, -- [3]
								1, -- [4]
							},
							["Key"] = "healthBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Flash Nameplate",
							["Value"] = true,
							["Key"] = "useFlash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Flash Nameplate",
						}, -- [4]
						{
							["Type"] = 7,
							["Name"] = "NpcID to Color",
							["Value"] = {
								{
									"189893", -- [1]
									"olivedrab", -- [2]
								}, -- [1]
								{
									"190187", -- [1]
									"olivedrab", -- [2]
								}, -- [2]
								{
									"99922", -- [1]
									"olivedrab", -- [2]
								}, -- [3]
								{
									"153285", -- [1]
									"olivedrab", -- [2]
								}, -- [4]
								{
									"104822", -- [1]
									"olivedrab", -- [2]
								}, -- [5]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
						}, -- [5]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
				}, -- [28]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
					["Time"] = 1670427838,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/duck_64",
					["Enabled"] = true,
					["Revision"] = 111,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["NpcNames"] = {
						"194622", -- [1]
						"190205", -- [2]
						"197398", -- [3]
						"77006", -- [4]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Non Elite Trash [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = false,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0.062745101749897, -- [1]
								0.062745101749897, -- [2]
								0.0941176563501358, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Scale",
							["Value"] = true,
							["Key"] = "useNameplateScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Scale",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Nameplate Scale",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Key"] = "scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Nameplate Scale",
						}, -- [5]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
				}, -- [29]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669325411,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
					["Enabled"] = true,
					["Revision"] = 101,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						373688, -- [1]
						391050, -- [2]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Shield Interrupt [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
				}, -- [30]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1672514185,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
					["Enabled"] = true,
					["Revision"] = 506,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Just stop casting",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						377004, -- [1]
						381516, -- [2]
						196543, -- [3]
						199726, -- [4]
						200291, -- [5]
						268202, -- [6]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Fraction"] = false,
							["Value"] = 20,
							["Key"] = "segmentsAmount",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Amount of Segments",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["version"] = -1,
					["Name"] = "Cast - Stop Casting [P]",
					["NpcNames"] = {
					},
				}, -- [31]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669340350,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/radio_64",
					["Enabled"] = true,
					["Revision"] = 106,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["NpcNames"] = {
						"194895", -- [1]
						"105703", -- [2]
						"59598", -- [3]
						"58319", -- [4]
						200388, -- [5]
						189299, -- [6]
						131402, -- [7]
						135052, -- [8]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Explode on Die [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useReverse",
							["Value"] = false,
							["Name"] = "Reverse Health Bar",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "useShake",
							["Value"] = false,
							["Name"] = "Enable Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "How strong is the shake.",
							["Min"] = 0.05,
							["Key"] = "shakeAmplitude",
							["Value"] = 0.2,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 70,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "useBackground",
							["Value"] = true,
							["Name"] = "Show Red Background",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Red Background",
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
				}, -- [32]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
					["Time"] = 1673726734,
					["url"] = "",
					["Icon"] = 236209,
					["Enabled"] = true,
					["Revision"] = 18,
					["semver"] = "",
					["Author"] = "Tiranaa-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
						372743, -- [1]
						372749, -- [2]
						384933, -- [3]
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Aura While Casting [P]",
					["NpcNames"] = {
					},
				}, -- [33]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1676905232,
					["url"] = "",
					["Icon"] = 4038101,
					["Enabled"] = true,
					["Revision"] = 73,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
					["SpellIds"] = {
						388886, -- [1]
						209676, -- [2]
						377912, -- [3]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Dots Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.4166216850280762, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dots Color",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 0,
							["Name"] = "Dots X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 0,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dots Y Offset",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust how fast the blinking occurs",
							["Min"] = 0.2,
							["Name"] = "Blink Speed",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "speed",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Min amount of transparency the blink can have",
							["Min"] = 0,
							["Name"] = "Blink Min Alpha",
							["Value"] = 0,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "minAlpha",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Max amount of transparency the blink can have",
							["Min"] = 0,
							["Key"] = "maxAlpha",
							["Value"] = 0.5,
							["Name"] = "Blink Max Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								0.01960784383118153, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the blinking texture",
						}, -- [8]
					},
					["version"] = -1,
					["Name"] = "Cast - On Going Cast [P]",
					["NpcNames"] = {
					},
				}, -- [34]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    envTable.ShowTargeted = scriptTable.config.ShowTargeted\n    envTable.ShowRaidMarked = scriptTable.config.ShowRaidMarked\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.ThrottleUpdate = 0.016\n    if (envTable.ShowTargeted) and (unitFrame.namePlateIsTarget) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    elseif (envTable.ShowRaidMarked) and (Plater.GetRaidMark (unitFrame)) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    else\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        unitFrame.castBar:Hide ()\n    end\n    \nend",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.ThrottleUpdate = 0.016\n    if (envTable.ShowTargeted) and (unitFrame.namePlateIsTarget) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    elseif (envTable.ShowRaidMarked) and (Plater.GetRaidMark (unitFrame)) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    else\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        unitFrame.castBar:Hide ()\n    end\n    \nend",
					["Time"] = 1702409207,
					["Icon"] = 644389,
					["url"] = "https://wago.io/s1RWs5pfS/1",
					["NpcNames"] = {
						"214441", -- [1]
					},
					["semver"] = "1.0.0",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend",
					["Revision"] = 743,
					["Options"] = {
						{
							["Type"] = 4,
							["Name"] = "Show if Targeted",
							["Value"] = true,
							["Key"] = "ShowTargeted",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Determines if the nameplate should be shown if you have the unit targeted",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Show if Raid Marked",
							["Value"] = true,
							["Key"] = "ShowRaidMarked",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Determines if the nameplate should be shown if it has a raid mark applied",
						}, -- [2]
					},
					["version"] = 1,
					["Prio"] = 99,
					["Author"] = "Evolutious",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.ThrottleUpdate = 0.016\n    if (envTable.ShowTargeted) and (unitFrame.namePlateIsTarget) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    elseif (envTable.ShowRaidMarked) and (Plater.GetRaidMark (unitFrame)) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    else\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        unitFrame.castBar:Hide ()\n    end\n    \nend",
					["Name"] = "Hide Nameplate by UnitID",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.ThrottleUpdate = 0.016\n    if (envTable.ShowTargeted) and (unitFrame.namePlateIsTarget) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    elseif (envTable.ShowRaidMarked) and (Plater.GetRaidMark (unitFrame)) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    else\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        unitFrame.castBar:Hide ()\n    end\n    \nend",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Desc"] = "Hide's nameplates based on the unit's name or npcID. Add the Unit Name or npcID as a trigger.",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    envTable.ShowTargeted = scriptTable.config.ShowTargeted\n    envTable.ShowRaidMarked = scriptTable.config.ShowRaidMarked\n    \nend",
					["Enabled"] = true,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [35]
			},
			["npcs_renamed"] = {
				[101679] = "Poisoner",
				[201223] = "Magus",
				[40634] = "Witch",
				[96512] = "Boss",
				[95766] = "Charger",
				[98949] = "Boss",
				[81820] = "Mender",
				[122984] = "Colossus",
				[213607] = "Dog",
				[98370] = "Caster",
				[40936] = "Smasher",
				[99664] = "Ghost",
				[98275] = "Archer",
				[101839] = "Cat",
				[125977] = "Totem",
				[98696] = "Boss",
				[131677] = "Sucky",
				[122969] = "Witch-Doctor",
				[213942] = "Slime",
				[81819] = "Naturalist",
				[131009] = "Smallie",
				[129517] = "Raptor",
				[84400] = "Ancient",
				[100529] = "Blob",
				[102094] = "Swordsman",
				[100991] = "Root",
				[212673] = "Ravager",
				[98792] = "Scavenger",
				[84957] = "Pyromancer",
				[98681] = "Spider",
				[101991] = "Fear Guy",
				[212778] = "Minion",
				[84989] = "Icecaller",
				[122970] = "Stalker",
				[102277] = "Decoy",
				[98900] = "Trickster",
				[84767] = "Abomination",
				[86684] = "Flower",
				[100531] = "Biggie",
				[100539] = "Deadeye",
				[205151] = "Vanguard",
				[81985] = "Cultivator",
				[122963] = "Boss",
				[102095] = "Lancer",
				[127757] = "Honor Guard",
				[101549] = "Minion",
				[95769] = "Bird",
				[41096] = "Oracle",
				[84990] = "Arcane",
				[122971] = "Juggernaut",
				[98691] = "Scout",
				[99365] = "Stalker",
				[128435] = "Smallie",
				[98280] = "Mage",
				[100532] = "Smallie",
				[99200] = "Boss",
				[205152] = "Maiden",
				[81864] = "Flower",
				[39616] = "Invader",
				[131812] = "Candles",
				[100486] = "Mage",
				[98810] = "Wrathguard",
				[86372] = "Berserker",
				[135989] = "Shieldbearer",
				[101074] = "Whelp",
				[122972] = "Augur",
				[99358] = "Dryad",
				[99366] = "Summoner",
				[95771] = "Caster",
				[98366] = "Dagger",
				[81737] = "Flower",
				[82682] = "Boss",
				[102962] = "Smallie",
				[213806] = "Caster",
				[122973] = "Confessor",
				[99359] = "Keeper",
				[40577] = "Sentinel",
				[212981] = "Assistant",
				[129553] = "Dinomancer",
				[95779] = "Bear",
				[122965] = "Boss",
				[127799] = "Charger",
				[102788] = "Domindator",
				[109908] = "Smallie",
				[127315] = "Totem",
				[100526] = "Bat",
				[128434] = "Bird",
				[212775] = "Caster",
				[103344] = "Boss",
				[82039] = "Stinger",
				[40633] = "Guard",
				[127879] = "Shieldbearer",
				[98677] = "Small Spider",
				[107288] = "Flower",
				[95772] = "Cat",
				[212681] = "Dog",
				[98542] = "Boss",
				[102781] = "Bat",
				[99360] = "Flower",
				[40923] = "Smallie",
				[132126] = "Priest",
				[98368] = "Protector",
				[40935] = "Hunter",
				[208698] = "Riftmage",
				[40943] = "Mage",
				[213770] = "Boss",
				[100527] = "Imp",
				[40925] = "Sentry",
				[205158] = "Snake",
				[98813] = "Felhound",
				[40586] = "Boss",
				[98243] = "Champion",
				[44404] = "Witch",
				[201222] = "Keeper",
			},
			["aura_cache_by_name"] = {
				["hex"] = {
					11641, -- [1]
					16097, -- [2]
					16707, -- [3]
					16708, -- [4]
					16709, -- [5]
					17172, -- [6]
					18503, -- [7]
					22566, -- [8]
					24053, -- [9]
					29044, -- [10]
					36700, -- [11]
					40400, -- [12]
					46295, -- [13]
					51514, -- [14]
					53439, -- [15]
					66054, -- [16]
					76820, -- [17]
					82760, -- [18]
					89459, -- [19]
					93958, -- [20]
					97396, -- [21]
					126241, -- [22]
					126345, -- [23]
					133034, -- [24]
					134202, -- [25]
					136422, -- [26]
					142608, -- [27]
					142613, -- [28]
					142617, -- [29]
					150030, -- [30]
					150037, -- [31]
					168013, -- [32]
					173156, -- [33]
					178064, -- [34]
					192111, -- [35]
					196942, -- [36]
					210826, -- [37]
					210830, -- [38]
					210873, -- [39]
					211004, -- [40]
					211010, -- [41]
					211015, -- [42]
					215583, -- [43]
					219215, -- [44]
					219216, -- [45]
					219217, -- [46]
					219218, -- [47]
					219219, -- [48]
					247609, -- [49]
					254412, -- [50]
					260052, -- [51]
					262342, -- [52]
					262349, -- [53]
					262362, -- [54]
					269352, -- [55]
					269355, -- [56]
					270492, -- [57]
					271930, -- [58]
					274794, -- [59]
					277778, -- [60]
					277780, -- [61]
					277784, -- [62]
					277785, -- [63]
					278808, -- [64]
					278809, -- [65]
					290438, -- [66]
					309328, -- [67]
					309329, -- [68]
					313639, -- [69]
					332605, -- [70]
					336517, -- [71]
					343198, -- [72]
				},
				["dream delver"] = {
					352786, -- [1]
					353353, -- [2]
					353354, -- [3]
				},
				["fusion burn"] = {
					299905, -- [1]
					299906, -- [2]
				},
				["exsanguinated"] = {
					294100, -- [1]
					328897, -- [2]
					356372, -- [3]
				},
				["sinful revelation"] = {
					309623, -- [1]
					324260, -- [2]
				},
				["flame shock"] = {
					13729, -- [1]
					15039, -- [2]
					15096, -- [3]
					15616, -- [4]
					16804, -- [5]
					22423, -- [6]
					23038, -- [7]
					32967, -- [8]
					34354, -- [9]
					39529, -- [10]
					39590, -- [11]
					41115, -- [12]
					43303, -- [13]
					51588, -- [14]
					55613, -- [15]
					58940, -- [16]
					58971, -- [17]
					59684, -- [18]
					79890, -- [19]
					87707, -- [20]
					90846, -- [21]
					125062, -- [22]
					132736, -- [23]
					160101, -- [24]
					163057, -- [25]
					188389, -- [26]
					189804, -- [27]
					192344, -- [28]
					206444, -- [29]
					248367, -- [30]
					248484, -- [31]
					255043, -- [32]
					263979, -- [33]
					268013, -- [34]
					290422, -- [35]
				},
				["scouring touch"] = {
					356329, -- [1]
				},
			},
			["cast_statusbar_fadein_time"] = 0.2000000029802322,
			["cast_statusbar_spark_alpha"] = 0,
			["aura2_y_offset"] = 17.97999572753906,
			["aura_timer"] = false,
			["expansion_triggerwipe"] = {
				[9] = true,
			},
			["show_aggro_glow"] = false,
			["color_override_colors"] = {
				[3] = {
					0.996078431372549, -- [1]
					0.1725490196078431, -- [2]
					0.1725490196078431, -- [3]
				},
			},
			["npc_cache"] = {
				[206066] = {
					"Timestream Leech", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[40943] = {
					"Gilgoblin Aquamage", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[135240] = {
					"Soul Essence", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[129602] = {
					"Irontide Enforcer", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[192934] = {
					"Volatile Infuser", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[130909] = {
					"Fetid Maggot", -- [1]
					"The Underrot", -- [2]
				},
				[133870] = {
					"Diseased Lasher", -- [1]
					"The Underrot", -- [2]
				},
				[201222] = {
					"Valow, Timesworn Keeper", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[201223] = {
					"Infinite Twilight Magus", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[195135] = {
					"Bracken Warscourge", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[40577] = {
					"Naz'jar Sentinel", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[179963] = {
					"Terror Orb", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[213942] = {
					"Sludge", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[40633] = {
					"Naz'jar Honor Guard", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[98366] = {
					"Ghostly Retainer", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[104247] = {
					"Duskwatch Arcanist", -- [1]
					"Court of Stars", -- [2]
				},
				[86684] = {
					"Feral Lasher", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[186658] = {
					"Stonevault Geomancer", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[184140] = {
					"Xy Acolyte", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[205337] = {
					"Infinite Timebender", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[98542] = {
					"Amalgam of Souls", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[98813] = {
					"Bloodscent Felhound", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[95769] = {
					"Mindshattered Screecher", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[186787] = {
					"Ritual Guardian", -- [1]
					"Dragon Isles", -- [2]
				},
				[184301] = {
					"Cavern Seeker", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[174484] = {
					"Immovable Champion", -- [1]
					"The Shadowlands", -- [2]
				},
				[41096] = {
					"Naz'jar Oracle", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[131677] = {
					"Heartsbane Runeweaver", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[98368] = {
					"Ghostly Protector", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[205691] = {
					"Iridikron's Creation", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[127757] = {
					"Reanimated Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[189531] = {
					"Decayed Elder", -- [1]
					"Brackenhide Hollow", -- [2]
					"enUS", -- [3]
				},
				[137830] = {
					"Pallid Gorger", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[207796] = {
					"Burning Colossus", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[212673] = {
					"Naz'jar Ravager", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[95771] = {
					"Dreadsoul Ruiner", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[203812] = {
					"Voice From Beyond", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[189851] = {
					"Ritual Scout", -- [1]
					"Dragon Isles", -- [2]
				},
				[109908] = {
					"Nightmare Abomination", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[132126] = {
					"Gilded Priestess", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[44404] = {
					"Naz'jar Frost Witch", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[95772] = {
					"Frenzied Nightclaw", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[99358] = {
					"Rotheart Dryad", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[205408] = {
					"Infinite Timeslicer", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[40935] = {
					"Gilgoblin Hunter", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[40586] = {
					"Lady Naz'jar", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[186220] = {
					"Brackenhide Shaper", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[98949] = {
					"Smashspite the Hateful", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[98243] = {
					"Soul-Torn Champion", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[127799] = {
					"Dazar'ai Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[98275] = {
					"Risen Archer", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[103344] = {
					"Oakheart", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[131587] = {
					"Bewitched Captain", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[102781] = {
					"Fel Bat Pup", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[99359] = {
					"Rotheart Keeper", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[82682] = {
					"Archmage Sol", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[133912] = {
					"Bloodsworn Defiler", -- [1]
					"The Underrot", -- [2]
				},
				[184022] = {
					"Stonevault Geomancer", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[91008] = {
					"Rockbound Pelter", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[129529] = {
					"Blacktooth Scrapper", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[99200] = {
					"Dresaron", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[185680] = {
					"Vy Relic", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[45919] = {
					"Young Storm Dragon", -- [1]
					"The Vortex Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[122963] = {
					"Rezan", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[45935] = {
					"Temple Adept", -- [1]
					"The Vortex Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[174843] = {
					"Stoneborn Maitre D'", -- [1]
					"Castle Nathria", -- [2]
				},
				[122970] = {
					"Shadowblade Stalker", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[131812] = {
					"Heartsbane Soulcharmer", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[181856] = {
					"Point Defense Drone", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[186191] = {
					"Decay Speaker", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[99360] = {
					"Vilethorn Blossom", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[212775] = {
					"Faceless Seer", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[199547] = {
					"Frostforged Zealot", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[100526] = {
					"Tormented Bloodseeker", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[127315] = {
					"Reanimation Totem", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[40923] = {
					"Unstable Corruption", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[98691] = {
					"Risen Scout", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[102277] = {
					"Deadeye Decoy", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[135989] = {
					"Shieldbearer of Zul", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[122965] = {
					"Vol'kaal", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[205158] = {
					"Spurlok, Timesworn Sentinel", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[194990] = {
					"Stormseeker Acolyte", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[212981] = {
					"Hapless Assistant", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[102962] = {
					"Nightmare Abomination", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[212681] = {
					"Vicious Snap Dragon", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[185683] = {
					"Wo Relic", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[102788] = {
					"Felspite Dominator", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[86372] = {
					"Melded Berserker", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[101074] = {
					"Hatespawn Whelpling", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[99664] = {
					"Restless Soul", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[39616] = {
					"Naz'jar Invader", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[101991] = {
					"Nightmare Dweller", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[125977] = {
					"Reanimation Totem", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[45912] = {
					"Wild Vortex", -- [1]
					"The Vortex Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[186226] = {
					"Fetid Rotsinger", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[208698] = {
					"Infinite Riftmage", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[81864] = {
					"Dreadpetal", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[213607] = {
					"Deep Sea Murloc", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[128435] = {
					"Toxic Saurid", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[122971] = {
					"Dazar'ai Juggernaut", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[102095] = {
					"Risen Lancer", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[185685] = {
					"Urh Relic", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[186227] = {
					"Monstrous Decay", -- [1]
					"Brackenhide Hollow", -- [2]
					"enUS", -- [3]
				},
				[205384] = {
					"Infinite Chronoweaver", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[205151] = {
					"Tyr's Vanguard", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[98900] = {
					"Wyrmtongue Trickster", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[100539] = {
					"Taintheart Deadeye", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[98677] = {
					"Rook Spiderling", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[212778] = {
					"Minion of Ghur'sha", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[59555] = {
					"Haunting Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[98792] = {
					"Wyrmtongue Scavenger", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[190340] = {
					"Refti Defender", -- [1]
					"Halls of Infusion", -- [2]
				},
				[100991] = {
					"Strangling Roots", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[102094] = {
					"Risen Swordsman", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[200126] = {
					"Fallen Waterspeaker", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[100529] = {
					"Hatespawn Slime", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[186420] = {
					"Earthen Weaver", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[135329] = {
					"Matron Bryndle", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[186229] = {
					"Wilted Oak", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[82039] = {
					"Rockspine Stinger", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[185528] = {
					"Trickclaw Mystic", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[131009] = {
					"Spirit of Gold", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[129517] = {
					"Reanimated Raptor", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[131819] = {
					"Coven Diviner", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[185656] = {
					"Filth Caller", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[40936] = {
					"Faceless Watcher", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[213770] = {
					"Ink of Ozumat", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[100527] = {
					"Dreadfire Imp", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[185529] = {
					"Bracken Warscourge", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[138187] = {
					"Grotesque Horror", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[98280] = {
					"Risen Arcanist", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[101839] = {
					"Risen Companion", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[81737] = {
					"Unchecked Growth", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[203857] = {
					"Horde Warlock", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[128434] = {
					"Feasting Skyscreamer", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[205152] = {
					"Lerai, Timesworn Maiden", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[214012] = {
					"Dark Colossus", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[194487] = {
					"Vile Rothexer", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[122973] = {
					"Dazar'ai Confessor", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[40925] = {
					"Tainted Sentry", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[134284] = {
					"Fallen Deathspeaker", -- [1]
					"The Underrot", -- [2]
				},
				[81985] = {
					"Everbloom Cultivator", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[84957] = {
					"Putrid Pyromancer", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[131492] = {
					"Devout Blood Priest", -- [1]
					"The Underrot", -- [2]
				},
				[122984] = {
					"Dazar'ai Colossus", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[199333] = {
					"Frostbreath Arachnid", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[183671] = {
					"Monstrous Soul", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[96512] = {
					"Archdruid Glaidalis", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[205804] = {
					"Risen Dragon", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[95779] = {
					"Festerhide Grizzly", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[99365] = {
					"Taintheart Stalker", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[102404] = {
					"Stoneclaw Grubmaster", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[131821] = {
					"Faceless Maiden", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[90998] = {
					"Blightshard Shaper", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[100531] = {
					"Bloodtainted Fury", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[84400] = {
					"Flourishing Ancient", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[98696] = {
					"Illysanna Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[194241] = {
					"Vile Rothexer", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[199749] = {
					"Timestream Anomaly", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[213806] = {
					"Splotch", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[84990] = {
					"Addled Arcanomancer", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[189234] = {
					"Frostbreath Arachnid", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[84767] = {
					"Twisted Abomination", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[202969] = {
					"Empty Recollection", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[197671] = {
					"Volatile Infuser", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[84989] = {
					"Infested Icecaller", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[99366] = {
					"Taintheart Summoner", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[120651] = {
					"Explosives", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[134024] = {
					"Devouring Maggot", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[81819] = {
					"Everbloom Naturalist", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[179733] = {
					"Invigorating Fish Stick", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[98681] = {
					"Rook Spinner", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[131436] = {
					"Chosen Blood Matron", -- [1]
					"The Underrot", -- [2]
				},
				[187224] = {
					"Vile Rothexer", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[131666] = {
					"Coven Thornshaper", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[129600] = {
					"Bilge Rat Brinescale", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[122972] = {
					"Dazar'ai Augur", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[40634] = {
					"Naz'jar Tempest Witch", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[45928] = {
					"Executor of the Caliph", -- [1]
					"The Vortex Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[127879] = {
					"Shieldbearer of Zul", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[122969] = {
					"Zanchuli Witch-Doctor", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[203799] = {
					"Horde Axe Thrower", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[138281] = {
					"Faceless Corruptor", -- [1]
					"The Underrot", -- [2]
				},
				[107288] = {
					"Vilethorn Sapling", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[178141] = {
					"Murkbrine Scalebinder", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[81820] = {
					"Everbloom Mender", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[135365] = {
					"Matron Alma", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[129553] = {
					"Dinomancer Kish'o", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[206064] = {
					"Coalesced Moment", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[206351] = {
					"Alliance Conjuror", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[205363] = {
					"Time-Lost Waveshaper", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[129601] = {
					"Cutwater Harpooner", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[178142] = {
					"Murkbrine Fishmancer", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[133835] = {
					"Feral Bloodswarmer", -- [1]
					"The Underrot", -- [2]
				},
				[101549] = {
					"Arcane Minion", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[98810] = {
					"Wrathguard Bladelord", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[95766] = {
					"Crazed Razorbeak", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[98370] = {
					"Ghostly Councilor", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[45477] = {
					"Gust Soldier", -- [1]
					"The Vortex Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[101679] = {
					"Dreadsoul Poisoner", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[100532] = {
					"Bloodtainted Burster", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[190342] = {
					"Containment Apparatus", -- [1]
					"Halls of Infusion", -- [2]
				},
				[100486] = {
					"Risen Arcanist", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
			},
			["health_selection_overlay_alpha"] = 0.2999999821186066,
			["aura_padding"] = 0.5,
			["indicator_worldboss"] = false,
			["cast_statusbar_fadeout_time"] = 0.2000000029802322,
			["aura_stack_size"] = 8,
			["aura_height2"] = 15,
			["script_auto_imported"] = {
				["Relics 9.2 M Dungeons"] = 2,
				["Cast - Effect After Cast [P]"] = 2,
				["Cast - Circular Swipe"] = 4,
				["Aura - Debuff Alert"] = 12,
				["Cast - Castbar is Timer [P]"] = 2,
				["Cast - Ultra Important"] = 14,
				["Add - Health Markers [P]"] = 2,
				["Cast - Small Alert"] = 12,
				["Add - Important [P]"] = 4,
				["Unit - Main Target"] = 11,
				["Aura - Blink Time Left"] = 13,
				["Add - Tag Number [P]"] = 2,
				["Unit - Health Markers"] = 12,
				["Cast - Tank Interrupt"] = 12,
				["Cast - Important Target [P]"] = 2,
				["Cast - Very Important"] = 15,
				["Cast - Alert + Timer [P]"] = 4,
				["Aura is Shield [P]"] = 2,
				["Add - Warning [P]"] = 5,
				["Unit - Show Energy"] = 11,
				["Aura While Casting [P]"] = 1,
				["Cast - Big Alert"] = 14,
				["Cast - Glowing [P]"] = 10,
				["Cast - Shield Interrupt"] = 2,
				["Auto Set Skull"] = 11,
				["Fixate"] = 11,
				["Spiteful Affix"] = 3,
				["Explosion Affix M+"] = 14,
				["Add - Non Elite Trash [P]"] = 4,
				["Cast - Stop Casting"] = 4,
				["Cast - On Going Cast [P]"] = 2,
				["Countdown"] = 11,
				["Fixate by Unit Buff [P]"] = 2,
				["Cast - Frontal Cone"] = 15,
				["Add - Explode on Die [P]"] = 1,
				["Aura - Buff Alert"] = 15,
				["Cast - Quick Flash"] = 2,
				["Unit - Important"] = 11,
				["Fixate On You"] = 11,
			},
			["extra_icon_anchor"] = {
				["x"] = -5,
				["side"] = 10,
			},
			["extra_icon_wide_icon"] = false,
			["range_check_alpha"] = 1,
			["aura_frame2_anchor"] = {
				["y"] = 17.97999572753906,
				["x"] = -1,
				["side"] = 1,
			},
			["aura_alpha"] = 1,
			["auto_toggle_friendly"] = {
				["cities"] = false,
				["world"] = false,
			},
			["debuff_show_cc"] = false,
			["extra_icon_width"] = 20,
			["health_statusbar_texture"] = "Details Flat",
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Attacking Specific Unit"] = 2,
				["Cast Bar Icon Config"] = 2,
				["Execute Range"] = 1,
				["Hide Neutral Units"] = 1,
				["Extra Border"] = 2,
				["Target Color"] = 3,
				["Aura Reorder"] = 3,
				["Combo Points"] = 6,
			},
			["castbar_target_text_size"] = 9,
			["aura_frame1_anchor"] = {
				["y"] = 1.289993286132813,
				["x"] = -1,
				["side"] = 1,
			},
			["indicator_rare"] = false,
			["extra_icon_stack_font"] = "Expressway",
			["aura_height"] = 15,
			["aura2_x_offset"] = -1,
			["target_indicator"] = "NONE",
			["saved_cvars"] = {
				["ShowClassColorInNameplate"] = "1",
				["nameplateOverlapV"] = "0.99999994039536",
				["ShowNamePlateLoseAggroFlash"] = "1",
				["nameplateShowEnemyMinus"] = "1",
				["NamePlateClassificationScale"] = "1",
				["nameplateShowFriendlyTotems"] = "0",
				["nameplatePersonalHideDelaySeconds"] = "0.2",
				["nameplateShowFriendlyPets"] = "0",
				["nameplateOverlapH"] = "1.0099999904633",
				["nameplateTargetRadialPosition"] = "1",
				["nameplateMinAlpha"] = "0.90135484",
				["nameplateResourceOnTarget"] = "0",
				["nameplateShowAll"] = "1",
				["nameplateMaxDistance"] = "60",
				["nameplateShowFriendlyMinions"] = "0",
				["nameplateSelfScale"] = "1",
				["nameplateTargetBehindMaxDistance"] = "30",
				["nameplateShowEnemies"] = "1",
				["NamePlateVerticalScale"] = "1",
				["nameplateSelectedAlpha"] = "1",
				["nameplateShowSelf"] = "0",
				["nameplateMotionSpeed"] = "0.05",
				["nameplateShowEnemyMinions"] = "1",
				["nameplateShowEnemyPets"] = "0",
				["nameplateShowFriendlyNPCs"] = "0",
				["nameplateSelectedScale"] = "1.2000000476837",
				["nameplateShowFriends"] = "0",
				["nameplateMotion"] = "1",
				["nameplateMinScale"] = "1",
				["nameplateOtherTopInset"] = "0.085",
				["nameplateMinAlphaDistance"] = "-158489.31924611",
				["nameplateShowFriendlyGuardians"] = "0",
				["nameplateSelfAlpha"] = "1",
				["nameplateOccludedAlphaMult"] = "1",
				["NamePlateHorizontalScale"] = "1",
				["nameplateLargeTopInset"] = "0.085",
				["nameplateShowOnlyNames"] = "0",
			},
			["login_counter"] = 16221,
			["extra_icon_caster_name"] = false,
			["click_space_friendly"] = {
				1, -- [1]
				1, -- [2]
			},
			["aura_stack_font"] = "Gotham Narrow Black",
			["hide_friendly_castbars"] = true,
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1,
				},
			},
			["bossmod_cooldown_text_enabled"] = false,
			["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator7",
			["plate_config"] = {
				["global_health_height"] = 18,
				["friendlyplayer"] = {
					["cast"] = {
						120, -- [1]
						1, -- [2]
					},
					["actorname_text_color"] = {
						0.4941176470588236, -- [1]
						0.5843137254901961, -- [2]
					},
					["actorname_text_font"] = "Friz Quadrata TT",
					["actorname_text_spacing"] = 8,
					["only_damaged"] = false,
					["only_thename"] = true,
					["cast_incombat"] = {
						120, -- [1]
						1, -- [2]
					},
					["actorname_friend_color"] = {
						0.7098039215686275, -- [1]
					},
					["actorname_text_size"] = 9,
					["buff_frame_y_offset"] = 9.689994812011719,
					["actorname_guild_color"] = {
						0.7137254901960784, -- [1]
						0.9294117647058824, -- [2]
						1, -- [3]
					},
					["health_incombat"] = {
						120, -- [1]
						18, -- [2]
					},
					["health"] = {
						120, -- [1]
						18, -- [2]
					},
				},
				["friendlynpc"] = {
					["big_actorname_text_size"] = 10,
					["spellpercent_text_font"] = "SUI",
					["level_text_size"] = 8,
					["cast"] = {
						120, -- [1]
						12, -- [2]
					},
					["big_actortitle_text_size"] = 10,
					["spellpercent_text_anchor"] = {
						["x"] = 0,
					},
					["spellname_text_outline"] = "OUTLINE",
					["level_text_font"] = "SUI",
					["actorname_text_font"] = "SUI",
					["actorname_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 8,
					["quest_color_enemy"] = {
						0.6392156862745098, -- [1]
						1, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["big_actortitle_text_font"] = "SUI",
					["percent_text_ooc"] = true,
					["health_incombat"] = {
						nil, -- [1]
						18, -- [2]
					},
					["percent_text_anchor"] = {
						["x"] = -2.069999694824219,
						["side"] = 11,
					},
					["spellname_text_font"] = "Friz Quadrata TT",
					["quest_color_neutral"] = {
						0, -- [1]
						1, -- [2]
						0.7686274509803921, -- [3]
						1, -- [4]
					},
					["actorname_text_size"] = 9,
					["percent_text_enabled"] = true,
					["spellpercent_text_size"] = 8,
					["actorname_text_anchor"] = {
						["y"] = -0.0200042724609375,
						["x"] = 2.110000610351563,
						["side"] = 10,
					},
					["spellpercent_text_enabled"] = true,
					["percent_text_font"] = "SUI",
					["spellname_text_size"] = 8,
					["health"] = {
						120, -- [1]
						18, -- [2]
					},
					["castbar_offset"] = -3.300003051757813,
					["big_actorname_text_font"] = "SUI",
				},
				["enemynpc"] = {
					["spellpercent_text_font"] = "SUI",
					["cast"] = {
						120, -- [1]
						12, -- [2]
					},
					["spellpercent_text_anchor"] = {
						["x"] = 0,
					},
					["level_text_font"] = "SUI",
					["actorname_text_font"] = "SUI",
					["actorname_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 8,
					["quest_color_enemy"] = {
						0.6392156862745098, -- [1]
						1, -- [2]
					},
					["big_actortitle_text_font"] = "SUI",
					["cast_incombat"] = {
						nil, -- [1]
						12, -- [2]
					},
					["percent_text_anchor"] = {
						["x"] = -2.069999694824219,
						["side"] = 11,
					},
					["spellname_text_font"] = "Friz Quadrata TT",
					["quest_color_neutral"] = {
						0, -- [1]
						1, -- [2]
						0.7686274509803921, -- [3]
					},
					["big_actorname_text_font"] = "SUI",
					["castbar_offset"] = -3.300003051757813,
					["spellpercent_text_size"] = 8,
					["actorname_text_anchor"] = {
						["y"] = -0.0200042724609375,
						["x"] = 2.110000610351563,
						["side"] = 10,
					},
					["percent_text_font"] = "SUI",
					["spellname_text_size"] = 8,
					["health"] = {
						120, -- [1]
						18, -- [2]
					},
					["actorname_text_size"] = 9,
					["percent_show_health"] = false,
					["health_incombat"] = {
						nil, -- [1]
						18, -- [2]
					},
					["level_text_enabled"] = false,
				},
				["enemyplayer"] = {
					["big_actorname_text_size"] = 10,
					["spellpercent_text_font"] = "SUI",
					["level_text_size"] = 8,
					["cast"] = {
						120, -- [1]
						12, -- [2]
					},
					["spellpercent_text_anchor"] = {
						["x"] = 0,
					},
					["spellname_text_outline"] = "OUTLINE",
					["level_text_font"] = "SUI",
					["actorname_text_font"] = "SUI",
					["all_names"] = true,
					["actorname_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 8,
					["quest_color_enemy"] = {
						0.6392156862745098, -- [1]
						1, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["big_actortitle_text_font"] = "SUI",
					["spellpercent_text_size"] = 8,
					["percent_text_anchor"] = {
						["x"] = -2.069999694824219,
						["side"] = 11,
					},
					["spellname_text_font"] = "Friz Quadrata TT",
					["quest_color_neutral"] = {
						0, -- [1]
						1, -- [2]
						0.7686274509803921, -- [3]
						1, -- [4]
					},
					["actorname_text_size"] = 9,
					["big_actorname_text_font"] = "SUI",
					["big_actortitle_text_size"] = 10,
					["castbar_offset"] = -3.300003051757813,
					["percent_show_health"] = false,
					["percent_text_font"] = "SUI",
					["quest_enabled"] = true,
					["quest_color_enabled"] = true,
					["spellname_text_size"] = 8,
					["health"] = {
						120, -- [1]
						18, -- [2]
					},
					["actorname_text_anchor"] = {
						["y"] = -0.0200042724609375,
						["x"] = 2.110000610351563,
						["side"] = 10,
					},
					["health_incombat"] = {
						nil, -- [1]
						18, -- [2]
					},
					["level_text_enabled"] = false,
				},
				["global_health_width"] = 120,
			},
			["aura_y_offset"] = 1.289993286132813,
			["use_ui_parent"] = true,
			["focus_texture"] = "Details Flat",
			["indicator_elite"] = false,
			["cast_statusbar_use_fade_effects"] = false,
			["resources_settings"] = {
				["chr"] = {
					["Player-1305-0B0683B1"] = "HolyPower",
					["Player-1305-0C55F6F5"] = "SoulShards",
					["Player-1305-0B96B985"] = "Chi",
					["Player-1305-0BAAA7FF"] = "ArcaneCharges",
					["Player-1305-0B8454A1"] = "ComboPoints",
					["Player-1305-0C54E461"] = "Essence",
					["Player-1305-0C55B776"] = "Runes",
					["Player-1305-0C915E37"] = "HolyPower",
				},
			},
			["border_color"] = {
				0.0392156862745098, -- [1]
				0.0392156862745098, -- [2]
				0.0392156862745098, -- [3]
				1, -- [4]
			},
			["focus_color"] = {
				0.996078431372549, -- [1]
				nil, -- [2]
				0.6392156862745098, -- [3]
				1, -- [4]
			},
			["npc_colors"] = {
				[206066] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[40943] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[135240] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[129602] = {
					true, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[192934] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[130909] = {
					true, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[133870] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[201222] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[201223] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[195135] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[40577] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[179963] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[40633] = {
					true, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[104247] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[186658] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[184140] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[205337] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[98813] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[95769] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[186787] = {
					true, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[184301] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[174484] = {
					true, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[41096] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[40634] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[205691] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[189531] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[137830] = {
					true, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[207796] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[212673] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[95771] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[203812] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[189851] = {
					true, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[44404] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[95772] = {
					true, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[99358] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[205408] = {
					true, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[186220] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[131587] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[99359] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[184022] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[91008] = {
					true, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[129529] = {
					true, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[185680] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[45919] = {
					true, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[45935] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[174843] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[131812] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[186191] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[212775] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[199547] = {
					true, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[98691] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[205158] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[194990] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[185683] = {
					true, -- [1]
					false, -- [2]
					"darkgray", -- [3]
				},
				[86372] = {
					true, -- [1]
					false, -- [2]
					"darkcyan", -- [3]
				},
				[101991] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[45912] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[186226] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[208698] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[185685] = {
					true, -- [1]
					false, -- [2]
					"darkcyan", -- [3]
				},
				[186227] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[205384] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[59555] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[190340] = {
					true, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[200126] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[186420] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[186229] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[82039] = {
					true, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[185528] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[131819] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[185656] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[100527] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[185529] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[98280] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[131436] = {
					true, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[128434] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[100486] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[100532] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[194487] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[40925] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[131821] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[190342] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[183671] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[84957] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[102788] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[122984] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[199333] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[134284] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[84989] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[205804] = {
					true, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[95779] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[99365] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[98370] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[138187] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[90998] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[129601] = {
					true, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[84400] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[135329] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[101549] = {
					true, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[199749] = {
					true, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[213806] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[84990] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[129553] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[84767] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[202969] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[181856] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[133835] = {
					true, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[99366] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[206064] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[134024] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[81819] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[179733] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[98681] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[187224] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[203799] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[131666] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[129600] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[133912] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[138281] = {
					true, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[131677] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[120651] = {
					true, -- [1]
					false, -- [2]
					"DRUID", -- [3]
				},
				[194241] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[122969] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[45928] = {
					true, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[122972] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[178141] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[81820] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[135365] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[197671] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[189234] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[206351] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[205363] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[100531] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[178142] = {
					true, -- [1]
					false, -- [2]
					"darkcyan", -- [3]
				},
				[102404] = {
					true, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[101839] = {
					true, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[98810] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[131492] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[81985] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[45477] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[122973] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
				[214012] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[205152] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[203857] = {
					true, -- [1]
					false, -- [2]
					"dodgerblue", -- [3]
				},
			},
			["hook_data"] = {
				{
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["Time"] = 1597097268,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
					["Enabled"] = false,
					["Revision"] = 348,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option4",
							["Value"] = "Icon Settings:",
							["Name"] = "Icon Settings",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "showIcon",
							["Value"] = true,
							["Name"] = "Show Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "iconOnLeftSide",
							["Value"] = true,
							["Name"] = "Icon on Left Side",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Use Big Icon",
							["Value"] = false,
							["Key"] = "useFullSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Name"] = "Icon Size Offset",
							["Value"] = 0,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "iconSizeOffset",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Key"] = "iconPadding",
							["Value"] = 0,
							["Name"] = "Icon Padding",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Key"] = "option5",
							["Value"] = "Can't Interrupt Texture:",
							["Name"] = "Interrupt Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "showTexture",
							["Value"] = true,
							["Name"] = "Show Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Key"] = "iconTexturePath",
							["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
							["Name"] = "Texture Path",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Key"] = "desaturatedTexture",
							["Value"] = true,
							["Name"] = "Texture Desaturated",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "textureColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.3056715726852417, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Name"] = "Texture Width",
							["Value"] = 10,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureWidth",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 16,
							["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
							["Min"] = -16,
							["Key"] = "textureHeightMod",
							["Value"] = 0,
							["Name"] = "Texture Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Name"] = "Texture Position",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "texturePosition",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "textureAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Alpha",
						}, -- [16]
					},
					["HooksTemp"] = {
					},
					["Name"] = "Cast Bar Icon Settings [P]",
				}, -- [1]
				{
					["Enabled"] = false,
					["Revision"] = 50,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["PlaterCore"] = 1,
					["Author"] = "Kastfall-Azralon",
					["version"] = -1,
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1547392935,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["Name"] = "Color Automation [Plater]",
				}, -- [2]
				{
					["Enabled"] = false,
					["Revision"] = 84,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["PlaterCore"] = 1,
					["Author"] = "Ahwa-Azralon",
					["version"] = -1,
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1547406548,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 135358,
					["Name"] = "Execute Range [Plater]",
				}, -- [3]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
					},
					["Time"] = 1620377377,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["Enabled"] = false,
					["Revision"] = 363,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Name"] = "Attacking Specific Unit [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "color",
							["Value"] = {
								0.5019607843137255, -- [1]
								0.5019607843137255, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "changeBarColor",
							["Value"] = true,
							["Name"] = "Change Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "changeBorderColor",
							["Value"] = false,
							["Name"] = "Change Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "resetColors",
							["Value"] = true,
							["Name"] = "Reset Colors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [4]
				{
					["Enabled"] = false,
					["Revision"] = 73,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["PlaterCore"] = 1,
					["Author"] = "Izimode-Azralon",
					["version"] = -1,
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1541606242,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 1990989,
					["Name"] = "Hide Neutral Units [Plater]",
				}, -- [5]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Time"] = 1621935143,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
							["103"] = true,
							["Enabled"] = true,
						},
					},
					["url"] = "",
					["Icon"] = 135426,
					["Enabled"] = false,
					["Revision"] = 284,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Name"] = "Combo Points [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["version"] = -1,
				}, -- [6]
				{
					["Enabled"] = false,
					["Revision"] = 176,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["PlaterCore"] = 1,
					["Author"] = "Tecno-Azralon",
					["version"] = -1,
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Time"] = 1547409079,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 133689,
					["Name"] = "Extra Border [Plater]",
				}, -- [7]
				{
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["Time"] = 1596791840,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 574574,
					["Enabled"] = false,
					["Revision"] = 93,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["Name"] = "Reorder Nameplate [Plater]",
				}, -- [8]
				{
					["Enabled"] = false,
					["Revision"] = 59,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["PlaterCore"] = 1,
					["Author"] = "Izimode-Azralon",
					["version"] = -1,
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
					},
					["Time"] = 1554138845,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 136207,
					["Name"] = "Don't Have Aura [Plater]",
				}, -- [9]
				{
					["Enabled"] = false,
					["Revision"] = 182,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["PlaterCore"] = 1,
					["Author"] = "Izimode-Azralon",
					["version"] = -1,
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Time"] = 1548278227,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 1966587,
					["Name"] = "Players Targeting a Target [Plater]",
				}, -- [10]
				{
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1608663128,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Enabled"] = false,
					["Revision"] = 356,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["Name"] = "Aura Reorder [Plater]",
				}, -- [11]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["semver"] = "",
					["HooksTemp"] = {
					},
					["PlaterCore"] = 1,
					["Author"] = "Izimode-Azralon",
					["version"] = -1,
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1552354619,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["LastHookEdited"] = "",
					["url"] = "",
					["Icon"] = 878211,
					["Name"] = "Current Target Color [Plater]",
				}, -- [12]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --create the border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n    end    \n    \n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1699662001,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/c0XUQAYJq/2",
					["Icon"] = 133004,
					["Enabled"] = true,
					["Revision"] = 85,
					["semver"] = "1.0.1",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Adds a pixels perfect border around the cast bar.",
					["Prio"] = 99,
					["Name"] = "Cast Bar Border",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["version"] = 2,
				}, -- [13]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.castBar.IconOverlayFrame) then\n        unitFrame.castBar.IconOverlayFrame:Hide()\n    end\n    \nend\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.AnchorSide = \"left\"\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    function envTable.BuildFrames (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.IconBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.IconBorder:SetBorderSizes (size, size, size, size)\n        castBar.IconBorder:UpdateSizes()\n        \n        local icon = castBar.Icon\n        if (envTable.AnchorSide == \"left\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\")\n            icon:SetPoint (\"bottomright\", castBar, \"bottomleft\")\n            icon:SetWidth (icon:GetHeight())\n            \n        elseif (envTable.AnchorSide == \"right\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\")\n            icon:SetPoint (\"bottomleft\", castBar, \"bottomright\")\n            icon:SetWidth (icon:GetHeight())\n            \n        end\n        \n        icon:Show()\n        castBar.IconOverlayFrame:Show()\n    end\n    \n    if (not unitFrame.castBar.IconOverlayFrame) then\n        --icon support frame\n        unitFrame.castBar.IconOverlayFrame = CreateFrame (\"frame\", nil, unitFrame.castBar)\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"topleft\", unitFrame.castBar.Icon, \"topleft\")\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"bottomright\", unitFrame.castBar.Icon, \"bottomright\")\n        \n        unitFrame.castBar.IconBorder = CreateFrame (\"frame\", nil,  unitFrame.castBar.IconOverlayFrame, \"NamePlateFullBorderTemplate\")\n    end    \n    \nend\n\n\n\n\n",
					},
					["Time"] = 1615932237,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "https://wago.io/T37kZgkmc/1",
					["Icon"] = 133004,
					["Enabled"] = false,
					["Revision"] = 41,
					["semver"] = "1.0.0",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Adds a pixels perfect border around the cast bar spell icon.",
					["Prio"] = 99,
					["version"] = 1,
					["PlaterCore"] = 1,
					["Name"] = "Cast Icon Border",
					["LastHookEdited"] = "",
					["Options"] = {
					},
				}, -- [14]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["UID"] = "0x62b266b87b9762c",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local inspired = Plater.NameplateHasAura(unitFrame, 188389)\n    \n    if inspired then\n        Plater.SetNameplateColor(unitFrame, '#ff4d00')\n    end\n    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    \nend",
					},
					["Time"] = 1666531198,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/JF69pybNC/1",
					["Icon"] = 135813,
					["Enabled"] = false,
					["Revision"] = 54,
					["semver"] = "1.0.0",
					["Author"] = "Vanellope-Arathor",
					["Desc"] = "When the target is debuffed his nameplate will change colour to bright and really good visible pink.",
					["Prio"] = 99,
					["Name"] = "Flame Shock Color",
					["PlaterCore"] = 1,
					["version"] = 1,
					["HooksTemp"] = {
					},
					["Options"] = {
					},
				}, -- [15]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local name = unitFrame.healthBar.unitName:GetText()\n    \n    if (name) then\n        unitFrame.healthBar.unitName:SetText(name:gsub('(%S+) ',function(t) return t:sub(1,1)..'.' end))\n    end\nend\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1699662008,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/Rcm39UnZV/2",
					["Icon"] = "INTERFACE\\ICONS\\Ability_Spy",
					["Enabled"] = true,
					["Revision"] = 427,
					["Options"] = {
					},
					["Author"] = "Zenshoes-Area 52",
					["Desc"] = "Abbreviates names on nameplates",
					["Prio"] = 99,
					["version"] = 2,
					["PlaterCore"] = 1,
					["Name"] = "Abbreviated Names",
					["LastHookEdited"] = "",
					["semver"] = "1.0.1",
				}, -- [16]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --percent of total cast bar size, default: 60% spell name\n    local spellNameSize = 0.60\n    \n    --update function\n    function envTable.UpdateCastBarName(unitId, castBar)\n        --do nothing if interrupted\n        if castBar.IsInterrupted then\n            return\n            \n        end\n        \n        --get the target's unitId \n        local targetUnitId = unitId .. \"target\"\n        \n        --does the unit exists?\n        if (UnitExists(targetUnitId)) then\n            \n            --get the target name\n            local targetName = UnitName(targetUnitId)\n            \n            --does the target name exists?\n            if (targetName) then\n                --get the current spell name\n                local spellName = castBar.SpellName\n                --reset the text in the cast bar\n                castBar.Text:SetText(spellName)\n                \n                --paint the target name with the player's class color\n                local targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                \n                --castbar width\n                local castBarWidth = castBar:GetWidth()\n                DetailsFramework:TruncateText (castBar.Text, castBarWidth * spellNameSize)\n                \n                --set the new text in the castbar spell name fontstring\n                local currentText = castBar.Text:GetText()\n                castBar.Text:SetText(currentText .. \" [\" .. targetNameByColor .. \"]\")\n                DetailsFramework:TruncateText (castBar.Text, castBarWidth)                \n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1706893090,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/pj8kSlqkK/2",
					["Icon"] = 2126355,
					["Enabled"] = true,
					["Revision"] = 56,
					["semver"] = "1.0.1",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show the cast target name with the spell name",
					["Prio"] = 99,
					["Name"] = "Cast Target on Spell Name",
					["PlaterCore"] = 1,
					["version"] = 2,
					["LastHookEdited"] = "Constructor",
					["Options"] = {
					},
				}, -- [17]
			},
			["aura_width"] = 20,
			["bossmod_support_enabled"] = false,
			["ghost_auras"] = {
				["auras"] = {
					["PRIEST"] = {
						[3] = {
							[589] = true,
							[34914] = true,
						},
					},
					["WARLOCK"] = {
						{
							[172] = true,
							[980] = true,
						}, -- [1]
					},
				},
			},
			["target_highlight_color"] = {
				0.9921568627450981, -- [1]
				0.9490196078431372, -- [2]
			},
			["extra_icon_auras"] = {
				"Flame Shock", -- [1]
			},
			["castbar_target_font"] = "Friz Quadrata TT",
			["indicator_spec"] = false,
			["show_interrupt_author"] = false,
			["aura_x_offset"] = -1,
			["first_run3"] = true,
			["buffs_on_aura2"] = true,
			["ui_parent_scale_tune"] = 1.406249965948519,
			["profile_name"] = "TakUI",
			["castbar_icon_customization_enabled"] = false,
			["health_statusbar_bgtexture"] = "Details Flat",
			["aura_breakline_space"] = 0.5,
			["indicator_raidmark_anchor"] = {
				["x"] = -5.420005798339844,
				["side"] = 11,
			},
			["tank"] = {
				["colors"] = {
					["pulling_from_tank"] = {
						0.996078431372549, -- [1]
						0.1725490196078431, -- [2]
						0.1725490196078431, -- [3]
					},
					["aggro"] = {
						0.996078431372549, -- [1]
						0.1725490196078431, -- [2]
						0.1725490196078431, -- [3]
					},
					["noaggro"] = {
						0.996078431372549, -- [1]
						0.4274509803921568, -- [2]
					},
					["pulling"] = {
						0.996078431372549, -- [1]
						0.1725490196078431, -- [2]
						0.1725490196078431, -- [3]
					},
				},
			},
			["aura_tracker"] = {
				["debuff"] = {
					290422, -- [1]
				},
				["debuff_banned"] = {
					[299906] = true,
					[118297] = false,
					[356372] = false,
					[353354] = false,
					[324260] = true,
					[356329] = false,
					[427729] = true,
				},
				["buff_tracked"] = {
					[227931] = true,
					[233210] = true,
					[209859] = true,
					[163689] = true,
					[297133] = true,
				},
			},
			["cast_statusbar_color"] = {
				0.996078431372549, -- [1]
				0.8196078431372549, -- [2]
				nil, -- [3]
				0.9600000008940697, -- [4]
			},
			["update_throttle"] = 0.5,
			["tocversion"] = 100205,
			["indicator_extra_raidmark"] = false,
			["patch_version"] = 35,
			["target_highlight_alpha"] = 0.5399999618530273,
			["target_shady_alpha"] = 0,
			["target_highlight_height"] = 13,
			["target_shady_enabled"] = false,
			["extra_icon_auras_mine"] = {
				["Hex"] = false,
				["Flame Shock"] = true,
			},
			["castbar_icon_attach_to_side"] = "right",
			["cast_statusbar_bgcolor"] = {
				0.0392156862745098, -- [1]
				0.0392156862745098, -- [2]
				0.0392156862745098, -- [3]
				1, -- [4]
			},
			["cast_statusbar_color_interrupted"] = {
				0.996078431372549, -- [1]
				0.1725490196078431, -- [2]
				0.1725490196078431, -- [3]
			},
			["range_check_in_range_or_target_alpha"] = 1,
			["extra_icon_show_timer"] = false,
			["number_region_first_run"] = true,
			["aura_grow_direction"] = 3,
			["aura_width2"] = 20,
			["health_statusbar_bgcolor"] = {
				0.0392156862745098, -- [1]
				0.0392156862745098, -- [2]
				0.0392156862745098, -- [3]
				1, -- [4]
			},
			["class_colors"] = {
				["DEATHKNIGHT"] = {
					["colorStr"] = "ffc31d3a",
				},
				["WARRIOR"] = {
					["colorStr"] = "ffc69a6d",
				},
				["PALADIN"] = {
					["colorStr"] = "fff48bb9",
				},
				["WARLOCK"] = {
					["colorStr"] = "ff8687ed",
				},
				["DEMONHUNTER"] = {
					["colorStr"] = "ffa22fc8",
				},
				["SHAMAN"] = {
					["colorStr"] = "ff006fdd",
				},
				["DRUID"] = {
					["colorStr"] = "ffff7c09",
				},
				["EVOKER"] = {
					["colorStr"] = "ff33937e",
				},
				["ROGUE"] = {
					["colorStr"] = "fffff467",
				},
			},
			["aura2_grow_direction"] = 3,
			["cast_statusbar_texture"] = "PlaterBackground 2",
			["indicator_faction"] = false,
			["extra_icon_height"] = 20,
			["dps"] = {
				["colors"] = {
					["solo"] = {
						0.996078431372549, -- [1]
						0.1725490196078431, -- [2]
						0.1725490196078431, -- [3]
					},
					["aggro"] = {
						0.996078431372549, -- [1]
						0.1725490196078431, -- [2]
						0.1725490196078431, -- [3]
					},
					["noaggro"] = {
						0.996078431372549, -- [1]
						0.1725490196078431, -- [2]
						0.1725490196078431, -- [3]
					},
					["pulling"] = {
						0.996078431372549, -- [1]
						0.1725490196078431, -- [2]
						0.1725490196078431, -- [3]
					},
				},
			},
			["range_check_alpha_friendlies"] = 1,
			["aura_timer_text_font"] = "SUI",
			["cast_statusbar_color_finished"] = {
				0.996078431372549, -- [1]
				0.1725490196078431, -- [2]
				0.1725490196078431, -- [3]
			},
			["auto_toggle_stacking"] = {
				["party"] = false,
				["raid"] = false,
				["arena"] = false,
				["world"] = false,
			},
			["auto_toggle_enemy"] = {
				["party"] = false,
				["raid"] = false,
				["arena"] = false,
				["world"] = false,
			},
		},
	},
}
PlaterLanguage = {
	["language"] = "enUS",
	["version"] = 1,
}
PlaterLogs = {
	["_general_logs"] = {
		"2024-03-07 22:49:54 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Rentaki", -- [1]
		"2024-03-06 06:48:04 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Rentaki", -- [2]
		"2024-03-05 06:59:03 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Rentaki", -- [3]
		"2024-03-04 23:25:27 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Rentaki", -- [4]
		"2024-03-04 23:00:09 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Rentaki", -- [5]
		"2024-03-04 22:31:27 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Rentaki", -- [6]
		"2024-03-04 20:12:03 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Rentaki", -- [7]
		"2024-03-04 19:18:45 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Rentaki", -- [8]
		"2024-03-04 07:06:09 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Rentaki", -- [9]
		"2024-03-03 23:47:43 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Rentaki", -- [10]
		"2024-03-03 19:04:32 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Rentaki", -- [11]
		"2024-03-03 18:53:18 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Rentaki", -- [12]
		"2024-03-02 16:54:43 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Rentaki", -- [13]
		"2024-03-02 14:12:53 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Rentaki", -- [14]
		"2024-02-29 21:33:50 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Rentaki", -- [15]
		"2024-02-29 19:51:33 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Rentaki", -- [16]
		"2024-02-29 17:44:06 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Rentaki", -- [17]
		"2024-02-28 22:10:35 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Rentaki", -- [18]
		"2024-02-28 22:00:56 | INIT | Plater-v576a-Retail | Framework v515 | 10.2.5 | enUS | Rentaki", -- [19]
	},
	["_error_logs"] = {
	},
}
